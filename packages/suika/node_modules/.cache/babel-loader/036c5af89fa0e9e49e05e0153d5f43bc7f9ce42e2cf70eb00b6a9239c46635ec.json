{"ast":null,"code":"import { noop } from '../../../utils/common';\nimport { MoveElementsCommand } from '../../commands/move_elements';\n/**\n * select tool\n *\n * move selected elements\n */\nexport class SelectMoveTool {\n  constructor(editor) {\n    this.editor = editor;\n    this.startPoint = {\n      x: -1,\n      y: -1\n    };\n    this.startPoints = [];\n    this.dragPoint = null;\n    this.dx = 0;\n    this.dy = 0;\n    this.prevBBoxPos = {\n      x: -1,\n      y: -1\n    };\n    this.unbindEvents = noop;\n  }\n  active() {\n    const hotkeysManager = this.editor.hostEventManager;\n    const moveWhenToggleShift = () => {\n      if (this.dragPoint) {\n        this.move();\n      }\n    };\n    hotkeysManager.on('shiftToggle', moveWhenToggleShift);\n    this.unbindEvents = () => {\n      hotkeysManager.off('shiftToggle', moveWhenToggleShift);\n    };\n  }\n  inactive() {\n    this.unbindEvents();\n  }\n  start(e) {\n    this.startPoint = this.editor.getSceneCursorXY(e);\n    const selectedElements = this.editor.selectedElements.getItems();\n    this.startPoints = selectedElements.map(element => ({\n      x: element.x,\n      y: element.y\n    }));\n    const bBox = this.editor.selectedElements.getBBox();\n    if (!bBox) {\n      console.error(\"selected elements should't be empty when moving, please report us issue\");\n    } else {\n      this.prevBBoxPos = {\n        x: bBox.x,\n        y: bBox.y\n      };\n    }\n    this.editor.refLine.cacheXYToBbox();\n  }\n  drag(e) {\n    this.dragPoint = this.editor.getCursorXY(e);\n    this.move();\n  }\n  move() {\n    this.editor.sceneGraph.showOutline = false;\n    const {\n      x,\n      y\n    } = this.editor.viewportCoordsToScene(this.dragPoint.x, this.dragPoint.y);\n    let dx = this.dx = x - this.startPoint.x;\n    let dy = this.dy = y - this.startPoint.y;\n    if (this.editor.hostEventManager.isShiftPressing) {\n      if (Math.abs(dx) > Math.abs(dy)) {\n        dy = 0;\n      } else {\n        dx = 0;\n      }\n    }\n\n    // in the moving phase, AABBox's x and y should round to be integer (snap to pixel grid)\n    if (this.editor.setting.get('snapToPixelGrid')) {\n      // if dx == 0, we thing it is in vertical moving.\n      if (dx !== 0) dx = Math.round(this.prevBBoxPos.x + dx) - this.prevBBoxPos.x;\n      // similarly dy\n      if (dy !== 0) dy = Math.round(this.prevBBoxPos.y + dy) - this.prevBBoxPos.y;\n    }\n    const selectedElements = this.editor.selectedElements.getItems();\n    const startPoints = this.startPoints;\n    for (let i = 0, len = selectedElements.length; i < len; i++) {\n      selectedElements[i].x = startPoints[i].x + dx;\n      selectedElements[i].y = startPoints[i].y + dy;\n    }\n\n    // 参照线处理（目前不处理 “吸附到像素网格的情况” 的特殊情况）\n\n    const {\n      offsetX,\n      offsetY\n    } = this.editor.refLine.updateRefLine();\n    for (let i = 0, len = selectedElements.length; i < len; i++) {\n      selectedElements[i].x = startPoints[i].x + dx + offsetX;\n      selectedElements[i].y = startPoints[i].y + dy + offsetY;\n    }\n    this.editor.sceneGraph.render();\n  }\n  end(e, isEnableDrag) {\n    const selectedElements = this.editor.selectedElements.getItems();\n    if (selectedElements.length === 0 || !isEnableDrag) {\n      // 移动的时候元素被删除了，或者撤销导致为空\n      // TODO: 属性复原\n      return;\n    }\n    if (this.dx !== 0 || this.dy !== 0) {\n      this.editor.commandManager.pushCommand(new MoveElementsCommand('Move Elements', selectedElements, this.dx, this.dy));\n    }\n  }\n  afterEnd() {\n    this.dragPoint = null;\n    this.editor.sceneGraph.showOutline = true;\n    this.editor.refLine.clear();\n    this.editor.sceneGraph.render();\n  }\n}","map":{"version":3,"names":["noop","MoveElementsCommand","SelectMoveTool","constructor","editor","startPoint","x","y","startPoints","dragPoint","dx","dy","prevBBoxPos","unbindEvents","active","hotkeysManager","hostEventManager","moveWhenToggleShift","move","on","off","inactive","start","e","getSceneCursorXY","selectedElements","getItems","map","element","bBox","getBBox","console","error","refLine","cacheXYToBbox","drag","getCursorXY","sceneGraph","showOutline","viewportCoordsToScene","isShiftPressing","Math","abs","setting","get","round","i","len","length","offsetX","offsetY","updateRefLine","render","end","isEnableDrag","commandManager","pushCommand","afterEnd","clear"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/editor/tools/tool_select/tool_select_move.ts"],"sourcesContent":["import { IPoint } from '../../../type';\nimport { noop } from '../../../utils/common';\nimport { MoveElementsCommand } from '../../commands/move_elements';\nimport { Editor } from '../../editor';\nimport { IBaseTool } from '../type';\n\n/**\n * select tool\n *\n * move selected elements\n */\nexport class SelectMoveTool implements IBaseTool {\n  private startPoint: IPoint = { x: -1, y: -1 };\n  private startPoints: IPoint[] = [];\n  private dragPoint: IPoint | null = null;\n  private dx = 0;\n  private dy = 0;\n  private prevBBoxPos: IPoint = { x: -1, y: -1 };\n\n  unbindEvents = noop;\n\n  constructor(private editor: Editor) {}\n  active() {\n    const hotkeysManager = this.editor.hostEventManager;\n    const moveWhenToggleShift = () => {\n      if (this.dragPoint) {\n        this.move();\n      }\n    };\n    hotkeysManager.on('shiftToggle', moveWhenToggleShift);\n    this.unbindEvents = () => {\n      hotkeysManager.off('shiftToggle', moveWhenToggleShift);\n    };\n  }\n  inactive() {\n    this.unbindEvents();\n  }\n  start(e: PointerEvent) {\n    this.startPoint = this.editor.getSceneCursorXY(e);\n    const selectedElements = this.editor.selectedElements.getItems();\n    this.startPoints = selectedElements.map((element) => ({\n      x: element.x,\n      y: element.y,\n    }));\n    const bBox = this.editor.selectedElements.getBBox();\n    if (!bBox) {\n      console.error(\n        \"selected elements should't be empty when moving, please report us issue\",\n      );\n    } else {\n      this.prevBBoxPos = { x: bBox.x, y: bBox.y };\n    }\n\n    this.editor.refLine.cacheXYToBbox();\n  }\n  drag(e: PointerEvent) {\n    this.dragPoint = this.editor.getCursorXY(e);\n    this.move();\n  }\n  private move() {\n    this.editor.sceneGraph.showOutline = false;\n    const { x, y } = this.editor.viewportCoordsToScene(\n      this.dragPoint!.x,\n      this.dragPoint!.y,\n    );\n\n    let dx = (this.dx = x - this.startPoint.x);\n    let dy = (this.dy = y - this.startPoint.y);\n\n    if (this.editor.hostEventManager.isShiftPressing) {\n      if (Math.abs(dx) > Math.abs(dy)) {\n        dy = 0;\n      } else {\n        dx = 0;\n      }\n    }\n\n    // in the moving phase, AABBox's x and y should round to be integer (snap to pixel grid)\n    if (this.editor.setting.get('snapToPixelGrid')) {\n      // if dx == 0, we thing it is in vertical moving.\n      if (dx !== 0)\n        dx = Math.round(this.prevBBoxPos.x + dx) - this.prevBBoxPos.x;\n      // similarly dy\n      if (dy !== 0)\n        dy = Math.round(this.prevBBoxPos.y + dy) - this.prevBBoxPos.y;\n    }\n\n    const selectedElements = this.editor.selectedElements.getItems();\n    const startPoints = this.startPoints;\n    for (let i = 0, len = selectedElements.length; i < len; i++) {\n      selectedElements[i].x = startPoints[i].x + dx;\n      selectedElements[i].y = startPoints[i].y + dy;\n    }\n\n    // 参照线处理（目前不处理 “吸附到像素网格的情况” 的特殊情况）\n\n    const { offsetX, offsetY } = this.editor.refLine.updateRefLine();\n\n    for (let i = 0, len = selectedElements.length; i < len; i++) {\n      selectedElements[i].x = startPoints[i].x + dx + offsetX;\n      selectedElements[i].y = startPoints[i].y + dy + offsetY;\n    }\n\n    this.editor.sceneGraph.render();\n  }\n  end(e: PointerEvent, isEnableDrag: boolean) {\n    const selectedElements = this.editor.selectedElements.getItems();\n    if (selectedElements.length === 0 || !isEnableDrag) {\n      // 移动的时候元素被删除了，或者撤销导致为空\n      // TODO: 属性复原\n      return;\n    }\n\n    if (this.dx !== 0 || this.dy !== 0) {\n      this.editor.commandManager.pushCommand(\n        new MoveElementsCommand(\n          'Move Elements',\n          selectedElements,\n          this.dx,\n          this.dy,\n        ),\n      );\n    }\n  }\n  afterEnd() {\n    this.dragPoint = null;\n\n    this.editor.sceneGraph.showOutline = true;\n    this.editor.refLine.clear();\n    this.editor.sceneGraph.render();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}