{"ast":null,"code":"var _jsxFileName = \"/Users/yangdan/zf-workspace/react/suika/packages/suika/src/components/input/CustomRuleInput/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomRuleInput = ({\n  value,\n  onBlur,\n  parser,\n  prefix\n}) => {\n  _s();\n  const inputRef = useRef(null);\n  const isActive = useRef(false);\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.value = String(value);\n    }\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"suika-custom-ruler-input-box\",\n    children: [prefix, /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      className: \"custom-rule-input\",\n      defaultValue: value,\n      onMouseUp: e => {\n        const el = e.currentTarget;\n        if (!isActive.current) {\n          el.select();\n        }\n        isActive.current = true;\n      },\n      onKeyDown: e => {\n        if (e.key === 'Enter' && !e.nativeEvent.isComposing) {\n          e.currentTarget.blur();\n        }\n      },\n      onBlur: e => {\n        isActive.current = false;\n        const selection = window.getSelection();\n        selection && selection.removeAllRanges();\n        if (inputRef.current) {\n          const str = inputRef.current.value.trim();\n          const newValue = parser(str, value);\n          if (newValue !== false) {\n            onBlur(newValue);\n          } else {\n            e.target.value = String(value);\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomRuleInput, \"uXPvlg7fFzxTD+xMqZVp117eWXY=\");\n_c = CustomRuleInput;\nexport default CustomRuleInput;\nvar _c;\n$RefreshReg$(_c, \"CustomRuleInput\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","CustomRuleInput","value","onBlur","parser","prefix","_s","inputRef","isActive","current","String","className","children","ref","defaultValue","onMouseUp","e","el","currentTarget","select","onKeyDown","key","nativeEvent","isComposing","blur","selection","window","getSelection","removeAllRanges","str","trim","newValue","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/components/input/CustomRuleInput/index.tsx"],"sourcesContent":["import React, { FC, useEffect, useRef } from 'react';\nimport './style.scss';\n\ninterface ICustomRuleInputProps {\n  parser: (newValue: string, preValue: string | number) => string | false;\n  value: string | number;\n  onBlur: (newValue: string) => void;\n  prefix?: React.ReactNode;\n}\n\nconst CustomRuleInput: FC<ICustomRuleInputProps> = ({\n  value,\n  onBlur,\n  parser,\n  prefix,\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isActive = useRef(false);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.value = String(value);\n    }\n  }, [value]);\n\n  return (\n    <div className=\"suika-custom-ruler-input-box\">\n      {prefix}\n      <input\n        ref={inputRef}\n        className=\"custom-rule-input\"\n        defaultValue={value}\n        onMouseUp={(e) => {\n          const el = e.currentTarget;\n          if (!isActive.current) {\n            el.select();\n          }\n          isActive.current = true;\n        }}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' && !e.nativeEvent.isComposing) {\n            e.currentTarget.blur();\n          }\n        }}\n        onBlur={(e) => {\n          isActive.current = false;\n          const selection = window.getSelection();\n          selection && selection.removeAllRanges();\n          if (inputRef.current) {\n            const str = inputRef.current.value.trim();\n            const newValue = parser(str, value);\n            if (newValue !== false) {\n              onBlur(newValue);\n            } else {\n              e.target.value = String(value);\n            }\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CustomRuleInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACpD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAStB,MAAMC,eAA0C,GAAGA,CAAC;EAClDC,KAAK;EACLC,MAAM;EACNC,MAAM;EACNC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,QAAQ,GAAGT,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAMU,QAAQ,GAAGV,MAAM,CAAC,KAAK,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,CAACE,OAAO,EAAE;MACpBF,QAAQ,CAACE,OAAO,CAACP,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAAC;IACxC;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IAAKW,SAAS,EAAC,8BAA8B;IAAAC,QAAA,GAC1CP,MAAM,eACPL,OAAA;MACEa,GAAG,EAAEN,QAAS;MACdI,SAAS,EAAC,mBAAmB;MAC7BG,YAAY,EAAEZ,KAAM;MACpBa,SAAS,EAAGC,CAAC,IAAK;QAChB,MAAMC,EAAE,GAAGD,CAAC,CAACE,aAAa;QAC1B,IAAI,CAACV,QAAQ,CAACC,OAAO,EAAE;UACrBQ,EAAE,CAACE,MAAM,CAAC,CAAC;QACb;QACAX,QAAQ,CAACC,OAAO,GAAG,IAAI;MACzB,CAAE;MACFW,SAAS,EAAGJ,CAAC,IAAK;QAChB,IAAIA,CAAC,CAACK,GAAG,KAAK,OAAO,IAAI,CAACL,CAAC,CAACM,WAAW,CAACC,WAAW,EAAE;UACnDP,CAAC,CAACE,aAAa,CAACM,IAAI,CAAC,CAAC;QACxB;MACF,CAAE;MACFrB,MAAM,EAAGa,CAAC,IAAK;QACbR,QAAQ,CAACC,OAAO,GAAG,KAAK;QACxB,MAAMgB,SAAS,GAAGC,MAAM,CAACC,YAAY,CAAC,CAAC;QACvCF,SAAS,IAAIA,SAAS,CAACG,eAAe,CAAC,CAAC;QACxC,IAAIrB,QAAQ,CAACE,OAAO,EAAE;UACpB,MAAMoB,GAAG,GAAGtB,QAAQ,CAACE,OAAO,CAACP,KAAK,CAAC4B,IAAI,CAAC,CAAC;UACzC,MAAMC,QAAQ,GAAG3B,MAAM,CAACyB,GAAG,EAAE3B,KAAK,CAAC;UACnC,IAAI6B,QAAQ,KAAK,KAAK,EAAE;YACtB5B,MAAM,CAAC4B,QAAQ,CAAC;UAClB,CAAC,MAAM;YACLf,CAAC,CAACgB,MAAM,CAAC9B,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAAC;UAChC;QACF;MACF;IAAE;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAnDIL,eAA0C;AAAAoC,EAAA,GAA1CpC,eAA0C;AAqDhD,eAAeA,eAAe;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}