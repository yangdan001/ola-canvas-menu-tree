{"ast":null,"code":"var _jsxFileName = \"/Users/yangdan/zf-workspace/react/suika/packages/suika/src/components/LeftTreeMenu/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst defaultData = [];\nconst generateData = (_level, _preKey, _tns) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || defaultData;\n  const children = [];\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({\n      title: key,\n      key\n    });\n    if (i < y) {\n      children.push(key);\n    }\n  }\n  if (_level < 0) {\n    return tns;\n  }\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\ngenerateData(z);\nconst App = () => {\n  _s();\n  const [gData, setGData] = useState(defaultData);\n  const [expandedKeys] = useState(['0-0', '0-0-0', '0-0-0-0']);\n  const onDragEnter = info => {\n    console.log(info);\n    // expandedKeys, set it when controlled is needed\n    // setExpandedKeys(info.expandedKeys)\n  };\n\n  const onDrop = info => {\n    console.log(info);\n    const dropKey = info.node.key;\n    const dragKey = info.dragNode.key;\n    const dropPos = info.node.pos.split('-');\n    const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n    const loop = (data, key, callback) => {\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].key === key) {\n          return callback(data[i], i, data);\n        }\n        if (data[i].children) {\n          loop(data[i].children, key, callback);\n        }\n      }\n    };\n    const data = [...gData];\n\n    // Find dragObject\n    let dragObj;\n    loop(data, dragKey, (item, index, arr) => {\n      arr.splice(index, 1);\n      dragObj = item;\n    });\n    if (!info.dropToGap) {\n      // Drop on the content\n      loop(data, dropKey, item => {\n        item.children = item.children || [];\n        // where to insert. New item was inserted to the start of the array in this example, but can be anywhere\n        item.children.unshift(dragObj);\n      });\n    } else if ((info.node.props.children || []).length > 0 &&\n    // Has children\n    info.node.props.expanded &&\n    // Is expanded\n    dropPosition === 1 // On the bottom gap\n    ) {\n      loop(data, dropKey, item => {\n        item.children = item.children || [];\n        // where to insert. New item was inserted to the start of the array in this example, but can be anywhere\n        item.children.unshift(dragObj);\n        // in previous version, we use item.children.push(dragObj) to insert the\n        // item to the tail of the children\n      });\n    } else {\n      let ar = [];\n      let i;\n      loop(data, dropKey, (_item, index, arr) => {\n        ar = arr;\n        i = index;\n      });\n      if (dropPosition === -1) {\n        ar.splice(i, 0, dragObj);\n      } else {\n        ar.splice(i + 1, 0, dragObj);\n      }\n    }\n    setGData(data);\n  };\n  return /*#__PURE__*/_jsxDEV(Tree, {\n    className: \"draggable-tree\",\n    defaultExpandedKeys: expandedKeys,\n    draggable: true,\n    blockNode: true,\n    onDragEnter: onDragEnter,\n    onDrop: onDrop,\n    treeData: gData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MiydPHbWgDMXKrGM/SbopO2uSNc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Tree","jsxDEV","_jsxDEV","x","y","z","defaultData","generateData","_level","_preKey","_tns","preKey","tns","children","i","key","push","title","level","forEach","index","App","_s","gData","setGData","expandedKeys","onDragEnter","info","console","log","onDrop","dropKey","node","dragKey","dragNode","dropPos","pos","split","dropPosition","Number","length","loop","data","callback","dragObj","item","arr","splice","dropToGap","unshift","props","expanded","ar","_item","className","defaultExpandedKeys","draggable","blockNode","treeData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/components/LeftTreeMenu/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree } from 'antd';\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst defaultData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || defaultData;\n\n  const children = [];\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({ title: key, key });\n    if (i < y) {\n      children.push(key);\n    }\n  }\n  if (_level < 0) {\n    return tns;\n  }\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\ngenerateData(z);\n\nconst App = () => {\n  const [gData, setGData] = useState(defaultData);\n  const [expandedKeys] = useState(['0-0', '0-0-0', '0-0-0-0']);\n\n  const onDragEnter = (info) => {\n    console.log(info);\n    // expandedKeys, set it when controlled is needed\n    // setExpandedKeys(info.expandedKeys)\n  };\n\n  const onDrop = (info) => {\n    console.log(info);\n    const dropKey = info.node.key;\n    const dragKey = info.dragNode.key;\n    const dropPos = info.node.pos.split('-');\n    const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n\n    const loop = (\n      data,\n      key,\n      callback,\n    ) => {\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].key === key) {\n          return callback(data[i], i, data);\n        }\n        if (data[i].children) {\n          loop(data[i].children, key, callback);\n        }\n      }\n    };\n    const data = [...gData];\n\n    // Find dragObject\n    let dragObj;\n    loop(data, dragKey, (item, index, arr) => {\n      arr.splice(index, 1);\n      dragObj = item;\n    });\n\n    if (!info.dropToGap) {\n      // Drop on the content\n      loop(data, dropKey, (item) => {\n        item.children = item.children || [];\n        // where to insert. New item was inserted to the start of the array in this example, but can be anywhere\n        item.children.unshift(dragObj);\n      });\n    } else if (\n      ((info.node ).props.children || []).length > 0 && // Has children\n      (info.node ).props.expanded && // Is expanded\n      dropPosition === 1 // On the bottom gap\n    ) {\n      loop(data, dropKey, (item) => {\n        item.children = item.children || [];\n        // where to insert. New item was inserted to the start of the array in this example, but can be anywhere\n        item.children.unshift(dragObj);\n        // in previous version, we use item.children.push(dragObj) to insert the\n        // item to the tail of the children\n      });\n    } else {\n      let ar = [];\n      let i;\n      loop(data, dropKey, (_item, index, arr) => {\n        ar = arr;\n        i = index;\n      });\n      if (dropPosition === -1) {\n        ar.splice(i, 0, dragObj);\n      } else {\n        ar.splice(i + 1, 0, dragObj);\n      }\n    }\n    setGData(data);\n  };\n\n  return (\n    <Tree\n      className=\"draggable-tree\"\n      defaultExpandedKeys={expandedKeys}\n      draggable\n      blockNode\n      onDragEnter={onDragEnter}\n      onDrop={onDrop}\n      treeData={gData}/>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5B,MAAMC,CAAC,GAAG,CAAC;AACX,MAAMC,CAAC,GAAG,CAAC;AACX,MAAMC,CAAC,GAAG,CAAC;AACX,MAAMC,WAAW,GAAG,EAAE;AAEtB,MAAMC,YAAY,GAAGA,CAACC,MAAM,EAAEC,OAAO,EAAEC,IAAI,KAAK;EAC9C,MAAMC,MAAM,GAAGF,OAAO,IAAI,GAAG;EAC7B,MAAMG,GAAG,GAAGF,IAAI,IAAIJ,WAAW;EAE/B,MAAMO,QAAQ,GAAG,EAAE;EACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,CAAC,EAAEW,CAAC,EAAE,EAAE;IAC1B,MAAMC,GAAG,GAAI,GAAEJ,MAAO,IAAGG,CAAE,EAAC;IAC5BF,GAAG,CAACI,IAAI,CAAC;MAAEC,KAAK,EAAEF,GAAG;MAAEA;IAAI,CAAC,CAAC;IAC7B,IAAID,CAAC,GAAGV,CAAC,EAAE;MACTS,QAAQ,CAACG,IAAI,CAACD,GAAG,CAAC;IACpB;EACF;EACA,IAAIP,MAAM,GAAG,CAAC,EAAE;IACd,OAAOI,GAAG;EACZ;EACA,MAAMM,KAAK,GAAGV,MAAM,GAAG,CAAC;EACxBK,QAAQ,CAACM,OAAO,CAAC,CAACJ,GAAG,EAAEK,KAAK,KAAK;IAC/BR,GAAG,CAACQ,KAAK,CAAC,CAACP,QAAQ,GAAG,EAAE;IACxB,OAAON,YAAY,CAACW,KAAK,EAAEH,GAAG,EAAEH,GAAG,CAACQ,KAAK,CAAC,CAACP,QAAQ,CAAC;EACtD,CAAC,CAAC;AACJ,CAAC;AACDN,YAAY,CAACF,CAAC,CAAC;AAEf,MAAMgB,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAACO,WAAW,CAAC;EAC/C,MAAM,CAACmB,YAAY,CAAC,GAAG1B,QAAQ,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;EAE5D,MAAM2B,WAAW,GAAIC,IAAI,IAAK;IAC5BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB;IACA;EACF,CAAC;;EAED,MAAMG,MAAM,GAAIH,IAAI,IAAK;IACvBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,MAAMI,OAAO,GAAGJ,IAAI,CAACK,IAAI,CAACjB,GAAG;IAC7B,MAAMkB,OAAO,GAAGN,IAAI,CAACO,QAAQ,CAACnB,GAAG;IACjC,MAAMoB,OAAO,GAAGR,IAAI,CAACK,IAAI,CAACI,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC;IACxC,MAAMC,YAAY,GAAGX,IAAI,CAACW,YAAY,GAAGC,MAAM,CAACJ,OAAO,CAACA,OAAO,CAACK,MAAM,GAAG,CAAC,CAAC,CAAC;IAE5E,MAAMC,IAAI,GAAGA,CACXC,IAAI,EACJ3B,GAAG,EACH4B,QAAQ,KACL;MACH,KAAK,IAAI7B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4B,IAAI,CAACF,MAAM,EAAE1B,CAAC,EAAE,EAAE;QACpC,IAAI4B,IAAI,CAAC5B,CAAC,CAAC,CAACC,GAAG,KAAKA,GAAG,EAAE;UACvB,OAAO4B,QAAQ,CAACD,IAAI,CAAC5B,CAAC,CAAC,EAAEA,CAAC,EAAE4B,IAAI,CAAC;QACnC;QACA,IAAIA,IAAI,CAAC5B,CAAC,CAAC,CAACD,QAAQ,EAAE;UACpB4B,IAAI,CAACC,IAAI,CAAC5B,CAAC,CAAC,CAACD,QAAQ,EAAEE,GAAG,EAAE4B,QAAQ,CAAC;QACvC;MACF;IACF,CAAC;IACD,MAAMD,IAAI,GAAG,CAAC,GAAGnB,KAAK,CAAC;;IAEvB;IACA,IAAIqB,OAAO;IACXH,IAAI,CAACC,IAAI,EAAET,OAAO,EAAE,CAACY,IAAI,EAAEzB,KAAK,EAAE0B,GAAG,KAAK;MACxCA,GAAG,CAACC,MAAM,CAAC3B,KAAK,EAAE,CAAC,CAAC;MACpBwB,OAAO,GAAGC,IAAI;IAChB,CAAC,CAAC;IAEF,IAAI,CAAClB,IAAI,CAACqB,SAAS,EAAE;MACnB;MACAP,IAAI,CAACC,IAAI,EAAEX,OAAO,EAAGc,IAAI,IAAK;QAC5BA,IAAI,CAAChC,QAAQ,GAAGgC,IAAI,CAAChC,QAAQ,IAAI,EAAE;QACnC;QACAgC,IAAI,CAAChC,QAAQ,CAACoC,OAAO,CAACL,OAAO,CAAC;MAChC,CAAC,CAAC;IACJ,CAAC,MAAM,IACL,CAAEjB,IAAI,CAACK,IAAI,CAAGkB,KAAK,CAACrC,QAAQ,IAAI,EAAE,EAAE2B,MAAM,GAAG,CAAC;IAAI;IACjDb,IAAI,CAACK,IAAI,CAAGkB,KAAK,CAACC,QAAQ;IAAI;IAC/Bb,YAAY,KAAK,CAAC,CAAC;IAAA,EACnB;MACAG,IAAI,CAACC,IAAI,EAAEX,OAAO,EAAGc,IAAI,IAAK;QAC5BA,IAAI,CAAChC,QAAQ,GAAGgC,IAAI,CAAChC,QAAQ,IAAI,EAAE;QACnC;QACAgC,IAAI,CAAChC,QAAQ,CAACoC,OAAO,CAACL,OAAO,CAAC;QAC9B;QACA;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAIQ,EAAE,GAAG,EAAE;MACX,IAAItC,CAAC;MACL2B,IAAI,CAACC,IAAI,EAAEX,OAAO,EAAE,CAACsB,KAAK,EAAEjC,KAAK,EAAE0B,GAAG,KAAK;QACzCM,EAAE,GAAGN,GAAG;QACRhC,CAAC,GAAGM,KAAK;MACX,CAAC,CAAC;MACF,IAAIkB,YAAY,KAAK,CAAC,CAAC,EAAE;QACvBc,EAAE,CAACL,MAAM,CAACjC,CAAC,EAAE,CAAC,EAAE8B,OAAO,CAAC;MAC1B,CAAC,MAAM;QACLQ,EAAE,CAACL,MAAM,CAACjC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE8B,OAAO,CAAC;MAC9B;IACF;IACApB,QAAQ,CAACkB,IAAI,CAAC;EAChB,CAAC;EAED,oBACExC,OAAA,CAACF,IAAI;IACHsD,SAAS,EAAC,gBAAgB;IAC1BC,mBAAmB,EAAE9B,YAAa;IAClC+B,SAAS;IACTC,SAAS;IACT/B,WAAW,EAAEA,WAAY;IACzBI,MAAM,EAAEA,MAAO;IACf4B,QAAQ,EAAEnC;EAAM;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAExB,CAAC;AAACxC,EAAA,CArFID,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AAuFT,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}