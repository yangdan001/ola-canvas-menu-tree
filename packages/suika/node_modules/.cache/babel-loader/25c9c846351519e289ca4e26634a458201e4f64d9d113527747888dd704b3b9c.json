{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { isObject } from '../utils';\nvar NetworkEventType;\n(function (NetworkEventType) {\n  NetworkEventType[\"ONLINE\"] = \"online\";\n  NetworkEventType[\"OFFLINE\"] = \"offline\";\n  NetworkEventType[\"CHANGE\"] = \"change\";\n})(NetworkEventType || (NetworkEventType = {}));\nfunction getConnection() {\n  const nav = navigator;\n  if (!isObject(nav)) return null;\n  return nav.connection || nav.mozConnection || nav.webkitConnection;\n}\nfunction getConnectionProperty() {\n  const c = getConnection();\n  if (!c) return {};\n  return {\n    rtt: c.rtt,\n    type: c.type,\n    saveData: c.saveData,\n    downlink: c.downlink,\n    downlinkMax: c.downlinkMax,\n    effectiveType: c.effectiveType\n  };\n}\nfunction useNetwork() {\n  const [state, setState] = useState(() => {\n    return Object.assign({\n      since: undefined,\n      online: navigator === null || navigator === void 0 ? void 0 : navigator.onLine\n    }, getConnectionProperty());\n  });\n  useEffect(() => {\n    const onOnline = () => {\n      setState(prevState => Object.assign(Object.assign({}, prevState), {\n        online: true,\n        since: new Date()\n      }));\n    };\n    const onOffline = () => {\n      setState(prevState => Object.assign(Object.assign({}, prevState), {\n        online: false,\n        since: new Date()\n      }));\n    };\n    const onConnectionChange = () => {\n      setState(prevState => Object.assign(Object.assign({}, prevState), getConnectionProperty()));\n    };\n    window.addEventListener(NetworkEventType.ONLINE, onOnline);\n    window.addEventListener(NetworkEventType.OFFLINE, onOffline);\n    const connection = getConnection();\n    connection === null || connection === void 0 ? void 0 : connection.addEventListener(NetworkEventType.CHANGE, onConnectionChange);\n    return () => {\n      window.removeEventListener(NetworkEventType.ONLINE, onOnline);\n      window.removeEventListener(NetworkEventType.OFFLINE, onOffline);\n      connection === null || connection === void 0 ? void 0 : connection.removeEventListener(NetworkEventType.CHANGE, onConnectionChange);\n    };\n  }, []);\n  return state;\n}\nexport default useNetwork;","map":{"version":3,"names":["useEffect","useState","isObject","NetworkEventType","getConnection","nav","navigator","connection","mozConnection","webkitConnection","getConnectionProperty","c","rtt","type","saveData","downlink","downlinkMax","effectiveType","useNetwork","state","setState","Object","assign","since","undefined","online","onLine","onOnline","prevState","Date","onOffline","onConnectionChange","window","addEventListener","ONLINE","OFFLINE","CHANGE","removeEventListener"],"sources":["/Users/yangdan/zf-workspace/react/suika/node_modules/.pnpm/registry.npmmirror.com+ahooks@3.7.4_react@18.2.0/node_modules/ahooks/es/useNetwork/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { isObject } from '../utils';\nvar NetworkEventType;\n(function (NetworkEventType) {\n  NetworkEventType[\"ONLINE\"] = \"online\";\n  NetworkEventType[\"OFFLINE\"] = \"offline\";\n  NetworkEventType[\"CHANGE\"] = \"change\";\n})(NetworkEventType || (NetworkEventType = {}));\nfunction getConnection() {\n  const nav = navigator;\n  if (!isObject(nav)) return null;\n  return nav.connection || nav.mozConnection || nav.webkitConnection;\n}\nfunction getConnectionProperty() {\n  const c = getConnection();\n  if (!c) return {};\n  return {\n    rtt: c.rtt,\n    type: c.type,\n    saveData: c.saveData,\n    downlink: c.downlink,\n    downlinkMax: c.downlinkMax,\n    effectiveType: c.effectiveType\n  };\n}\nfunction useNetwork() {\n  const [state, setState] = useState(() => {\n    return Object.assign({\n      since: undefined,\n      online: navigator === null || navigator === void 0 ? void 0 : navigator.onLine\n    }, getConnectionProperty());\n  });\n  useEffect(() => {\n    const onOnline = () => {\n      setState(prevState => Object.assign(Object.assign({}, prevState), {\n        online: true,\n        since: new Date()\n      }));\n    };\n    const onOffline = () => {\n      setState(prevState => Object.assign(Object.assign({}, prevState), {\n        online: false,\n        since: new Date()\n      }));\n    };\n    const onConnectionChange = () => {\n      setState(prevState => Object.assign(Object.assign({}, prevState), getConnectionProperty()));\n    };\n    window.addEventListener(NetworkEventType.ONLINE, onOnline);\n    window.addEventListener(NetworkEventType.OFFLINE, onOffline);\n    const connection = getConnection();\n    connection === null || connection === void 0 ? void 0 : connection.addEventListener(NetworkEventType.CHANGE, onConnectionChange);\n    return () => {\n      window.removeEventListener(NetworkEventType.ONLINE, onOnline);\n      window.removeEventListener(NetworkEventType.OFFLINE, onOffline);\n      connection === null || connection === void 0 ? void 0 : connection.removeEventListener(NetworkEventType.CHANGE, onConnectionChange);\n    };\n  }, []);\n  return state;\n}\nexport default useNetwork;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}