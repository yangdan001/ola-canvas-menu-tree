{"ast":null,"code":"import { arrMap } from '../../../utils/array_util';\nimport { remainDecimal } from '../../../utils/common';\nimport { transformRotate } from '../../../utils/transform';\nimport { SetElementsAttrs } from '../../commands/set_elements_attrs';\n/**\n * scale element\n */\nexport class SelectScaleTool {\n  constructor(editor) {\n    this.editor = editor;\n    this.startPoint = {\n      x: -1,\n      y: -1\n    };\n    this.handleName = void 0;\n    this.prevElements = [];\n    /**\n     * 参照点\n     */\n    this.referencePoint = {\n      x: -1,\n      y: -1\n    };\n  }\n  active() {\n    //\n  }\n  inactive() {\n    //\n  }\n  start(e) {\n    this.startPoint = this.editor.getSceneCursorXY(e);\n    const handleName = this.editor.sceneGraph.transformHandle.getNameByPoint(this.startPoint);\n    this.prevElements = arrMap(this.editor.selectedElements.getItems(), item => {\n      var _item$rotation;\n      return {\n        x: item.x,\n        y: item.y,\n        width: item.width,\n        height: item.height,\n        rotation: (_item$rotation = item.rotation) !== null && _item$rotation !== void 0 ? _item$rotation : 0\n      };\n    });\n    if (!handleName || handleName === 'rotation') {\n      throw new Error(`handleName ${handleName} is invalid`);\n    }\n    this.handleName = handleName;\n    switch (handleName) {\n      case 'se':\n        this.referencePoint = this.editor.sceneGraph.transformHandle.handle.nw;\n        break;\n      // TODO: other handle\n    }\n  }\n\n  drag(e) {\n    this.editor.commandManager.disableRedoUndo();\n    this.editor.hostEventManager.disableDelete();\n    let lastPoint = this.editor.getSceneCursorXY(e);\n    let referencePoint = this.referencePoint;\n    const selectItems = this.editor.selectedElements.getItems();\n    // 右下角\n    if (this.handleName === 'se') {\n      // 转换回来\n      if (selectItems.length === 1 && selectItems[0].rotation) {\n        const cx = (lastPoint.x + this.referencePoint.x) / 2;\n        const cy = (lastPoint.y + this.referencePoint.y) / 2;\n        lastPoint = transformRotate(lastPoint.x, lastPoint.y, -selectItems[0].rotation, cx, cy);\n        referencePoint = transformRotate(referencePoint.x, referencePoint.y, -selectItems[0].rotation, cx, cy);\n      }\n    }\n    let width = lastPoint.x - referencePoint.x;\n    let height = lastPoint.y - referencePoint.y;\n\n    // for (const item of selectItems) {\n    //   item.width = width;\n    //   item.height = height;\n    // }\n\n    if (width === 0 || height === 0) {\n      return;\n    }\n    for (const item of selectItems) {\n      if (width < 0) {\n        width = 1;\n      }\n      if (height < 0) {\n        height = 1;\n      }\n      item.resizeAndKeepRotatedXY({\n        width: remainDecimal(width, 5),\n        height: remainDecimal(height, 5)\n      });\n    }\n    this.editor.sceneGraph.render();\n  }\n  end(e, isEnableDrag) {\n    const items = this.editor.selectedElements.getItems();\n    if (items.length === 0 || !isEnableDrag) {\n      return;\n    }\n    this.editor.commandManager.pushCommand(new SetElementsAttrs('scale select elements', items, arrMap(items, item => ({\n      x: item.x,\n      y: item.y,\n      width: item.width,\n      height: item.height,\n      rotation: item.rotation\n    })), this.prevElements));\n    this.editor.commandManager.enableRedoUndo();\n    this.editor.hostEventManager.enableDelete();\n  }\n  afterEnd() {\n    this.prevElements = [];\n  }\n}","map":{"version":3,"names":["arrMap","remainDecimal","transformRotate","SetElementsAttrs","SelectScaleTool","constructor","editor","startPoint","x","y","handleName","prevElements","referencePoint","active","inactive","start","e","getSceneCursorXY","sceneGraph","transformHandle","getNameByPoint","selectedElements","getItems","item","_item$rotation","width","height","rotation","Error","handle","nw","drag","commandManager","disableRedoUndo","hostEventManager","disableDelete","lastPoint","selectItems","length","cx","cy","resizeAndKeepRotatedXY","render","end","isEnableDrag","items","pushCommand","enableRedoUndo","enableDelete","afterEnd"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/editor/tools/tool_select/tool_select_scale.ts"],"sourcesContent":["import { IPoint } from '../../../type';\nimport { arrMap } from '../../../utils/array_util';\nimport { remainDecimal } from '../../../utils/common';\nimport { transformRotate } from '../../../utils/transform';\nimport { SetElementsAttrs } from '../../commands/set_elements_attrs';\nimport { Editor } from '../../editor';\nimport { HandleName } from '../../scene/transform_handle';\nimport { IBaseTool } from '../type';\n\n/**\n * scale element\n */\nexport class SelectScaleTool implements IBaseTool {\n  private startPoint: IPoint = { x: -1, y: -1 };\n  private handleName!: Exclude<HandleName, 'rotation'>;\n  private prevElements: Array<{\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    rotation: number;\n  }> = [];\n  /**\n   * 参照点\n   */\n  private referencePoint: IPoint = { x: -1, y: -1 };\n\n  constructor(private editor: Editor) {}\n\n  active() {\n    //\n  }\n  inactive() {\n    //\n  }\n  start(e: PointerEvent) {\n    this.startPoint = this.editor.getSceneCursorXY(e);\n    const handleName = this.editor.sceneGraph.transformHandle.getNameByPoint(\n      this.startPoint,\n    );\n\n    this.prevElements = arrMap(\n      this.editor.selectedElements.getItems(),\n      (item) => ({\n        x: item.x,\n        y: item.y,\n        width: item.width,\n        height: item.height,\n        rotation: item.rotation ?? 0,\n      }),\n    );\n    if (!handleName || handleName === 'rotation') {\n      throw new Error(`handleName ${handleName} is invalid`);\n    }\n    this.handleName = handleName;\n    switch (handleName) {\n      case 'se':\n        this.referencePoint = this.editor.sceneGraph.transformHandle.handle!.nw;\n        break;\n      // TODO: other handle\n    }\n  }\n  drag(e: PointerEvent) {\n    this.editor.commandManager.disableRedoUndo();\n    this.editor.hostEventManager.disableDelete();\n\n    let lastPoint = this.editor.getSceneCursorXY(e);\n    let referencePoint = this.referencePoint;\n    const selectItems = this.editor.selectedElements.getItems();\n    // 右下角\n    if (this.handleName === 'se') {\n      // 转换回来\n      if (selectItems.length === 1 && selectItems[0].rotation) {\n        const cx = (lastPoint.x + this.referencePoint.x) / 2;\n        const cy = (lastPoint.y + this.referencePoint.y) / 2;\n        lastPoint = transformRotate(\n          lastPoint.x,\n          lastPoint.y,\n          -selectItems[0].rotation,\n          cx,\n          cy,\n        );\n        referencePoint = transformRotate(\n          referencePoint.x,\n          referencePoint.y,\n          -selectItems[0].rotation,\n          cx,\n          cy,\n        );\n      }\n    }\n\n    let width = lastPoint.x - referencePoint.x;\n    let height = lastPoint.y - referencePoint.y;\n\n    // for (const item of selectItems) {\n    //   item.width = width;\n    //   item.height = height;\n    // }\n\n    if (width === 0 || height === 0) {\n      return;\n    }\n\n    for (const item of selectItems) {\n      if (width < 0) {\n        width = 1;\n      }\n      if (height < 0) {\n        height = 1;\n      }\n      item.resizeAndKeepRotatedXY({\n        width: remainDecimal(width, 5),\n        height: remainDecimal(height, 5),\n      });\n    }\n\n    this.editor.sceneGraph.render();\n  }\n  end(e: PointerEvent, isEnableDrag: boolean) {\n    const items = this.editor.selectedElements.getItems();\n    if (items.length === 0 || !isEnableDrag) {\n      return;\n    }\n    this.editor.commandManager.pushCommand(\n      new SetElementsAttrs(\n        'scale select elements',\n        items,\n        arrMap(items, (item) => ({\n          x: item.x,\n          y: item.y,\n          width: item.width,\n          height: item.height,\n          rotation: item.rotation,\n        })),\n        this.prevElements,\n      ),\n    );\n\n    this.editor.commandManager.enableRedoUndo();\n    this.editor.hostEventManager.enableDelete();\n  }\n  afterEnd() {\n    this.prevElements = [];\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}