{"ast":null,"code":"import { SceneGraph } from './scene/scene_graph';\nimport { genId, sceneCoordsToViewportUtil, viewportCoordsToSceneUtil } from '../utils/common';\nimport { CommandManager } from './commands/command_manager';\nimport { HostEventManager } from './host_event_manager';\nimport Ruler from './ruler';\nimport SelectedElements from './selected_elements';\nimport { Setting } from './setting';\nimport { ToolManager } from './tools/tool_manager';\nimport { ViewportManager } from './viewport_manager';\nimport { ZoomManager } from './zoom_manager';\nimport { AutoSaveGraphs } from './store/auto-save-graphs';\nimport { TextEditor } from './text/text_editor';\nimport { RefLine } from './ref_line';\nimport { ClipboardManager } from './clipboard';\nimport { KeyBindingManager } from './key_binding_manager';\nexport class Editor {\n  constructor(options) {\n    this.containerElement = void 0;\n    this.canvasElement = void 0;\n    this.ctx = void 0;\n    this.appVersion = 'suika-editor_0.0.1';\n    this.paperId = void 0;\n    this.sceneGraph = void 0;\n    this.setting = void 0;\n    this.viewportManager = void 0;\n    this.toolManager = void 0;\n    this.commandManager = void 0;\n    this.zoomManager = void 0;\n    this.keybindingManager = void 0;\n    this.hostEventManager = void 0;\n    this.clipboard = void 0;\n    this.selectedElements = void 0;\n    this.ruler = void 0;\n    this.refLine = void 0;\n    this.textEditor = void 0;\n    this.autoSaveGraphs = void 0;\n    this.containerElement = options.containerElement;\n    this.canvasElement = document.createElement('canvas');\n    this.containerElement.appendChild(this.canvasElement);\n    this.ctx = this.canvasElement.getContext('2d');\n    this.setting = new Setting();\n    if (options.offsetX) {\n      this.setting.set('offsetX', options.offsetX);\n    }\n    if (options.offsetY) {\n      this.setting.set('offsetY', options.offsetY);\n    }\n    this.keybindingManager = new KeyBindingManager(this);\n    this.keybindingManager.bindEvent();\n    this.sceneGraph = new SceneGraph(this);\n    this.viewportManager = new ViewportManager(this);\n    this.toolManager = new ToolManager(this);\n    this.commandManager = new CommandManager(this);\n    this.zoomManager = new ZoomManager(this);\n    this.selectedElements = new SelectedElements(this);\n    this.ruler = new Ruler(this);\n    this.refLine = new RefLine(this);\n    this.textEditor = new TextEditor(this);\n    this.hostEventManager = new HostEventManager(this);\n    this.hostEventManager.bindHotkeys();\n    this.clipboard = new ClipboardManager(this);\n    this.clipboard.bindEvents();\n    this.autoSaveGraphs = new AutoSaveGraphs(this);\n    const data = this.autoSaveGraphs.load();\n    if (data) {\n      this.sceneGraph.load(data.data);\n      this.paperId = data.paperId;\n    }\n    this.paperId ??= genId();\n    this.autoSaveGraphs.autoSave();\n\n    // 设置初始视口\n    this.viewportManager.setViewport({\n      x: -options.width / 2,\n      y: -options.height / 2,\n      width: options.width,\n      height: options.height\n    });\n    this.zoomManager.zoomToFit(1);\n\n    /**\n     * setViewport 其实会修改 canvas 的宽高，浏览器的 DOM 更新是异步的，\n     * 所以下面的 render 要异步执行\n     */\n    Promise.resolve().then(() => {\n      this.sceneGraph.render();\n    });\n  }\n  destroy() {\n    this.containerElement.removeChild(this.canvasElement);\n    this.textEditor.destroy();\n    this.keybindingManager.destroy();\n    this.hostEventManager.destroy();\n    this.clipboard.destroy();\n    this.toolManager.unbindEvent();\n    this.toolManager.destroy();\n  }\n  setCursor(cursor) {\n    this.canvasElement.style.cursor = cursor;\n  }\n  getCursor() {\n    return this.canvasElement.style.cursor;\n  }\n  /**\n   * 视口坐标 转 场景坐标\n   */\n  viewportCoordsToScene(x, y, round = false) {\n    const zoom = this.zoomManager.getZoom();\n    const {\n      x: scrollX,\n      y: scrollY\n    } = this.viewportManager.getViewport();\n    return viewportCoordsToSceneUtil(x, y, zoom, scrollX, scrollY, round);\n  }\n  sceneCoordsToViewport(x, y) {\n    const zoom = this.zoomManager.getZoom();\n    const {\n      x: scrollX,\n      y: scrollY\n    } = this.viewportManager.getViewport();\n    return sceneCoordsToViewportUtil(x, y, zoom, scrollX, scrollY);\n  }\n  getCursorXY(event) {\n    return {\n      x: event.clientX - this.setting.get('offsetX'),\n      y: event.clientY - this.setting.get('offsetY')\n    };\n  }\n  getSceneCursorXY(event, round = false) {\n    const {\n      x,\n      y\n    } = this.getCursorXY(event);\n    return this.viewportCoordsToScene(x, y, round);\n  }\n  moveElements(elements, dx, dy) {\n    for (const element of elements) {\n      element.x += dx;\n      element.y += dy;\n    }\n  }\n}","map":{"version":3,"names":["SceneGraph","genId","sceneCoordsToViewportUtil","viewportCoordsToSceneUtil","CommandManager","HostEventManager","Ruler","SelectedElements","Setting","ToolManager","ViewportManager","ZoomManager","AutoSaveGraphs","TextEditor","RefLine","ClipboardManager","KeyBindingManager","Editor","constructor","options","containerElement","canvasElement","ctx","appVersion","paperId","sceneGraph","setting","viewportManager","toolManager","commandManager","zoomManager","keybindingManager","hostEventManager","clipboard","selectedElements","ruler","refLine","textEditor","autoSaveGraphs","document","createElement","appendChild","getContext","offsetX","set","offsetY","bindEvent","bindHotkeys","bindEvents","data","load","autoSave","setViewport","x","width","y","height","zoomToFit","Promise","resolve","then","render","destroy","removeChild","unbindEvent","setCursor","cursor","style","getCursor","viewportCoordsToScene","round","zoom","getZoom","scrollX","scrollY","getViewport","sceneCoordsToViewport","getCursorXY","event","clientX","get","clientY","getSceneCursorXY","moveElements","elements","dx","dy","element"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/editor/editor.ts"],"sourcesContent":["import { SceneGraph } from './scene/scene_graph';\nimport {\n  genId,\n  sceneCoordsToViewportUtil,\n  viewportCoordsToSceneUtil,\n} from '../utils/common';\nimport { CommandManager } from './commands/command_manager';\nimport { HostEventManager } from './host_event_manager';\nimport Ruler from './ruler';\nimport SelectedElements from './selected_elements';\nimport { Setting } from './setting';\nimport { ToolManager } from './tools/tool_manager';\nimport { ViewportManager } from './viewport_manager';\nimport { ZoomManager } from './zoom_manager';\nimport { AutoSaveGraphs } from './store/auto-save-graphs';\nimport { GraphAttrs } from './scene/graph';\nimport { TextEditor } from './text/text_editor';\nimport { RefLine } from './ref_line';\nimport { ClipboardManager } from './clipboard';\nimport { KeyBindingManager } from './key_binding_manager';\n\ninterface IEditorOptions {\n  containerElement: HTMLDivElement;\n  width: number;\n  height: number;\n  offsetX?: number;\n  offsetY?: number;\n}\n\nexport class Editor {\n  containerElement: HTMLDivElement;\n  canvasElement: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n\n  appVersion = 'suika-editor_0.0.1';\n  paperId: string;\n\n  sceneGraph: SceneGraph;\n\n  setting: Setting;\n\n  viewportManager: ViewportManager;\n\n  toolManager: ToolManager;\n  commandManager: CommandManager;\n  zoomManager: ZoomManager;\n\n  keybindingManager: KeyBindingManager;\n  hostEventManager: HostEventManager;\n  clipboard: ClipboardManager;\n\n  selectedElements: SelectedElements;\n  ruler: Ruler;\n  refLine: RefLine;\n  textEditor: TextEditor;\n\n  autoSaveGraphs: AutoSaveGraphs;\n\n  constructor(options: IEditorOptions) {\n    this.containerElement = options.containerElement;\n    this.canvasElement = document.createElement('canvas');\n    this.containerElement.appendChild(this.canvasElement);\n    this.ctx = this.canvasElement.getContext('2d')!;\n\n    this.setting = new Setting();\n    if (options.offsetX) {\n      this.setting.set('offsetX', options.offsetX);\n    }\n    if (options.offsetY) {\n      this.setting.set('offsetY', options.offsetY);\n    }\n\n    this.keybindingManager = new KeyBindingManager(this);\n    this.keybindingManager.bindEvent();\n\n    this.sceneGraph = new SceneGraph(this);\n\n    this.viewportManager = new ViewportManager(this);\n\n    this.toolManager = new ToolManager(this);\n    this.commandManager = new CommandManager(this);\n    this.zoomManager = new ZoomManager(this);\n\n    this.selectedElements = new SelectedElements(this);\n    this.ruler = new Ruler(this);\n    this.refLine = new RefLine(this);\n    this.textEditor = new TextEditor(this);\n\n    this.hostEventManager = new HostEventManager(this);\n    this.hostEventManager.bindHotkeys();\n\n    this.clipboard = new ClipboardManager(this);\n    this.clipboard.bindEvents();\n\n    this.autoSaveGraphs = new AutoSaveGraphs(this);\n    const data = this.autoSaveGraphs.load();\n    if (data) {\n      this.sceneGraph.load(data.data);\n      this.paperId = data.paperId;\n    }\n    this.paperId ??= genId();\n    this.autoSaveGraphs.autoSave();\n\n    // 设置初始视口\n    this.viewportManager.setViewport({\n      x: -options.width / 2,\n      y: -options.height / 2,\n      width: options.width,\n      height: options.height,\n    });\n\n    this.zoomManager.zoomToFit(1);\n\n    /**\n     * setViewport 其实会修改 canvas 的宽高，浏览器的 DOM 更新是异步的，\n     * 所以下面的 render 要异步执行\n     */\n    Promise.resolve().then(() => {\n      this.sceneGraph.render();\n    });\n  }\n  destroy() {\n    this.containerElement.removeChild(this.canvasElement);\n    this.textEditor.destroy();\n    this.keybindingManager.destroy();\n    this.hostEventManager.destroy();\n    this.clipboard.destroy();\n    this.toolManager.unbindEvent();\n    this.toolManager.destroy();\n  }\n  setCursor(cursor: string) {\n    this.canvasElement.style.cursor = cursor;\n  }\n  getCursor() {\n    return this.canvasElement.style.cursor;\n  }\n  /**\n   * 视口坐标 转 场景坐标\n   */\n  viewportCoordsToScene(x: number, y: number, round = false) {\n    const zoom = this.zoomManager.getZoom();\n    const { x: scrollX, y: scrollY } = this.viewportManager.getViewport();\n    return viewportCoordsToSceneUtil(x, y, zoom, scrollX, scrollY, round);\n  }\n  sceneCoordsToViewport(x: number, y: number) {\n    const zoom = this.zoomManager.getZoom();\n    const { x: scrollX, y: scrollY } = this.viewportManager.getViewport();\n    return sceneCoordsToViewportUtil(x, y, zoom, scrollX, scrollY);\n  }\n  getCursorXY(event: { clientX: number; clientY: number }) {\n    return {\n      x: event.clientX - this.setting.get('offsetX'),\n      y: event.clientY - this.setting.get('offsetY'),\n    };\n  }\n  getSceneCursorXY(event: { clientX: number; clientY: number }, round = false) {\n    const { x, y } = this.getCursorXY(event);\n    return this.viewportCoordsToScene(x, y, round);\n  }\n  moveElements(elements: GraphAttrs[], dx: number, dy: number) {\n    for (const element of elements) {\n      element.x += dx;\n      element.y += dy;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}