{"ast":null,"code":"var _jsxFileName = \"/Users/yangdan/zf-workspace/react/suika/packages/suika/src/components/ColorPicker/TexturePicker/TexturePicker.tsx\",\n  _s = $RefreshSig$();\nimport { SolidPicker } from '../SolidPicker';\nimport { TextureType, DEFAULT_TEXTURES } from '../../../editor/texture';\nimport './TexturePicker.scss';\nimport { CloseOutlined } from '@suika/icons';\nimport { Select } from '@suika/components';\nimport { useIntl } from 'react-intl';\nimport { ImagePicker } from '../ImagePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst intlIdMap = {\n  [TextureType.Solid]: 'textureType.solid',\n  [TextureType.Image]: 'textureType.image'\n};\nexport const TexturePicker = ({\n  texture,\n  onChange,\n  onChangeComplete,\n  onClose\n}) => {\n  _s();\n  const intl = useIntl();\n  const options = [{\n    value: TextureType.Solid,\n    label: intl.formatMessage({\n      id: intlIdMap[TextureType.Solid]\n    })\n  }, {\n    value: TextureType.Image,\n    label: intl.formatMessage({\n      id: intlIdMap[TextureType.Image]\n    })\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"suika-texture-picker\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"texture-picker-header\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        value: texture.type,\n        options: options,\n        onSelect: val => onChange(DEFAULT_TEXTURES[val])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suika-close-btn\",\n        onClick: () => {\n          onClose && onClose();\n        },\n        children: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), texture.type === TextureType.Solid && /*#__PURE__*/_jsxDEV(SolidPicker, {\n      color: texture.attrs,\n      onChange: newColor => {\n        onChange({\n          type: TextureType.Solid,\n          attrs: newColor\n        });\n      },\n      onChangeComplete: color => {\n        onChangeComplete({\n          type: TextureType.Solid,\n          attrs: color\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), texture.type === TextureType.Image && /*#__PURE__*/_jsxDEV(ImagePicker, {\n      value: texture.attrs.src || '',\n      onChange: src => {\n        onChangeComplete({\n          type: TextureType.Image,\n          attrs: {\n            src\n          }\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(TexturePicker, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = TexturePicker;\nvar _c;\n$RefreshReg$(_c, \"TexturePicker\");","map":{"version":3,"names":["SolidPicker","TextureType","DEFAULT_TEXTURES","CloseOutlined","Select","useIntl","ImagePicker","jsxDEV","_jsxDEV","intlIdMap","Solid","Image","TexturePicker","texture","onChange","onChangeComplete","onClose","_s","intl","options","value","label","formatMessage","id","className","children","type","onSelect","val","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","attrs","newColor","src","_c","$RefreshReg$"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/components/ColorPicker/TexturePicker/TexturePicker.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { SolidPicker } from '../SolidPicker';\nimport {\n  ITexture,\n  TextureType,\n  DEFAULT_TEXTURES,\n} from '../../../editor/texture';\nimport './TexturePicker.scss';\nimport { CloseOutlined } from '@suika/icons';\nimport { Select } from '@suika/components';\nimport { useIntl } from 'react-intl';\nimport { ImagePicker } from '../ImagePicker';\n\ninterface IProps {\n  texture: ITexture;\n  onChange: (texture: ITexture) => void;\n  onChangeComplete: (color: ITexture) => void;\n  onClose?: () => void;\n}\n\nconst intlIdMap = {\n  [TextureType.Solid]: 'textureType.solid',\n  [TextureType.Image]: 'textureType.image',\n} as const;\n\nexport const TexturePicker: FC<IProps> = ({\n  texture,\n  onChange,\n  onChangeComplete,\n  onClose,\n}) => {\n  const intl = useIntl();\n\n  const options = [\n    {\n      value: TextureType.Solid,\n      label: intl.formatMessage({ id: intlIdMap[TextureType.Solid] }),\n    },\n    {\n      value: TextureType.Image,\n      label: intl.formatMessage({ id: intlIdMap[TextureType.Image] }),\n    },\n  ];\n\n  return (\n    <div className=\"suika-texture-picker\">\n      <div className=\"texture-picker-header\">\n        <Select\n          value={texture.type}\n          options={options}\n          onSelect={(val) => onChange(DEFAULT_TEXTURES[val as TextureType])}\n        />\n        <div\n          className=\"suika-close-btn\"\n          onClick={() => {\n            onClose && onClose();\n          }}\n        >\n          <CloseOutlined />\n        </div>\n      </div>\n\n      {/* SOLID */}\n      {texture.type === TextureType.Solid && (\n        <SolidPicker\n          color={texture.attrs}\n          onChange={(newColor) => {\n            onChange({ type: TextureType.Solid, attrs: newColor });\n          }}\n          onChangeComplete={(color) => {\n            onChangeComplete({ type: TextureType.Solid, attrs: color });\n          }}\n        />\n      )}\n      {/* IMAGE */}\n      {texture.type === TextureType.Image && (\n        <ImagePicker\n          value={texture.attrs.src || ''}\n          onChange={(src) => {\n            onChangeComplete({ type: TextureType.Image, attrs: { src } });\n          }}\n        />\n      )}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}