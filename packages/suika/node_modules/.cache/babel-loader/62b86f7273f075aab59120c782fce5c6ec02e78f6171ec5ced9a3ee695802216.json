{"ast":null,"code":"export let AlignType = /*#__PURE__*/function (AlignType) {\n  AlignType[\"Left\"] = \"Left\";\n  AlignType[\"HCenter\"] = \"HCenter\";\n  AlignType[\"Right\"] = \"Right\";\n  AlignType[\"Top\"] = \"Top\";\n  AlignType[\"VCenter\"] = \"VCenter\";\n  AlignType[\"Bottom\"] = \"Bottom\";\n  return AlignType;\n}({});\nexport class AlignCmd {\n  constructor(desc, editor, elements, type) {\n    this.desc = desc;\n    this.editor = editor;\n    this.elements = elements;\n    this.dx = [];\n    this.dy = [];\n    if (elements.length < 2) {\n      throw new Error('you can not algin zero or one element');\n    }\n    const bBoxes = elements.map(item => item.getBBox2());\n    const mixedBBox = bBoxes.reduce((m, box) => {\n      return {\n        minX: Math.min(m.minX, box.minX),\n        minY: Math.min(m.minY, box.minY),\n        maxX: Math.max(m.maxX, box.maxX),\n        maxY: Math.max(m.maxY, box.maxY)\n      };\n    }, {\n      minX: Number.MAX_SAFE_INTEGER,\n      minY: Number.MAX_SAFE_INTEGER,\n      maxX: Number.MIN_SAFE_INTEGER,\n      maxY: Number.MIN_SAFE_INTEGER\n    });\n    switch (type) {\n      case AlignType.Left:\n        {\n          for (let i = 0; i < elements.length; i++) {\n            const el = elements[i];\n            this.dx[i] = mixedBBox.minX - bBoxes[i].minX;\n            el.x += this.dx[i];\n          }\n          break;\n        }\n      case AlignType.HCenter:\n        {\n          const centerX = mixedBBox.minX / 2 + mixedBBox.maxX / 2;\n          for (let i = 0; i < elements.length; i++) {\n            const el = elements[i];\n            this.dx[i] = centerX - (bBoxes[i].minX / 2 + bBoxes[i].maxX / 2);\n            el.x += this.dx[i];\n          }\n          break;\n        }\n      case AlignType.Right:\n        {\n          for (let i = 0; i < elements.length; i++) {\n            const el = elements[i];\n            this.dx[i] = mixedBBox.maxX - bBoxes[i].maxX;\n            el.x += this.dx[i];\n          }\n          break;\n        }\n      case AlignType.Top:\n        {\n          for (let i = 0; i < elements.length; i++) {\n            const el = elements[i];\n            this.dy[i] = mixedBBox.minY - bBoxes[i].minY;\n            el.y += this.dy[i];\n          }\n          break;\n        }\n      case AlignType.VCenter:\n        {\n          const centerY = mixedBBox.minY / 2 + mixedBBox.maxY / 2;\n          for (let i = 0; i < elements.length; i++) {\n            const el = elements[i];\n            this.dy[i] = centerY - (bBoxes[i].minY / 2 + bBoxes[i].maxY / 2);\n            el.y += this.dy[i];\n          }\n          break;\n        }\n      case AlignType.Bottom:\n        {\n          for (let i = 0; i < elements.length; i++) {\n            const el = elements[i];\n            this.dy[i] = mixedBBox.maxY - bBoxes[i].maxY;\n            el.y += this.dy[i];\n          }\n          break;\n        }\n      default:\n        console.warn('invalid type:', type);\n        break;\n    }\n  }\n  redo() {\n    for (let i = 0; i < this.elements.length; i++) {\n      var _this$dx$i, _this$dy$i;\n      const el = this.elements[i];\n      el.x += (_this$dx$i = this.dx[i]) !== null && _this$dx$i !== void 0 ? _this$dx$i : 0;\n      el.y += (_this$dy$i = this.dy[i]) !== null && _this$dy$i !== void 0 ? _this$dy$i : 0;\n    }\n  }\n  undo() {\n    for (let i = 0; i < this.elements.length; i++) {\n      var _this$dx$i2, _this$dy$i2;\n      const el = this.elements[i];\n      el.x -= (_this$dx$i2 = this.dx[i]) !== null && _this$dx$i2 !== void 0 ? _this$dx$i2 : 0;\n      el.y -= (_this$dy$i2 = this.dy[i]) !== null && _this$dy$i2 !== void 0 ? _this$dy$i2 : 0;\n    }\n  }\n}","map":{"version":3,"names":["AlignType","AlignCmd","constructor","desc","editor","elements","type","dx","dy","length","Error","bBoxes","map","item","getBBox2","mixedBBox","reduce","m","box","minX","Math","min","minY","maxX","max","maxY","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Left","i","el","x","HCenter","centerX","Right","Top","y","VCenter","centerY","Bottom","console","warn","redo","_this$dx$i","_this$dy$i","undo","_this$dx$i2","_this$dy$i2"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/editor/commands/align.ts"],"sourcesContent":["import { Graph } from '../scene/graph';\nimport { Editor } from '../editor';\nimport { ICommand } from './type';\n\nexport enum AlignType {\n  Left = 'Left',\n  HCenter = 'HCenter',\n  Right = 'Right',\n  Top = 'Top',\n  VCenter = 'VCenter',\n  Bottom = 'Bottom'\n}\n\nexport class AlignCmd implements ICommand {\n  dx: number[] = [];\n  dy: number[] = [];\n  constructor(\n    public desc: string,\n    private editor: Editor,\n    private elements: Graph[],\n    type: AlignType\n  ) {\n    if (elements.length < 2) {\n      throw new Error('you can not algin zero or one element');\n    }\n    const bBoxes = elements.map((item) => item.getBBox2());\n    const mixedBBox = bBoxes.reduce(\n      (m, box) => {\n        return {\n          minX: Math.min(m.minX, box.minX),\n          minY: Math.min(m.minY, box.minY),\n          maxX: Math.max(m.maxX, box.maxX),\n          maxY: Math.max(m.maxY, box.maxY),\n        };\n      },\n      {\n        minX: Number.MAX_SAFE_INTEGER,\n        minY: Number.MAX_SAFE_INTEGER,\n        maxX: Number.MIN_SAFE_INTEGER,\n        maxY: Number.MIN_SAFE_INTEGER,\n      }\n    );\n\n    switch (type) {\n      case AlignType.Left: {\n        for (let i = 0; i < elements.length; i++) {\n          const el = elements[i];\n          this.dx[i] = mixedBBox.minX - bBoxes[i].minX;\n          el.x += this.dx[i];\n        }\n        break;\n      }\n      case AlignType.HCenter: {\n        const centerX = mixedBBox.minX / 2 + mixedBBox.maxX / 2;\n        for (let i = 0; i < elements.length; i++) {\n          const el = elements[i];\n          this.dx[i] = centerX - (bBoxes[i].minX / 2 + bBoxes[i].maxX / 2);\n          el.x += this.dx[i];\n        }\n        break;\n      }\n      case AlignType.Right: {\n        for (let i = 0; i < elements.length; i++) {\n          const el = elements[i];\n          this.dx[i] = mixedBBox.maxX - bBoxes[i].maxX;\n          el.x += this.dx[i];\n        }\n        break;\n      }\n      case AlignType.Top: {\n        for (let i = 0; i < elements.length; i++) {\n          const el = elements[i];\n          this.dy[i] = mixedBBox.minY - bBoxes[i].minY;\n          el.y += this.dy[i];\n        }\n        break;\n      }\n      case AlignType.VCenter: {\n        const centerY = mixedBBox.minY / 2 + mixedBBox.maxY / 2;\n        for (let i = 0; i < elements.length; i++) {\n          const el = elements[i];\n          this.dy[i] = centerY - (bBoxes[i].minY / 2 + bBoxes[i].maxY / 2);\n          el.y += this.dy[i];\n        }\n        break;\n      }\n      case AlignType.Bottom: {\n        for (let i = 0; i < elements.length; i++) {\n          const el = elements[i];\n          this.dy[i] = mixedBBox.maxY - bBoxes[i].maxY;\n          el.y += this.dy[i];\n        }\n        break;\n      }\n      default:\n        console.warn('invalid type:', type);\n        break;\n    }\n  }\n  redo() {\n    for (let i = 0; i < this.elements.length; i++) {\n      const el = this.elements[i];\n      el.x += this.dx[i] ?? 0;\n      el.y += this.dy[i] ?? 0;\n    }\n  }\n  undo() {\n    for (let i = 0; i < this.elements.length; i++) {\n      const el = this.elements[i];\n      el.x -= this.dx[i] ?? 0;\n      el.y -= this.dy[i] ?? 0;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}