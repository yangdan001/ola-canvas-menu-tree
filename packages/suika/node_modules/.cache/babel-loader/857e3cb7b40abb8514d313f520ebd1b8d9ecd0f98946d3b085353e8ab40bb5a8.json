{"ast":null,"code":"import { useState } from 'react';\nimport screenfull from 'screenfull';\nimport useLatest from '../useLatest';\nimport useMemoizedFn from '../useMemoizedFn';\nimport useUnmount from '../useUnmount';\nimport { getTargetElement } from '../utils/domTarget';\nconst useFullscreen = (target, options) => {\n  const {\n    onExit,\n    onEnter\n  } = options || {};\n  const onExitRef = useLatest(onExit);\n  const onEnterRef = useLatest(onEnter);\n  const [state, setState] = useState(false);\n  const onChange = () => {\n    var _a, _b, _c;\n    if (screenfull.isEnabled) {\n      const el = getTargetElement(target);\n      if (!screenfull.element) {\n        (_a = onExitRef.current) === null || _a === void 0 ? void 0 : _a.call(onExitRef);\n        setState(false);\n        screenfull.off('change', onChange);\n      } else {\n        const isFullscreen = screenfull.element === el;\n        if (isFullscreen) {\n          (_b = onEnterRef.current) === null || _b === void 0 ? void 0 : _b.call(onEnterRef);\n        } else {\n          (_c = onExitRef.current) === null || _c === void 0 ? void 0 : _c.call(onExitRef);\n        }\n        setState(isFullscreen);\n      }\n    }\n  };\n  const enterFullscreen = () => {\n    const el = getTargetElement(target);\n    if (!el) {\n      return;\n    }\n    if (screenfull.isEnabled) {\n      try {\n        screenfull.request(el);\n        screenfull.on('change', onChange);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const exitFullscreen = () => {\n    const el = getTargetElement(target);\n    if (screenfull.isEnabled && screenfull.element === el) {\n      screenfull.exit();\n    }\n  };\n  const toggleFullscreen = () => {\n    if (state) {\n      exitFullscreen();\n    } else {\n      enterFullscreen();\n    }\n  };\n  useUnmount(() => {\n    if (screenfull.isEnabled) {\n      screenfull.off('change', onChange);\n    }\n  });\n  return [state, {\n    enterFullscreen: useMemoizedFn(enterFullscreen),\n    exitFullscreen: useMemoizedFn(exitFullscreen),\n    toggleFullscreen: useMemoizedFn(toggleFullscreen),\n    isEnabled: screenfull.isEnabled\n  }];\n};\nexport default useFullscreen;","map":{"version":3,"names":["useState","screenfull","useLatest","useMemoizedFn","useUnmount","getTargetElement","useFullscreen","target","options","onExit","onEnter","onExitRef","onEnterRef","state","setState","onChange","_a","_b","_c","isEnabled","el","element","current","call","off","isFullscreen","enterFullscreen","request","on","error","console","exitFullscreen","exit","toggleFullscreen"],"sources":["/Users/yangdan/zf-workspace/react/suika/node_modules/.pnpm/registry.npmmirror.com+ahooks@3.7.4_react@18.2.0/node_modules/ahooks/es/useFullscreen/index.js"],"sourcesContent":["import { useState } from 'react';\nimport screenfull from 'screenfull';\nimport useLatest from '../useLatest';\nimport useMemoizedFn from '../useMemoizedFn';\nimport useUnmount from '../useUnmount';\nimport { getTargetElement } from '../utils/domTarget';\nconst useFullscreen = (target, options) => {\n  const {\n    onExit,\n    onEnter\n  } = options || {};\n  const onExitRef = useLatest(onExit);\n  const onEnterRef = useLatest(onEnter);\n  const [state, setState] = useState(false);\n  const onChange = () => {\n    var _a, _b, _c;\n    if (screenfull.isEnabled) {\n      const el = getTargetElement(target);\n      if (!screenfull.element) {\n        (_a = onExitRef.current) === null || _a === void 0 ? void 0 : _a.call(onExitRef);\n        setState(false);\n        screenfull.off('change', onChange);\n      } else {\n        const isFullscreen = screenfull.element === el;\n        if (isFullscreen) {\n          (_b = onEnterRef.current) === null || _b === void 0 ? void 0 : _b.call(onEnterRef);\n        } else {\n          (_c = onExitRef.current) === null || _c === void 0 ? void 0 : _c.call(onExitRef);\n        }\n        setState(isFullscreen);\n      }\n    }\n  };\n  const enterFullscreen = () => {\n    const el = getTargetElement(target);\n    if (!el) {\n      return;\n    }\n    if (screenfull.isEnabled) {\n      try {\n        screenfull.request(el);\n        screenfull.on('change', onChange);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const exitFullscreen = () => {\n    const el = getTargetElement(target);\n    if (screenfull.isEnabled && screenfull.element === el) {\n      screenfull.exit();\n    }\n  };\n  const toggleFullscreen = () => {\n    if (state) {\n      exitFullscreen();\n    } else {\n      enterFullscreen();\n    }\n  };\n  useUnmount(() => {\n    if (screenfull.isEnabled) {\n      screenfull.off('change', onChange);\n    }\n  });\n  return [state, {\n    enterFullscreen: useMemoizedFn(enterFullscreen),\n    exitFullscreen: useMemoizedFn(exitFullscreen),\n    toggleFullscreen: useMemoizedFn(toggleFullscreen),\n    isEnabled: screenfull.isEnabled\n  }];\n};\nexport default useFullscreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}