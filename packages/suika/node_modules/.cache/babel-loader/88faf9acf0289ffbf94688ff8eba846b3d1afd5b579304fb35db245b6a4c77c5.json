{"ast":null,"code":"import { getRectByTwoCoord } from '../../../utils/graphics';\n/**\n * 绘制选区\n */\nexport class DrawSelectionBox {\n  constructor(editor) {\n    this.editor = editor;\n    this.lastPoint = {\n      x: -1,\n      y: -1\n    };\n    this.isShiftPressingWhenStart = false;\n  }\n  active() {\n    // do nothing\n  }\n  inactive() {\n    // do nothing\n  }\n  start(e) {\n    this.isShiftPressingWhenStart = false;\n    if (this.editor.hostEventManager.isShiftPressing) {\n      this.isShiftPressingWhenStart = true;\n    } else {\n      this.editor.selectedElements.clear();\n    }\n    const pos = this.editor.getCursorXY(e);\n    this.lastPoint = this.editor.viewportCoordsToScene(pos.x, pos.y);\n    this.editor.sceneGraph.render();\n    // 设置选区\n    this.editor.sceneGraph.setSelection(this.lastPoint);\n  }\n  drag(e) {\n    const point = this.editor.getSceneCursorXY(e);\n    const box = getRectByTwoCoord(this.lastPoint, point);\n    this.editor.sceneGraph.setSelection(box);\n    this.editor.sceneGraph.render();\n  }\n  end() {\n    const elements = this.editor.sceneGraph.getElementsInSelection();\n    if (this.isShiftPressingWhenStart) {\n      this.editor.selectedElements.toggleItems(elements);\n    } else {\n      this.editor.selectedElements.setItems(elements);\n    }\n  }\n  afterEnd() {\n    this.isShiftPressingWhenStart = false;\n    this.editor.sceneGraph.selection = null;\n    this.editor.sceneGraph.render();\n  }\n}","map":{"version":3,"names":["getRectByTwoCoord","DrawSelectionBox","constructor","editor","lastPoint","x","y","isShiftPressingWhenStart","active","inactive","start","e","hostEventManager","isShiftPressing","selectedElements","clear","pos","getCursorXY","viewportCoordsToScene","sceneGraph","render","setSelection","drag","point","getSceneCursorXY","box","end","elements","getElementsInSelection","toggleItems","setItems","afterEnd","selection"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/editor/tools/tool_select/tool_select_selection.ts"],"sourcesContent":["import { IPoint } from '../../../type';\nimport { getRectByTwoCoord } from '../../../utils/graphics';\nimport { Editor } from '../../editor';\nimport { IBaseTool } from '../type';\n\n/**\n * 绘制选区\n */\nexport class DrawSelectionBox implements IBaseTool {\n  private lastPoint: IPoint = { x: -1, y: -1 };\n  private isShiftPressingWhenStart = false;\n\n  constructor(private editor: Editor) {}\n  active() {\n    // do nothing\n  }\n  inactive() {\n    // do nothing\n  }\n  start(e: PointerEvent) {\n    this.isShiftPressingWhenStart = false;\n\n    if (this.editor.hostEventManager.isShiftPressing) {\n      this.isShiftPressingWhenStart = true;\n    } else {\n      this.editor.selectedElements.clear();\n    }\n\n    const pos = this.editor.getCursorXY(e);\n    this.lastPoint = this.editor.viewportCoordsToScene(pos.x, pos.y);\n\n    this.editor.sceneGraph.render();\n    // 设置选区\n    this.editor.sceneGraph.setSelection(this.lastPoint);\n  }\n  drag(e: PointerEvent) {\n    const point = this.editor.getSceneCursorXY(e);\n\n    const box = getRectByTwoCoord(this.lastPoint, point);\n    this.editor.sceneGraph.setSelection(box);\n    this.editor.sceneGraph.render();\n  }\n  end() {\n    const elements = this.editor.sceneGraph.getElementsInSelection();\n\n    if (this.isShiftPressingWhenStart) {\n      this.editor.selectedElements.toggleItems(elements);\n    } else {\n      this.editor.selectedElements.setItems(elements);\n    }\n  }\n  afterEnd() {\n    this.isShiftPressingWhenStart = false;\n    this.editor.sceneGraph.selection = null;\n    this.editor.sceneGraph.render();\n  }\n}\n"],"mappings":"AACA,SAASA,iBAAiB,QAAQ,yBAAyB;AAI3D;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,CAAsB;EAIjDC,WAAWA,CAASC,MAAc,EAAE;IAAA,KAAhBA,MAAc,GAAdA,MAAc;IAAA,KAH1BC,SAAS,GAAW;MAAEC,CAAC,EAAE,CAAC,CAAC;MAAEC,CAAC,EAAE,CAAC;IAAE,CAAC;IAAA,KACpCC,wBAAwB,GAAG,KAAK;EAEH;EACrCC,MAAMA,CAAA,EAAG;IACP;EAAA;EAEFC,QAAQA,CAAA,EAAG;IACT;EAAA;EAEFC,KAAKA,CAACC,CAAe,EAAE;IACrB,IAAI,CAACJ,wBAAwB,GAAG,KAAK;IAErC,IAAI,IAAI,CAACJ,MAAM,CAACS,gBAAgB,CAACC,eAAe,EAAE;MAChD,IAAI,CAACN,wBAAwB,GAAG,IAAI;IACtC,CAAC,MAAM;MACL,IAAI,CAACJ,MAAM,CAACW,gBAAgB,CAACC,KAAK,CAAC,CAAC;IACtC;IAEA,MAAMC,GAAG,GAAG,IAAI,CAACb,MAAM,CAACc,WAAW,CAACN,CAAC,CAAC;IACtC,IAAI,CAACP,SAAS,GAAG,IAAI,CAACD,MAAM,CAACe,qBAAqB,CAACF,GAAG,CAACX,CAAC,EAAEW,GAAG,CAACV,CAAC,CAAC;IAEhE,IAAI,CAACH,MAAM,CAACgB,UAAU,CAACC,MAAM,CAAC,CAAC;IAC/B;IACA,IAAI,CAACjB,MAAM,CAACgB,UAAU,CAACE,YAAY,CAAC,IAAI,CAACjB,SAAS,CAAC;EACrD;EACAkB,IAAIA,CAACX,CAAe,EAAE;IACpB,MAAMY,KAAK,GAAG,IAAI,CAACpB,MAAM,CAACqB,gBAAgB,CAACb,CAAC,CAAC;IAE7C,MAAMc,GAAG,GAAGzB,iBAAiB,CAAC,IAAI,CAACI,SAAS,EAAEmB,KAAK,CAAC;IACpD,IAAI,CAACpB,MAAM,CAACgB,UAAU,CAACE,YAAY,CAACI,GAAG,CAAC;IACxC,IAAI,CAACtB,MAAM,CAACgB,UAAU,CAACC,MAAM,CAAC,CAAC;EACjC;EACAM,GAAGA,CAAA,EAAG;IACJ,MAAMC,QAAQ,GAAG,IAAI,CAACxB,MAAM,CAACgB,UAAU,CAACS,sBAAsB,CAAC,CAAC;IAEhE,IAAI,IAAI,CAACrB,wBAAwB,EAAE;MACjC,IAAI,CAACJ,MAAM,CAACW,gBAAgB,CAACe,WAAW,CAACF,QAAQ,CAAC;IACpD,CAAC,MAAM;MACL,IAAI,CAACxB,MAAM,CAACW,gBAAgB,CAACgB,QAAQ,CAACH,QAAQ,CAAC;IACjD;EACF;EACAI,QAAQA,CAAA,EAAG;IACT,IAAI,CAACxB,wBAAwB,GAAG,KAAK;IACrC,IAAI,CAACJ,MAAM,CAACgB,UAAU,CAACa,SAAS,GAAG,IAAI;IACvC,IAAI,CAAC7B,MAAM,CAACgB,UAAU,CAACC,MAAM,CAAC,CAAC;EACjC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}