{"ast":null,"code":"var _jsxFileName = \"/Users/yangdan/zf-workspace/react/suika/packages/suika/src/components/LayerPanel/LayerPanel.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from 'react';\nimport { EditorContext } from '../../context';\nimport LayerItem from './LayerItem/LayerItem';\nimport './LayerPanel.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LayerPanel = () => {\n  _s();\n  const editor = useContext(EditorContext);\n  const [objects, setObjects] = useState([]);\n  const [selectedIds, setSelectedIds] = useState(new Set());\n  useEffect(() => {\n    if (editor) {\n      setObjects(editor.sceneGraph.getObjects()); // init\n\n      editor.sceneGraph.on('render', () => {\n        setObjects(editor.sceneGraph.getObjects());\n        setSelectedIds(editor.selectedElements.getIdSet());\n      });\n    }\n  }, [editor]);\n  const handleClick = event => {\n    if (!editor) return;\n    const target = event.target;\n    if (target instanceof HTMLElement && target.hasAttribute('data-layer-id')) {\n      const objId = target.getAttribute('data-layer-id');\n      if (objId) {\n        if (event.ctrlKey || event.metaKey) {\n          editor.selectedElements.toggleItemById(objId);\n        } else {\n          editor.selectedElements.setItemsById(new Set([objId]));\n        }\n        editor.sceneGraph.render();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"layer-panel\",\n    onClick: e => handleClick(e),\n    children: objects.map(item => /*#__PURE__*/_jsxDEV(LayerItem, {\n      active: selectedIds.has(item.id),\n      layerId: item.id,\n      children: [' ', item.name, \"111\"]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)).reverse()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(LayerPanel, \"HqV1HIDvcdm7dOOgWe+8TbhNnF8=\");\n_c = LayerPanel;\nvar _c;\n$RefreshReg$(_c, \"LayerPanel\");","map":{"version":3,"names":["useContext","useEffect","useState","EditorContext","LayerItem","jsxDEV","_jsxDEV","LayerPanel","_s","editor","objects","setObjects","selectedIds","setSelectedIds","Set","sceneGraph","getObjects","on","selectedElements","getIdSet","handleClick","event","target","HTMLElement","hasAttribute","objId","getAttribute","ctrlKey","metaKey","toggleItemById","setItemsById","render","className","onClick","e","children","map","item","active","has","id","layerId","name","fileName","_jsxFileName","lineNumber","columnNumber","reverse","_c","$RefreshReg$"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/components/LayerPanel/LayerPanel.tsx"],"sourcesContent":["import { FC, useContext, useEffect, useState } from 'react';\nimport { EditorContext } from '../../context';\nimport { IObject } from '../../type';\nimport LayerItem from './LayerItem/LayerItem';\nimport './LayerPanel.scss';\n\nexport const LayerPanel: FC = () => {\n  const editor = useContext(EditorContext);\n  const [objects, setObjects] = useState<IObject[]>([]);\n  const [selectedIds, setSelectedIds] = useState(new Set<string>());\n\n  useEffect(() => {\n    if (editor) {\n      setObjects(editor.sceneGraph.getObjects()); // init\n\n      editor.sceneGraph.on('render', () => {\n        setObjects(editor.sceneGraph.getObjects());\n        setSelectedIds(editor.selectedElements.getIdSet());\n      });\n    }\n  }, [editor]);\n  \n  const handleClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!editor) return;\n    const target = event.target;\n\n    if (target instanceof HTMLElement && target.hasAttribute('data-layer-id')) {\n      const objId = target.getAttribute('data-layer-id');\n      if (objId) {\n        if (event.ctrlKey || event.metaKey) {\n          editor.selectedElements.toggleItemById(objId);\n        } else {\n          editor.selectedElements.setItemsById(new Set([objId]));\n        }\n        editor.sceneGraph.render();\n      }\n    }\n  };\n\n  return (\n    <div className=\"layer-panel\" onClick={(e) => handleClick(e)}>\n      {objects\n        .map((item) => (\n          <LayerItem\n            active={selectedIds.has(item.id)}\n            key={item.id}\n            layerId={item.id}\n          >\n            {' '}\n            {item.name}111\n          </LayerItem>\n        ))\n        .reverse()}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAAaA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,aAAa,QAAQ,eAAe;AAE7C,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,OAAO,MAAMC,UAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,MAAM,GAAGT,UAAU,CAACG,aAAa,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAY,EAAE,CAAC;EACrD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAIY,GAAG,CAAS,CAAC,CAAC;EAEjEb,SAAS,CAAC,MAAM;IACd,IAAIQ,MAAM,EAAE;MACVE,UAAU,CAACF,MAAM,CAACM,UAAU,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;;MAE5CP,MAAM,CAACM,UAAU,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;QACnCN,UAAU,CAACF,MAAM,CAACM,UAAU,CAACC,UAAU,CAAC,CAAC,CAAC;QAC1CH,cAAc,CAACJ,MAAM,CAACS,gBAAgB,CAACC,QAAQ,CAAC,CAAC,CAAC;MACpD,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZ,MAAMW,WAAW,GAAIC,KAAmD,IAAK;IAC3E,IAAI,CAACZ,MAAM,EAAE;IACb,MAAMa,MAAM,GAAGD,KAAK,CAACC,MAAM;IAE3B,IAAIA,MAAM,YAAYC,WAAW,IAAID,MAAM,CAACE,YAAY,CAAC,eAAe,CAAC,EAAE;MACzE,MAAMC,KAAK,GAAGH,MAAM,CAACI,YAAY,CAAC,eAAe,CAAC;MAClD,IAAID,KAAK,EAAE;QACT,IAAIJ,KAAK,CAACM,OAAO,IAAIN,KAAK,CAACO,OAAO,EAAE;UAClCnB,MAAM,CAACS,gBAAgB,CAACW,cAAc,CAACJ,KAAK,CAAC;QAC/C,CAAC,MAAM;UACLhB,MAAM,CAACS,gBAAgB,CAACY,YAAY,CAAC,IAAIhB,GAAG,CAAC,CAACW,KAAK,CAAC,CAAC,CAAC;QACxD;QACAhB,MAAM,CAACM,UAAU,CAACgB,MAAM,CAAC,CAAC;MAC5B;IACF;EACF,CAAC;EAED,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,aAAa;IAACC,OAAO,EAAGC,CAAC,IAAKd,WAAW,CAACc,CAAC,CAAE;IAAAC,QAAA,EACzDzB,OAAO,CACL0B,GAAG,CAAEC,IAAI,iBACR/B,OAAA,CAACF,SAAS;MACRkC,MAAM,EAAE1B,WAAW,CAAC2B,GAAG,CAACF,IAAI,CAACG,EAAE,CAAE;MAEjCC,OAAO,EAAEJ,IAAI,CAACG,EAAG;MAAAL,QAAA,GAEhB,GAAG,EACHE,IAAI,CAACK,IAAI,EAAC,KACb;IAAA,GALOL,IAAI,CAACG,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKH,CACZ,CAAC,CACDC,OAAO,CAAC;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACtC,EAAA,CAjDWD,UAAc;AAAAyC,EAAA,GAAdzC,UAAc;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}