{"ast":null,"code":"import { isSameArray } from '../utils/common';\nimport EventEmitter from '../utils/event_emitter';\nimport { getRectCenterPoint, getRectsBBox } from '../utils/graphics';\nimport { RemoveElement } from './commands/remove_element';\nimport { AlignCmd } from './commands/align';\nimport { ArrangeCmd } from './commands/arrange';\nclass SelectedElements {\n  constructor(editor) {\n    this.editor = editor;\n    this.items = [];\n    this.eventEmitter = new EventEmitter();\n  }\n  setItems(items) {\n    const prevItems = this.items;\n    this.items = items;\n    if (!isSameArray(prevItems, items)) {\n      this.eventEmitter.emit('itemsChange', items);\n    }\n  }\n  getItems() {\n    return [...this.items];\n  }\n  getIdSet() {\n    return new Set(this.items.map(item => item.id));\n  }\n  setItemsById(ids) {\n    const items = [];\n    let count = ids.size;\n    const allGraphs = this.editor.sceneGraph.children;\n    for (let i = 0; i < allGraphs.length; i++) {\n      const item = allGraphs[i];\n      if (ids.has(item.id)) {\n        items.push(item);\n        count--;\n        if (count === 0) {\n          break;\n        }\n      }\n    }\n    if (items.length === 0) {\n      console.warn('can not find element by id');\n    } else {\n      this.setItems(items);\n    }\n  }\n  clear() {\n    this.items = [];\n    this.eventEmitter.emit('itemsChange', this.items);\n  }\n  /**\n   * “追加” 多个元素\n   * 如果已选中元素中存在追加元素，将其从已选中元素中取出，否则添加进去\n   */\n  toggleItems(toggledElements) {\n    const prevItems = this.items;\n    const retItems = [];\n    for (let i = 0, len = prevItems.length; i < len; i++) {\n      const item = prevItems[i];\n      const idx = toggledElements.indexOf(item);\n      if (idx === -1) {\n        retItems.push(item);\n      } else {\n        toggledElements.splice(idx, 1);\n      }\n    }\n    retItems.push(...toggledElements);\n    this.items = retItems;\n    if (!isSameArray(prevItems, retItems)) {\n      this.eventEmitter.emit('itemsChange', this.items);\n    }\n  }\n  toggleItemById(id) {\n    const toggledElement = this.editor.sceneGraph.getElementById(id);\n    if (toggledElement) {\n      this.toggleItems([toggledElement]);\n    } else {\n      console.warn('can not find element by id');\n    }\n  }\n  getCenterPoint() {\n    if (this.items.length === 1) {\n      return getRectCenterPoint(this.items[0]);\n    } else {\n      throw new Error('还没实现，敬请期待');\n    }\n  }\n  size() {\n    return this.items.length;\n  }\n  isEmpty() {\n    return this.items.length === 0;\n  }\n  getBBox() {\n    if (this.isEmpty()) {\n      return null;\n    }\n    const bBoxesWithRotation = this.items.map(element => element.getBBox());\n    return getRectsBBox(...bBoxesWithRotation);\n  }\n  getRotation() {\n    if (this.items.length === 0 || this.items.length > 1) {\n      return 0;\n    }\n    return this.items[0].rotation || 0;\n  }\n  on(eventName, handler) {\n    this.eventEmitter.on(eventName, handler);\n  }\n  off(eventName, handler) {\n    this.eventEmitter.off(eventName, handler);\n  }\n  removeFromScene() {\n    if (this.isEmpty()) {\n      return;\n    }\n    this.editor.commandManager.pushCommand(new RemoveElement('Remove Elements', this.editor, this.items));\n    this.editor.sceneGraph.render();\n  }\n  setRotateXY(rotatedX, rotatedY) {\n    const items = this.items;\n    for (let i = 0, len = items.length; i < len; i++) {\n      const element = items[i];\n      element.setRotateXY(rotatedX, rotatedY);\n    }\n  }\n  align(type) {\n    if (this.size() < 2) {\n      console.warn('can align zero or two elements, fail silently');\n      return;\n    }\n    this.editor.commandManager.pushCommand(new AlignCmd('Align ' + type, this.editor, this.items, type));\n    this.editor.sceneGraph.render();\n  }\n  arrange(type) {\n    if (this.size() === 0) {\n      console.warn(\"can't arrange, no element\");\n    }\n\n    /**\n     * TODO:\n     * if the selected graphs had already in the top, stop exec front command\n     * also other arrange type\n     */\n    if (ArrangeCmd.shouldExecCmd(type, this.editor.sceneGraph.children, new Set(this.items))) {\n      this.editor.commandManager.pushCommand(new ArrangeCmd('Arrange ' + type, this.editor, this.items, type));\n    }\n    this.editor.sceneGraph.render();\n  }\n  selectAll() {\n    this.setItems([...this.editor.sceneGraph.children]);\n  }\n}\nexport default SelectedElements;","map":{"version":3,"names":["isSameArray","EventEmitter","getRectCenterPoint","getRectsBBox","RemoveElement","AlignCmd","ArrangeCmd","SelectedElements","constructor","editor","items","eventEmitter","setItems","prevItems","emit","getItems","getIdSet","Set","map","item","id","setItemsById","ids","count","size","allGraphs","sceneGraph","children","i","length","has","push","console","warn","clear","toggleItems","toggledElements","retItems","len","idx","indexOf","splice","toggleItemById","toggledElement","getElementById","getCenterPoint","Error","isEmpty","getBBox","bBoxesWithRotation","element","getRotation","rotation","on","eventName","handler","off","removeFromScene","commandManager","pushCommand","render","setRotateXY","rotatedX","rotatedY","align","type","arrange","shouldExecCmd","selectAll"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/editor/selected_elements.ts"],"sourcesContent":["import { Graph } from './scene/graph';\nimport { IBox } from '../type';\nimport { isSameArray } from '../utils/common';\nimport EventEmitter from '../utils/event_emitter';\nimport { getRectCenterPoint, getRectsBBox } from '../utils/graphics';\nimport { RemoveElement } from './commands/remove_element';\nimport { Editor } from './editor';\nimport { AlignCmd, AlignType } from './commands/align';\nimport { ArrangeCmd, ArrangeType } from './commands/arrange';\n\ninterface Events {\n  itemsChange(items: Graph[]): void;\n}\n\nclass SelectedElements {\n  private items: Graph[] = [];\n  private eventEmitter = new EventEmitter<Events>();\n\n  constructor(private editor: Editor) {}\n  setItems(items: Graph[]) {\n    const prevItems = this.items;\n    this.items = items;\n    if (!isSameArray(prevItems, items)) {\n      this.eventEmitter.emit('itemsChange', items);\n    }\n  }\n  getItems() {\n    return [...this.items];\n  }\n  getIdSet() {\n    return new Set(this.items.map((item) => item.id));\n  }\n  setItemsById(ids: Set<string>) {\n    const items: Graph[] = [];\n    let count = ids.size;\n\n    const allGraphs = this.editor.sceneGraph.children;\n    for (let i = 0; i < allGraphs.length; i++) {\n      const item = allGraphs[i];\n      if (ids.has(item.id)) {\n        items.push(item);\n        count--;\n        if (count === 0) {\n          break;\n        }\n      }\n    }\n\n    if (items.length === 0) {\n      console.warn('can not find element by id');\n    } else {\n      this.setItems(items);\n    }\n  }\n  clear() {\n    this.items = [];\n    this.eventEmitter.emit('itemsChange', this.items);\n  }\n  /**\n   * “追加” 多个元素\n   * 如果已选中元素中存在追加元素，将其从已选中元素中取出，否则添加进去\n   */\n  toggleItems(toggledElements: Graph[]) {\n    const prevItems = this.items;\n    const retItems: Graph[] = [];\n    for (let i = 0, len = prevItems.length; i < len; i++) {\n      const item = prevItems[i];\n      const idx = toggledElements.indexOf(item);\n      if (idx === -1) {\n        retItems.push(item);\n      } else {\n        toggledElements.splice(idx, 1);\n      }\n    }\n    retItems.push(...toggledElements);\n    this.items = retItems;\n\n    if (!isSameArray(prevItems, retItems)) {\n      this.eventEmitter.emit('itemsChange', this.items);\n    }\n  }\n  toggleItemById(id: string) {\n    const toggledElement = this.editor.sceneGraph.getElementById(id);\n    if (toggledElement) {\n      this.toggleItems([toggledElement]);\n    } else {\n      console.warn('can not find element by id');\n    }\n  }\n  getCenterPoint() {\n    if (this.items.length === 1) {\n      return getRectCenterPoint(this.items[0]);\n    } else {\n      throw new Error('还没实现，敬请期待');\n    }\n  }\n  size() {\n    return this.items.length;\n  }\n  isEmpty() {\n    return this.items.length === 0;\n  }\n  getBBox(): IBox | null {\n    if (this.isEmpty()) {\n      return null;\n    }\n    const bBoxesWithRotation = this.items.map((element) => element.getBBox());\n    return getRectsBBox(...bBoxesWithRotation);\n  }\n  getRotation() {\n    if (this.items.length === 0 || this.items.length > 1) {\n      return 0;\n    }\n    return this.items[0].rotation || 0;\n  }\n  on(eventName: 'itemsChange', handler: (items: Graph[]) => void) {\n    this.eventEmitter.on(eventName, handler);\n  }\n  off(eventName: 'itemsChange', handler: (items: Graph[]) => void) {\n    this.eventEmitter.off(eventName, handler);\n  }\n  removeFromScene() {\n    if (this.isEmpty()) {\n      return;\n    }\n    this.editor.commandManager.pushCommand(\n      new RemoveElement('Remove Elements', this.editor, this.items),\n    );\n    this.editor.sceneGraph.render();\n  }\n  setRotateXY(rotatedX: number, rotatedY: number) {\n    const items = this.items;\n    for (let i = 0, len = items.length; i < len; i++) {\n      const element = items[i];\n      element.setRotateXY(rotatedX, rotatedY);\n    }\n  }\n  align(type: AlignType) {\n    if (this.size() < 2) {\n      console.warn('can align zero or two elements, fail silently');\n      return;\n    }\n    this.editor.commandManager.pushCommand(\n      new AlignCmd('Align ' + type, this.editor, this.items, type),\n    );\n    this.editor.sceneGraph.render();\n  }\n\n  arrange(type: ArrangeType) {\n    if (this.size() === 0) {\n      console.warn(\"can't arrange, no element\");\n    }\n\n    /**\n     * TODO:\n     * if the selected graphs had already in the top, stop exec front command\n     * also other arrange type\n     */\n    if (\n      ArrangeCmd.shouldExecCmd(\n        type,\n        this.editor.sceneGraph.children,\n        new Set(this.items),\n      )\n    ) {\n      this.editor.commandManager.pushCommand(\n        new ArrangeCmd('Arrange ' + type, this.editor, this.items, type),\n      );\n    }\n    this.editor.sceneGraph.render();\n  }\n\n  selectAll() {\n    this.setItems([...this.editor.sceneGraph.children]);\n  }\n}\n\nexport default SelectedElements;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}