{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { useRef, useCallback } from 'react';\nfunction useLockFn(fn) {\n  const lockRef = useRef(false);\n  return useCallback((...args) => __awaiter(this, void 0, void 0, function* () {\n    if (lockRef.current) return;\n    lockRef.current = true;\n    try {\n      const ret = yield fn(...args);\n      lockRef.current = false;\n      return ret;\n    } catch (e) {\n      lockRef.current = false;\n      throw e;\n    }\n  }), [fn]);\n}\nexport default useLockFn;","map":{"version":3,"names":["__awaiter","useRef","useCallback","useLockFn","fn","lockRef","args","current","ret","e"],"sources":["/Users/yangdan/zf-workspace/react/suika/node_modules/.pnpm/registry.npmmirror.com+ahooks@3.7.4_react@18.2.0/node_modules/ahooks/es/useLockFn/index.js"],"sourcesContent":["import { __awaiter } from \"tslib\";\nimport { useRef, useCallback } from 'react';\nfunction useLockFn(fn) {\n  const lockRef = useRef(false);\n  return useCallback((...args) => __awaiter(this, void 0, void 0, function* () {\n    if (lockRef.current) return;\n    lockRef.current = true;\n    try {\n      const ret = yield fn(...args);\n      lockRef.current = false;\n      return ret;\n    } catch (e) {\n      lockRef.current = false;\n      throw e;\n    }\n  }), [fn]);\n}\nexport default useLockFn;"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAC3C,SAASC,SAASA,CAACC,EAAE,EAAE;EACrB,MAAMC,OAAO,GAAGJ,MAAM,CAAC,KAAK,CAAC;EAC7B,OAAOC,WAAW,CAAC,CAAC,GAAGI,IAAI,KAAKN,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;IAC3E,IAAIK,OAAO,CAACE,OAAO,EAAE;IACrBF,OAAO,CAACE,OAAO,GAAG,IAAI;IACtB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMJ,EAAE,CAAC,GAAGE,IAAI,CAAC;MAC7BD,OAAO,CAACE,OAAO,GAAG,KAAK;MACvB,OAAOC,GAAG;IACZ,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVJ,OAAO,CAACE,OAAO,GAAG,KAAK;MACvB,MAAME,CAAC;IACT;EACF,CAAC,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;AACX;AACA,eAAeD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}