{"ast":null,"code":"import { useCallback, useEffect, useRef } from 'react';\nimport useLatest from '../useLatest';\nimport { isNumber } from '../utils';\nconst setRafInterval = function (callback, delay = 0) {\n  if (typeof requestAnimationFrame === typeof undefined) {\n    return {\n      id: setInterval(callback, delay)\n    };\n  }\n  let start = new Date().getTime();\n  const handle = {\n    id: 0\n  };\n  const loop = () => {\n    const current = new Date().getTime();\n    if (current - start >= delay) {\n      callback();\n      start = new Date().getTime();\n    }\n    handle.id = requestAnimationFrame(loop);\n  };\n  handle.id = requestAnimationFrame(loop);\n  return handle;\n};\nfunction cancelAnimationFrameIsNotDefined(t) {\n  return typeof cancelAnimationFrame === typeof undefined;\n}\nconst clearRafInterval = function (handle) {\n  if (cancelAnimationFrameIsNotDefined(handle.id)) {\n    return clearInterval(handle.id);\n  }\n  cancelAnimationFrame(handle.id);\n};\nfunction useRafInterval(fn, delay, options) {\n  const immediate = options === null || options === void 0 ? void 0 : options.immediate;\n  const fnRef = useLatest(fn);\n  const timerRef = useRef();\n  useEffect(() => {\n    if (!isNumber(delay) || delay < 0) return;\n    if (immediate) {\n      fnRef.current();\n    }\n    timerRef.current = setRafInterval(() => {\n      fnRef.current();\n    }, delay);\n    return () => {\n      if (timerRef.current) {\n        clearRafInterval(timerRef.current);\n      }\n    };\n  }, [delay]);\n  const clear = useCallback(() => {\n    if (timerRef.current) {\n      clearRafInterval(timerRef.current);\n    }\n  }, []);\n  return clear;\n}\nexport default useRafInterval;","map":{"version":3,"names":["useCallback","useEffect","useRef","useLatest","isNumber","setRafInterval","callback","delay","requestAnimationFrame","undefined","id","setInterval","start","Date","getTime","handle","loop","current","cancelAnimationFrameIsNotDefined","t","cancelAnimationFrame","clearRafInterval","clearInterval","useRafInterval","fn","options","immediate","fnRef","timerRef","clear"],"sources":["/Users/yangdan/zf-workspace/react/suika/node_modules/.pnpm/registry.npmmirror.com+ahooks@3.7.4_react@18.2.0/node_modules/ahooks/es/useRafInterval/index.js"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\nimport useLatest from '../useLatest';\nimport { isNumber } from '../utils';\nconst setRafInterval = function (callback, delay = 0) {\n  if (typeof requestAnimationFrame === typeof undefined) {\n    return {\n      id: setInterval(callback, delay)\n    };\n  }\n  let start = new Date().getTime();\n  const handle = {\n    id: 0\n  };\n  const loop = () => {\n    const current = new Date().getTime();\n    if (current - start >= delay) {\n      callback();\n      start = new Date().getTime();\n    }\n    handle.id = requestAnimationFrame(loop);\n  };\n  handle.id = requestAnimationFrame(loop);\n  return handle;\n};\nfunction cancelAnimationFrameIsNotDefined(t) {\n  return typeof cancelAnimationFrame === typeof undefined;\n}\nconst clearRafInterval = function (handle) {\n  if (cancelAnimationFrameIsNotDefined(handle.id)) {\n    return clearInterval(handle.id);\n  }\n  cancelAnimationFrame(handle.id);\n};\nfunction useRafInterval(fn, delay, options) {\n  const immediate = options === null || options === void 0 ? void 0 : options.immediate;\n  const fnRef = useLatest(fn);\n  const timerRef = useRef();\n  useEffect(() => {\n    if (!isNumber(delay) || delay < 0) return;\n    if (immediate) {\n      fnRef.current();\n    }\n    timerRef.current = setRafInterval(() => {\n      fnRef.current();\n    }, delay);\n    return () => {\n      if (timerRef.current) {\n        clearRafInterval(timerRef.current);\n      }\n    };\n  }, [delay]);\n  const clear = useCallback(() => {\n    if (timerRef.current) {\n      clearRafInterval(timerRef.current);\n    }\n  }, []);\n  return clear;\n}\nexport default useRafInterval;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACtD,OAAOC,SAAS,MAAM,cAAc;AACpC,SAASC,QAAQ,QAAQ,UAAU;AACnC,MAAMC,cAAc,GAAG,SAAAA,CAAUC,QAAQ,EAAEC,KAAK,GAAG,CAAC,EAAE;EACpD,IAAI,OAAOC,qBAAqB,KAAK,OAAOC,SAAS,EAAE;IACrD,OAAO;MACLC,EAAE,EAAEC,WAAW,CAACL,QAAQ,EAAEC,KAAK;IACjC,CAAC;EACH;EACA,IAAIK,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EAChC,MAAMC,MAAM,GAAG;IACbL,EAAE,EAAE;EACN,CAAC;EACD,MAAMM,IAAI,GAAGA,CAAA,KAAM;IACjB,MAAMC,OAAO,GAAG,IAAIJ,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IACpC,IAAIG,OAAO,GAAGL,KAAK,IAAIL,KAAK,EAAE;MAC5BD,QAAQ,CAAC,CAAC;MACVM,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAC9B;IACAC,MAAM,CAACL,EAAE,GAAGF,qBAAqB,CAACQ,IAAI,CAAC;EACzC,CAAC;EACDD,MAAM,CAACL,EAAE,GAAGF,qBAAqB,CAACQ,IAAI,CAAC;EACvC,OAAOD,MAAM;AACf,CAAC;AACD,SAASG,gCAAgCA,CAACC,CAAC,EAAE;EAC3C,OAAO,OAAOC,oBAAoB,KAAK,OAAOX,SAAS;AACzD;AACA,MAAMY,gBAAgB,GAAG,SAAAA,CAAUN,MAAM,EAAE;EACzC,IAAIG,gCAAgC,CAACH,MAAM,CAACL,EAAE,CAAC,EAAE;IAC/C,OAAOY,aAAa,CAACP,MAAM,CAACL,EAAE,CAAC;EACjC;EACAU,oBAAoB,CAACL,MAAM,CAACL,EAAE,CAAC;AACjC,CAAC;AACD,SAASa,cAAcA,CAACC,EAAE,EAAEjB,KAAK,EAAEkB,OAAO,EAAE;EAC1C,MAAMC,SAAS,GAAGD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACC,SAAS;EACrF,MAAMC,KAAK,GAAGxB,SAAS,CAACqB,EAAE,CAAC;EAC3B,MAAMI,QAAQ,GAAG1B,MAAM,CAAC,CAAC;EACzBD,SAAS,CAAC,MAAM;IACd,IAAI,CAACG,QAAQ,CAACG,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,EAAE;IACnC,IAAImB,SAAS,EAAE;MACbC,KAAK,CAACV,OAAO,CAAC,CAAC;IACjB;IACAW,QAAQ,CAACX,OAAO,GAAGZ,cAAc,CAAC,MAAM;MACtCsB,KAAK,CAACV,OAAO,CAAC,CAAC;IACjB,CAAC,EAAEV,KAAK,CAAC;IACT,OAAO,MAAM;MACX,IAAIqB,QAAQ,CAACX,OAAO,EAAE;QACpBI,gBAAgB,CAACO,QAAQ,CAACX,OAAO,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;EACX,MAAMsB,KAAK,GAAG7B,WAAW,CAAC,MAAM;IAC9B,IAAI4B,QAAQ,CAACX,OAAO,EAAE;MACpBI,gBAAgB,CAACO,QAAQ,CAACX,OAAO,CAAC;IACpC;EACF,CAAC,EAAE,EAAE,CAAC;EACN,OAAOY,KAAK;AACd;AACA,eAAeN,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}