{"ast":null,"code":"import { ArrangeType } from '../commands/arrange';\nexport class CommandKeyBinding {\n  constructor(editor) {\n    this.editor = editor;\n    this.isBound = false;\n  }\n  bindKey() {\n    if (this.isBound) {\n      console.warn('CommandKeyBinding has been bound, please destroy it first');\n      return;\n    }\n    this.isBound = true;\n    const editor = this.editor;\n\n    // undo\n    const undoAction = () => editor.commandManager.undo();\n    editor.keybindingManager.register({\n      key: {\n        metaKey: true,\n        keyCode: 'KeyZ'\n      },\n      winKey: {\n        ctrlKey: true,\n        keyCode: 'KeyZ'\n      },\n      when: ctx => !ctx.isToolDragging,\n      actionName: 'Undo',\n      action: undoAction\n    });\n\n    // redo\n    const redoAction = () => editor.commandManager.redo();\n    editor.keybindingManager.register({\n      key: {\n        metaKey: true,\n        shiftKey: true,\n        keyCode: 'KeyZ'\n      },\n      winKey: {\n        ctrlKey: true,\n        shiftKey: true,\n        keyCode: 'KeyZ'\n      },\n      when: ctx => !ctx.isToolDragging,\n      actionName: 'Redo',\n      action: redoAction\n    });\n\n    // delete\n    const deleteAction = () => {\n      // TODO: 一些情况要考虑是否允许删除操作，以及允许删除的处理方案\n      // 绘制图形中、对图形旋转或缩放时\n      if (editor.hostEventManager.isEnableDelete) {\n        editor.selectedElements.removeFromScene();\n      }\n    };\n    editor.keybindingManager.register({\n      key: [{\n        keyCode: 'Backspace'\n      }, {\n        keyCode: 'Delete'\n      }],\n      when: ctx => !ctx.isToolDragging,\n      actionName: 'Delete',\n      action: deleteAction\n    });\n\n    // select all\n    const selectAllAction = () => {\n      editor.selectedElements.selectAll();\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: {\n        metaKey: true,\n        keyCode: 'KeyA'\n      },\n      winKey: {\n        ctrlKey: true,\n        keyCode: 'KeyA'\n      },\n      actionName: 'Select All',\n      action: selectAllAction\n    });\n\n    // cancel select\n    const cancelSelectAction = () => {\n      editor.selectedElements.clear();\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: {\n        keyCode: 'Escape'\n      },\n      when: ctx => !ctx.isToolDragging,\n      actionName: 'Cancel Select',\n      action: cancelSelectAction\n    });\n\n    // toggle ruler\n    const toggleRulersAction = () => {\n      editor.setting.set('enableRuler', !editor.setting.get('enableRuler'));\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: {\n        shiftKey: true,\n        keyCode: 'KeyR'\n      },\n      actionName: 'Toggle Rulers',\n      action: toggleRulersAction\n    });\n\n    // zoom to fix\n    const zoomToFitAction = () => {\n      editor.zoomManager.zoomToFit();\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: {\n        shiftKey: true,\n        keyCode: 'Digit1'\n      },\n      actionName: 'Zoom To Fit',\n      action: zoomToFitAction\n    });\n\n    // zoom to selection\n    const zoomToSelectionAction = () => {\n      editor.zoomManager.zoomToSelection();\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: {\n        shiftKey: true,\n        keyCode: 'Digit2'\n      },\n      actionName: 'Zoom To Selection',\n      action: zoomToSelectionAction\n    });\n\n    // zoom in\n    const zoomInAction = () => {\n      editor.zoomManager.zoomIn();\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: {\n        metaKey: true,\n        keyCode: 'Equal'\n      },\n      winKey: {\n        ctrlKey: true,\n        keyCode: 'Equal'\n      },\n      actionName: 'Zoom In',\n      action: zoomInAction\n    });\n\n    // zoom out\n    const zoomOutAction = () => {\n      editor.zoomManager.zoomOut();\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: {\n        metaKey: true,\n        keyCode: 'Minus'\n      },\n      winKey: {\n        ctrlKey: true,\n        keyCode: 'Minus'\n      },\n      actionName: 'Zoom Out',\n      action: zoomOutAction\n    });\n\n    // zoom to 100%\n    const zoomTo100 = () => {\n      editor.zoomManager.setZoomAndUpdateViewport(1);\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: [{\n        metaKey: true,\n        keyCode: 'Digit0'\n      }, {\n        shiftKey: true,\n        keyCode: 'Digit0'\n      }],\n      winKey: [{\n        ctrlKey: true,\n        keyCode: 'Digit0'\n      }, {\n        shiftKey: true,\n        keyCode: 'Digit0'\n      }],\n      actionName: 'Zoom To 100%',\n      action: zoomTo100\n    });\n\n    // arrange\n    // front\n    const frontAction = () => {\n      editor.selectedElements.arrange(ArrangeType.Front);\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: {\n        keyCode: 'BracketRight'\n      },\n      when: ctx => !ctx.isToolDragging,\n      actionName: 'Front',\n      action: frontAction\n    });\n\n    // back\n    const backAction = () => {\n      editor.selectedElements.arrange(ArrangeType.Back);\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: {\n        keyCode: 'BracketLeft'\n      },\n      when: ctx => !ctx.isToolDragging,\n      actionName: 'Back',\n      action: backAction\n    });\n\n    // forward\n    const forwardAction = () => {\n      editor.selectedElements.arrange(ArrangeType.Forward);\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: {\n        metaKey: true,\n        keyCode: 'BracketRight'\n      },\n      winKey: {\n        ctrlKey: true,\n        keyCode: 'BracketRight'\n      },\n      when: ctx => !ctx.isToolDragging,\n      actionName: 'Forward',\n      action: forwardAction\n    });\n\n    // backward\n    const backwardAction = () => {\n      editor.selectedElements.arrange(ArrangeType.Backward);\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: {\n        metaKey: true,\n        keyCode: 'BracketLeft'\n      },\n      winKey: {\n        ctrlKey: true,\n        keyCode: 'BracketLeft'\n      },\n      when: ctx => !ctx.isToolDragging,\n      actionName: 'Backward',\n      action: backwardAction\n    });\n  }\n  destroy() {\n    this.isBound = false;\n    //  KeyBindingManager will destroy all keybindings when editor destroy\n  }\n}","map":{"version":3,"names":["ArrangeType","CommandKeyBinding","constructor","editor","isBound","bindKey","console","warn","undoAction","commandManager","undo","keybindingManager","register","key","metaKey","keyCode","winKey","ctrlKey","when","ctx","isToolDragging","actionName","action","redoAction","redo","shiftKey","deleteAction","hostEventManager","isEnableDelete","selectedElements","removeFromScene","selectAllAction","selectAll","sceneGraph","render","cancelSelectAction","clear","toggleRulersAction","setting","set","get","zoomToFitAction","zoomManager","zoomToFit","zoomToSelectionAction","zoomToSelection","zoomInAction","zoomIn","zoomOutAction","zoomOut","zoomTo100","setZoomAndUpdateViewport","frontAction","arrange","Front","backAction","Back","forwardAction","Forward","backwardAction","Backward","destroy"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/editor/host_event_manager/command_key_binding.ts"],"sourcesContent":["import { ArrangeType } from '../commands/arrange';\nimport { Editor } from '../editor';\n\nexport class CommandKeyBinding {\n  private isBound = false;\n\n  constructor(private editor: Editor) {}\n\n  bindKey() {\n    if (this.isBound) {\n      console.warn('CommandKeyBinding has been bound, please destroy it first');\n      return;\n    }\n    this.isBound = true;\n    const editor = this.editor;\n\n    // undo\n    const undoAction = () => editor.commandManager.undo();\n    editor.keybindingManager.register({\n      key: { metaKey: true, keyCode: 'KeyZ' },\n      winKey: { ctrlKey: true, keyCode: 'KeyZ' },\n      when: (ctx) => !ctx.isToolDragging,\n      actionName: 'Undo',\n      action: undoAction,\n    });\n\n    // redo\n    const redoAction = () => editor.commandManager.redo();\n    editor.keybindingManager.register({\n      key: { metaKey: true, shiftKey: true, keyCode: 'KeyZ' },\n      winKey: { ctrlKey: true, shiftKey: true, keyCode: 'KeyZ' },\n      when: (ctx) => !ctx.isToolDragging,\n      actionName: 'Redo',\n      action: redoAction,\n    });\n\n    // delete\n    const deleteAction = () => {\n      // TODO: 一些情况要考虑是否允许删除操作，以及允许删除的处理方案\n      // 绘制图形中、对图形旋转或缩放时\n      if (editor.hostEventManager.isEnableDelete) {\n        editor.selectedElements.removeFromScene();\n      }\n    };\n    editor.keybindingManager.register({\n      key: [{ keyCode: 'Backspace' }, { keyCode: 'Delete' }],\n      when: (ctx) => !ctx.isToolDragging,\n      actionName: 'Delete',\n      action: deleteAction,\n    });\n\n    // select all\n    const selectAllAction = () => {\n      editor.selectedElements.selectAll();\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: { metaKey: true, keyCode: 'KeyA' },\n      winKey: { ctrlKey: true, keyCode: 'KeyA' },\n      actionName: 'Select All',\n      action: selectAllAction,\n    });\n\n    // cancel select\n    const cancelSelectAction = () => {\n      editor.selectedElements.clear();\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: { keyCode: 'Escape' },\n      when: (ctx) => !ctx.isToolDragging,\n      actionName: 'Cancel Select',\n      action: cancelSelectAction,\n    });\n\n    // toggle ruler\n    const toggleRulersAction = () => {\n      editor.setting.set('enableRuler', !editor.setting.get('enableRuler'));\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: { shiftKey: true, keyCode: 'KeyR' },\n      actionName: 'Toggle Rulers',\n      action: toggleRulersAction,\n    });\n\n    // zoom to fix\n    const zoomToFitAction = () => {\n      editor.zoomManager.zoomToFit();\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: { shiftKey: true, keyCode: 'Digit1' },\n      actionName: 'Zoom To Fit',\n      action: zoomToFitAction,\n    });\n\n    // zoom to selection\n    const zoomToSelectionAction = () => {\n      editor.zoomManager.zoomToSelection();\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: { shiftKey: true, keyCode: 'Digit2' },\n      actionName: 'Zoom To Selection',\n      action: zoomToSelectionAction,\n    });\n\n    // zoom in\n    const zoomInAction = () => {\n      editor.zoomManager.zoomIn();\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: { metaKey: true, keyCode: 'Equal' },\n      winKey: { ctrlKey: true, keyCode: 'Equal' },\n      actionName: 'Zoom In',\n      action: zoomInAction,\n    });\n\n    // zoom out\n    const zoomOutAction = () => {\n      editor.zoomManager.zoomOut();\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: { metaKey: true, keyCode: 'Minus' },\n      winKey: { ctrlKey: true, keyCode: 'Minus' },\n      actionName: 'Zoom Out',\n      action: zoomOutAction,\n    });\n\n    // zoom to 100%\n    const zoomTo100 = () => {\n      editor.zoomManager.setZoomAndUpdateViewport(1);\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: [\n        { metaKey: true, keyCode: 'Digit0' },\n        { shiftKey: true, keyCode: 'Digit0' },\n      ],\n      winKey: [\n        { ctrlKey: true, keyCode: 'Digit0' },\n        { shiftKey: true, keyCode: 'Digit0' },\n      ],\n      actionName: 'Zoom To 100%',\n      action: zoomTo100,\n    });\n\n    // arrange\n    // front\n    const frontAction = () => {\n      editor.selectedElements.arrange(ArrangeType.Front);\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: { keyCode: 'BracketRight' },\n      when: (ctx) => !ctx.isToolDragging,\n      actionName: 'Front',\n      action: frontAction,\n    });\n\n    // back\n    const backAction = () => {\n      editor.selectedElements.arrange(ArrangeType.Back);\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: { keyCode: 'BracketLeft' },\n      when: (ctx) => !ctx.isToolDragging,\n      actionName: 'Back',\n      action: backAction,\n    });\n\n    // forward\n    const forwardAction = () => {\n      editor.selectedElements.arrange(ArrangeType.Forward);\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: { metaKey: true, keyCode: 'BracketRight' },\n      winKey: { ctrlKey: true, keyCode: 'BracketRight' },\n      when: (ctx) => !ctx.isToolDragging,\n      actionName: 'Forward',\n      action: forwardAction,\n    });\n\n    // backward\n    const backwardAction = () => {\n      editor.selectedElements.arrange(ArrangeType.Backward);\n      editor.sceneGraph.render();\n    };\n    editor.keybindingManager.register({\n      key: { metaKey: true, keyCode: 'BracketLeft' },\n      winKey: { ctrlKey: true, keyCode: 'BracketLeft' },\n      when: (ctx) => !ctx.isToolDragging,\n      actionName: 'Backward',\n      action: backwardAction,\n    });\n  }\n\n  destroy() {\n    this.isBound = false;\n    //  KeyBindingManager will destroy all keybindings when editor destroy\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}