{"ast":null,"code":"/**\n * EventEmitter\n *\n * Publish-Subscribe Design Pattern\n */\n\nclass EventEmitter {\n  constructor() {\n    this.eventMap = {};\n  }\n  on(eventName, listener) {\n    if (!this.eventMap[eventName]) {\n      this.eventMap[eventName] = [];\n    }\n    this.eventMap[eventName].push(listener);\n    return this;\n  }\n  emit(eventName, ...args) {\n    const listeners = this.eventMap[eventName];\n    if (!listeners || listeners.length === 0) return false;\n    listeners.forEach(listener => {\n      listener(...args);\n    });\n    return true;\n  }\n  off(eventName, listener) {\n    if (this.eventMap[eventName]) {\n      this.eventMap[eventName] = this.eventMap[eventName].filter(item => item !== listener);\n    }\n    return this;\n  }\n}\nexport default EventEmitter;","map":{"version":3,"names":["EventEmitter","constructor","eventMap","on","eventName","listener","push","emit","args","listeners","length","forEach","off","filter","item"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/utils/event_emitter.ts"],"sourcesContent":["/**\n * EventEmitter\n *\n * Publish-Subscribe Design Pattern\n */\n\nclass EventEmitter<T extends Record<string | symbol, any>> {\n  private eventMap: Record<keyof T, Array<(...args: any[]) => void>> =\n    {} as any;\n\n  on<K extends keyof T>(eventName: K, listener: T[K]) {\n    if (!this.eventMap[eventName]) {\n      this.eventMap[eventName] = [];\n    }\n    this.eventMap[eventName].push(listener);\n    return this;\n  }\n\n  emit<K extends keyof T>(eventName: K, ...args: Parameters<T[K]>) {\n    const listeners = this.eventMap[eventName];\n    if (!listeners || listeners.length === 0) return false;\n    listeners.forEach((listener) => {\n      listener(...args);\n    });\n    return true;\n  }\n\n  off<K extends keyof T>(eventName: K, listener: T[K]) {\n    if (this.eventMap[eventName]) {\n      this.eventMap[eventName] = this.eventMap[eventName].filter(\n        (item) => item !== listener,\n      );\n    }\n    return this;\n  }\n}\n\nexport default EventEmitter;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,YAAY,CAAyC;EAAAC,YAAA;IAAA,KACjDC,QAAQ,GACd,CAAC,CAAC;EAAA;EAEJC,EAAEA,CAAoBC,SAAY,EAAEC,QAAc,EAAE;IAClD,IAAI,CAAC,IAAI,CAACH,QAAQ,CAACE,SAAS,CAAC,EAAE;MAC7B,IAAI,CAACF,QAAQ,CAACE,SAAS,CAAC,GAAG,EAAE;IAC/B;IACA,IAAI,CAACF,QAAQ,CAACE,SAAS,CAAC,CAACE,IAAI,CAACD,QAAQ,CAAC;IACvC,OAAO,IAAI;EACb;EAEAE,IAAIA,CAAoBH,SAAY,EAAE,GAAGI,IAAsB,EAAE;IAC/D,MAAMC,SAAS,GAAG,IAAI,CAACP,QAAQ,CAACE,SAAS,CAAC;IAC1C,IAAI,CAACK,SAAS,IAAIA,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;IACtDD,SAAS,CAACE,OAAO,CAAEN,QAAQ,IAAK;MAC9BA,QAAQ,CAAC,GAAGG,IAAI,CAAC;IACnB,CAAC,CAAC;IACF,OAAO,IAAI;EACb;EAEAI,GAAGA,CAAoBR,SAAY,EAAEC,QAAc,EAAE;IACnD,IAAI,IAAI,CAACH,QAAQ,CAACE,SAAS,CAAC,EAAE;MAC5B,IAAI,CAACF,QAAQ,CAACE,SAAS,CAAC,GAAG,IAAI,CAACF,QAAQ,CAACE,SAAS,CAAC,CAACS,MAAM,CACvDC,IAAI,IAAKA,IAAI,KAAKT,QACrB,CAAC;IACH;IACA,OAAO,IAAI;EACb;AACF;AAEA,eAAeL,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}