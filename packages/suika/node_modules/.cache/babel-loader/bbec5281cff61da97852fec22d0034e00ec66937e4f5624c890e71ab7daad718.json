{"ast":null,"code":"import { useState } from 'react';\nimport useMemoizedFn from '../useMemoizedFn';\nfunction useMap(initialValue) {\n  const getInitValue = () => {\n    return initialValue === undefined ? new Map() : new Map(initialValue);\n  };\n  const [map, setMap] = useState(() => getInitValue());\n  const set = (key, entry) => {\n    setMap(prev => {\n      const temp = new Map(prev);\n      temp.set(key, entry);\n      return temp;\n    });\n  };\n  const setAll = newMap => {\n    setMap(new Map(newMap));\n  };\n  const remove = key => {\n    setMap(prev => {\n      const temp = new Map(prev);\n      temp.delete(key);\n      return temp;\n    });\n  };\n  const reset = () => setMap(getInitValue());\n  const get = key => map.get(key);\n  return [map, {\n    set: useMemoizedFn(set),\n    setAll: useMemoizedFn(setAll),\n    remove: useMemoizedFn(remove),\n    reset: useMemoizedFn(reset),\n    get: useMemoizedFn(get)\n  }];\n}\nexport default useMap;","map":{"version":3,"names":["useState","useMemoizedFn","useMap","initialValue","getInitValue","undefined","Map","map","setMap","set","key","entry","prev","temp","setAll","newMap","remove","delete","reset","get"],"sources":["/Users/yangdan/zf-workspace/react/suika/node_modules/.pnpm/registry.npmmirror.com+ahooks@3.7.4_react@18.2.0/node_modules/ahooks/es/useMap/index.js"],"sourcesContent":["import { useState } from 'react';\nimport useMemoizedFn from '../useMemoizedFn';\nfunction useMap(initialValue) {\n  const getInitValue = () => {\n    return initialValue === undefined ? new Map() : new Map(initialValue);\n  };\n  const [map, setMap] = useState(() => getInitValue());\n  const set = (key, entry) => {\n    setMap(prev => {\n      const temp = new Map(prev);\n      temp.set(key, entry);\n      return temp;\n    });\n  };\n  const setAll = newMap => {\n    setMap(new Map(newMap));\n  };\n  const remove = key => {\n    setMap(prev => {\n      const temp = new Map(prev);\n      temp.delete(key);\n      return temp;\n    });\n  };\n  const reset = () => setMap(getInitValue());\n  const get = key => map.get(key);\n  return [map, {\n    set: useMemoizedFn(set),\n    setAll: useMemoizedFn(setAll),\n    remove: useMemoizedFn(remove),\n    reset: useMemoizedFn(reset),\n    get: useMemoizedFn(get)\n  }];\n}\nexport default useMap;"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,SAASC,MAAMA,CAACC,YAAY,EAAE;EAC5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,OAAOD,YAAY,KAAKE,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAG,IAAIA,GAAG,CAACH,YAAY,CAAC;EACvE,CAAC;EACD,MAAM,CAACI,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,MAAMI,YAAY,CAAC,CAAC,CAAC;EACpD,MAAMK,GAAG,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;IAC1BH,MAAM,CAACI,IAAI,IAAI;MACb,MAAMC,IAAI,GAAG,IAAIP,GAAG,CAACM,IAAI,CAAC;MAC1BC,IAAI,CAACJ,GAAG,CAACC,GAAG,EAAEC,KAAK,CAAC;MACpB,OAAOE,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EACD,MAAMC,MAAM,GAAGC,MAAM,IAAI;IACvBP,MAAM,CAAC,IAAIF,GAAG,CAACS,MAAM,CAAC,CAAC;EACzB,CAAC;EACD,MAAMC,MAAM,GAAGN,GAAG,IAAI;IACpBF,MAAM,CAACI,IAAI,IAAI;MACb,MAAMC,IAAI,GAAG,IAAIP,GAAG,CAACM,IAAI,CAAC;MAC1BC,IAAI,CAACI,MAAM,CAACP,GAAG,CAAC;MAChB,OAAOG,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EACD,MAAMK,KAAK,GAAGA,CAAA,KAAMV,MAAM,CAACJ,YAAY,CAAC,CAAC,CAAC;EAC1C,MAAMe,GAAG,GAAGT,GAAG,IAAIH,GAAG,CAACY,GAAG,CAACT,GAAG,CAAC;EAC/B,OAAO,CAACH,GAAG,EAAE;IACXE,GAAG,EAAER,aAAa,CAACQ,GAAG,CAAC;IACvBK,MAAM,EAAEb,aAAa,CAACa,MAAM,CAAC;IAC7BE,MAAM,EAAEf,aAAa,CAACe,MAAM,CAAC;IAC7BE,KAAK,EAAEjB,aAAa,CAACiB,KAAK,CAAC;IAC3BC,GAAG,EAAElB,aAAa,CAACkB,GAAG;EACxB,CAAC,CAAC;AACJ;AACA,eAAejB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}