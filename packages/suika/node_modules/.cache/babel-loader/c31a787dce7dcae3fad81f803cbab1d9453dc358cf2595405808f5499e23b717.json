{"ast":null,"code":"import debounce from 'lodash.debounce';\nimport { SetElementsAttrs } from '../commands/set_elements_attrs';\nimport { arrMap } from '../../utils/array_util';\nimport { noop } from '../../utils/common';\n\n/**\n * move graphs by arrow key binding\n */\nexport class MoveGraphsKeyBinding {\n  constructor(editor) {\n    this.editor = editor;\n    this.unbindHandler = noop;\n    this.hadBound = false;\n  }\n  bindKey() {\n    if (this.hadBound) {\n      console.warn('MoveGraphsKeyBinding had already bound, please unbind first');\n      return;\n    }\n    this.hadBound = true;\n    const editor = this.editor;\n    let startPoints = [];\n    let isEnableUpdateStartPoints = true;\n    const recordDebounce = debounce(moveEls => {\n      isEnableUpdateStartPoints = true;\n      this.editor.commandManager.enableRedoUndo();\n      editor.commandManager.pushCommand(new SetElementsAttrs('Move elements', moveEls, arrMap(moveEls, ({\n        x,\n        y\n      }) => ({\n        x,\n        y\n      })), startPoints));\n    }, editor.setting.get('moveElementsDelay'));\n    const flushRecordDebounce = () => {\n      recordDebounce.flush();\n    };\n    const pressed = {\n      ArrowLeft: false,\n      ArrowRight: false,\n      ArrowUp: false,\n      ArrowDown: false\n    };\n    const checkPressed = () => pressed.ArrowLeft || pressed.ArrowRight || pressed.ArrowUp || pressed.ArrowDown;\n    const handleKeydown = event => {\n      const movedEls = editor.selectedElements.getItems();\n      if (movedEls.length === 0) return;\n      if (event.key in pressed) {\n        pressed[event.key] = true;\n      }\n      if (!checkPressed()) return;\n      if (isEnableUpdateStartPoints) {\n        startPoints = arrMap(movedEls, el => ({\n          x: el.x,\n          y: el.y\n        }));\n        isEnableUpdateStartPoints = false;\n      }\n      let step = editor.setting.get('moveElementsStep');\n      if (event.shiftKey) step = editor.setting.get('moveElementsStepFast');\n      if (pressed.ArrowLeft) {\n        editor.moveElements(movedEls, -step, 0);\n      }\n      if (pressed.ArrowRight) {\n        editor.moveElements(movedEls, step, 0);\n      }\n      if (pressed.ArrowUp) {\n        editor.moveElements(movedEls, 0, -step);\n      }\n      if (pressed.ArrowDown) {\n        editor.moveElements(movedEls, 0, step);\n      }\n      this.editor.commandManager.disableRedoUndo();\n      recordDebounce(movedEls);\n      editor.sceneGraph.render();\n    };\n    const handleKeyup = e => {\n      const key = e.key;\n      if (key in pressed) {\n        pressed[key] = false;\n      }\n    };\n    const keys = ['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'];\n    this.editor.keybindingManager.register({\n      key: [...keys.map(keyCode => ({\n        keyCode\n      })), ...keys.map(keyCode => ({\n        shiftKey: true,\n        keyCode\n      }))],\n      actionName: 'Move Elements',\n      action: handleKeydown\n    });\n    window.addEventListener('keyup', handleKeyup);\n    editor.commandManager.on('beforeExecCmd', flushRecordDebounce);\n    this.unbindHandler = () => {\n      window.removeEventListener('keyup', handleKeyup);\n      editor.commandManager.off('beforeExecCmd', flushRecordDebounce);\n    };\n  }\n  destroy() {\n    this.unbindHandler();\n    this.hadBound = false;\n  }\n}","map":{"version":3,"names":["debounce","SetElementsAttrs","arrMap","noop","MoveGraphsKeyBinding","constructor","editor","unbindHandler","hadBound","bindKey","console","warn","startPoints","isEnableUpdateStartPoints","recordDebounce","moveEls","commandManager","enableRedoUndo","pushCommand","x","y","setting","get","flushRecordDebounce","flush","pressed","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","checkPressed","handleKeydown","event","movedEls","selectedElements","getItems","length","key","el","step","shiftKey","moveElements","disableRedoUndo","sceneGraph","render","handleKeyup","e","keys","keybindingManager","register","map","keyCode","actionName","action","window","addEventListener","on","removeEventListener","off","destroy"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/editor/host_event_manager/move_graphs_key_binding.ts"],"sourcesContent":["import debounce from 'lodash.debounce';\nimport { SetElementsAttrs } from '../commands/set_elements_attrs';\nimport { arrMap } from '../../utils/array_util';\nimport { Editor } from '../editor';\nimport { Graph } from '../scene/graph';\nimport { IPoint } from '../../type';\nimport { noop } from '../../utils/common';\n\n/**\n * move graphs by arrow key binding\n */\nexport class MoveGraphsKeyBinding {\n  private unbindHandler = noop;\n  private hadBound = false;\n\n  constructor(private editor: Editor) {}\n\n  bindKey() {\n    if (this.hadBound) {\n      console.warn(\n        'MoveGraphsKeyBinding had already bound, please unbind first',\n      );\n      return;\n    }\n    this.hadBound = true;\n\n    const editor = this.editor;\n    let startPoints: IPoint[] = [];\n    let isEnableUpdateStartPoints = true;\n\n    const recordDebounce = debounce((moveEls: Graph[]) => {\n      isEnableUpdateStartPoints = true;\n      this.editor.commandManager.enableRedoUndo();\n      editor.commandManager.pushCommand(\n        new SetElementsAttrs(\n          'Move elements',\n          moveEls,\n          arrMap(moveEls, ({ x, y }) => ({ x, y })),\n          startPoints,\n        ),\n      );\n    }, editor.setting.get('moveElementsDelay'));\n\n    const flushRecordDebounce = () => {\n      recordDebounce.flush();\n    };\n\n    const pressed = {\n      ArrowLeft: false,\n      ArrowRight: false,\n      ArrowUp: false,\n      ArrowDown: false,\n    };\n\n    const checkPressed = () =>\n      pressed.ArrowLeft ||\n      pressed.ArrowRight ||\n      pressed.ArrowUp ||\n      pressed.ArrowDown;\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      const movedEls = editor.selectedElements.getItems();\n      if (movedEls.length === 0) return;\n\n      if (event.key in pressed) {\n        pressed[event.key as keyof typeof pressed] = true;\n      }\n      if (!checkPressed()) return;\n\n      if (isEnableUpdateStartPoints) {\n        startPoints = arrMap(movedEls, (el) => ({ x: el.x, y: el.y }));\n        isEnableUpdateStartPoints = false;\n      }\n\n      let step = editor.setting.get('moveElementsStep');\n      if (event.shiftKey) step = editor.setting.get('moveElementsStepFast');\n\n      if (pressed.ArrowLeft) {\n        editor.moveElements(movedEls, -step, 0);\n      }\n      if (pressed.ArrowRight) {\n        editor.moveElements(movedEls, step, 0);\n      }\n      if (pressed.ArrowUp) {\n        editor.moveElements(movedEls, 0, -step);\n      }\n      if (pressed.ArrowDown) {\n        editor.moveElements(movedEls, 0, step);\n      }\n\n      this.editor.commandManager.disableRedoUndo();\n      recordDebounce(movedEls);\n      editor.sceneGraph.render();\n    };\n\n    const handleKeyup = (e: KeyboardEvent) => {\n      const key = e.key;\n      if (key in pressed) {\n        pressed[key as keyof typeof pressed] = false;\n      }\n    };\n\n    const keys = ['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'];\n\n    this.editor.keybindingManager.register({\n      key: [\n        ...keys.map((keyCode) => ({ keyCode })),\n        ...keys.map((keyCode) => ({ shiftKey: true, keyCode })),\n      ],\n      actionName: 'Move Elements',\n      action: handleKeydown,\n    });\n\n    window.addEventListener('keyup', handleKeyup);\n    editor.commandManager.on('beforeExecCmd', flushRecordDebounce);\n\n    this.unbindHandler = () => {\n      window.removeEventListener('keyup', handleKeyup);\n      editor.commandManager.off('beforeExecCmd', flushRecordDebounce);\n    };\n  }\n\n  destroy() {\n    this.unbindHandler();\n    this.hadBound = false;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}