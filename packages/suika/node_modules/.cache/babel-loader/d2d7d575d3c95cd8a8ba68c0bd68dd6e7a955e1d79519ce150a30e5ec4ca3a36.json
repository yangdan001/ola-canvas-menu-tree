{"ast":null,"code":"/**\n * 数组长度必须大于等于 1 的数组\n */\n\nexport let GraphType = /*#__PURE__*/function (GraphType) {\n  GraphType[\"Graph\"] = \"Graph\";\n  GraphType[\"Rect\"] = \"Rect\";\n  GraphType[\"Ellipse\"] = \"Ellipse\";\n  GraphType[\"Text\"] = \"Text\";\n  GraphType[\"Line\"] = \"Line\";\n  return GraphType;\n}({});\n\n/**\n * set some optional property\n *\n * @example\n * type Foo = { a: string; b: number; c: boolean };\n * type FooWithOptionalB = Optional<Foo, 'b'>;\n * // { a: string; b?: number; c: boolean }\n */","map":{"version":3,"names":["GraphType"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/type/index.ts"],"sourcesContent":["export interface IRect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport type IBox = IRect;\n\nexport interface IBox2 {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n}\n\nexport interface IBoxWithMid extends IBox2 {\n  midX: number;\n  midY: number;\n}\n\nexport interface ICircle {\n  x: number;\n  y: number;\n  radius: number;\n}\n\n/**\n * 数组长度必须大于等于 1 的数组\n */\nexport type INoEmptyArray<T> = [T, ...T[]];\n\nexport interface IPoint {\n  x: number;\n  y: number;\n}\n\nexport interface IObject {\n  id: string;\n  name: string;\n}\n\nexport enum GraphType {\n  Graph = 'Graph',\n  Rect = 'Rect',\n  Ellipse = 'Ellipse',\n  Text = 'Text',\n  Line = 'Line',\n}\n\n/**\n * set some optional property\n *\n * @example\n * type Foo = { a: string; b: number; c: boolean };\n * type FooWithOptionalB = Optional<Foo, 'b'>;\n * // { a: string; b?: number; c: boolean }\n */\nexport type Optional<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n\nexport interface IEditorPaperData {\n  appVersion: string;\n  paperId: string;\n  data: string;\n}\n\nexport interface IVerticalLine {\n  x: number;\n  ys: number[];\n}\n\nexport interface IHorizontalLine {\n  y: number;\n  xs: number[];\n}\n"],"mappings":"AA2BA;AACA;AACA;;AAaA,WAAYA,SAAS,0BAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;;AAQrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}