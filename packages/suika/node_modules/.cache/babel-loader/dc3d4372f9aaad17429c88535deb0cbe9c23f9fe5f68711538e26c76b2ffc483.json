{"ast":null,"code":"export let TextureType = /*#__PURE__*/function (TextureType) {\n  TextureType[\"Solid\"] = \"Solid\";\n  TextureType[\"Image\"] = \"Image\";\n  return TextureType;\n}({});\nexport const DEFAULT_SOLID_TEXTURE = {\n  type: TextureType.Solid,\n  attrs: {\n    r: 217,\n    g: 217,\n    b: 217,\n    a: 1\n  }\n};\nexport const DEFAULT_IMAGE_TEXTURE = {\n  type: TextureType.Image,\n  attrs: {}\n};\nexport const DEFAULT_TEXTURES = {\n  [TextureType.Solid]: DEFAULT_SOLID_TEXTURE,\n  [TextureType.Image]: DEFAULT_IMAGE_TEXTURE\n};\nexport const DEFAULT_IMAGE = (() => {\n  const canvas = document.createElement('canvas');\n  canvas.width = 4;\n  canvas.height = 4;\n  const ctx = canvas.getContext('2d');\n  // draw a 4x4 black-white grid\n  for (let i = 0; i < canvas.width; i++) {\n    for (let j = 0; j < canvas.height; j++) {\n      // The color is determined by the parity (even or odd nature) of the sum of i and j.\n      const color = (i + j) % 2 === 0 ? 'black' : 'white';\n      ctx.fillStyle = color;\n      ctx.fillRect(i, j, 1, 1);\n    }\n  }\n  return canvas;\n})();\nexport const DEFAULT_IMAGE_SRC = DEFAULT_IMAGE.toDataURL();","map":{"version":3,"names":["TextureType","DEFAULT_SOLID_TEXTURE","type","Solid","attrs","r","g","b","a","DEFAULT_IMAGE_TEXTURE","Image","DEFAULT_TEXTURES","DEFAULT_IMAGE","canvas","document","createElement","width","height","ctx","getContext","i","j","color","fillStyle","fillRect","DEFAULT_IMAGE_SRC","toDataURL"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/editor/texture.ts"],"sourcesContent":["export enum TextureType {\n  Solid = 'Solid',\n  Image = 'Image',\n}\n\nexport interface IRGBA {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\nexport interface TextureSolid {\n  type: TextureType.Solid;\n  attrs: IRGBA;\n}\n\nexport interface TextureImage {\n  type: TextureType.Image;\n  attrs: {\n    src?: string;\n    opacity?: number;\n  };\n}\n\nexport type ITexture = TextureSolid | TextureImage;\n\nexport const DEFAULT_SOLID_TEXTURE: TextureSolid = {\n  type: TextureType.Solid,\n  attrs: { r: 217, g: 217, b: 217, a: 1 },\n};\n\nexport const DEFAULT_IMAGE_TEXTURE: TextureImage = {\n  type: TextureType.Image,\n  attrs: {},\n};\n\nexport const DEFAULT_TEXTURES = {\n  [TextureType.Solid]: DEFAULT_SOLID_TEXTURE,\n  [TextureType.Image]: DEFAULT_IMAGE_TEXTURE,\n};\n\nexport const DEFAULT_IMAGE = (() => {\n  const canvas = document.createElement('canvas');\n  canvas.width = 4;\n  canvas.height = 4;\n  const ctx = canvas.getContext('2d')!;\n  // draw a 4x4 black-white grid\n  for (let i = 0; i < canvas.width; i++) {\n    for (let j = 0; j < canvas.height; j++) {\n      // The color is determined by the parity (even or odd nature) of the sum of i and j.\n      const color = (i + j) % 2 === 0 ? 'black' : 'white';\n      ctx.fillStyle = color;\n      ctx.fillRect(i, j, 1, 1);\n    }\n  }\n  return canvas;\n})();\n\nexport const DEFAULT_IMAGE_SRC = DEFAULT_IMAGE.toDataURL();\n"],"mappings":"AAAA,WAAYA,WAAW,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AA2BvB,OAAO,MAAMC,qBAAmC,GAAG;EACjDC,IAAI,EAAEF,WAAW,CAACG,KAAK;EACvBC,KAAK,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAE;AACxC,CAAC;AAED,OAAO,MAAMC,qBAAmC,GAAG;EACjDP,IAAI,EAAEF,WAAW,CAACU,KAAK;EACvBN,KAAK,EAAE,CAAC;AACV,CAAC;AAED,OAAO,MAAMO,gBAAgB,GAAG;EAC9B,CAACX,WAAW,CAACG,KAAK,GAAGF,qBAAqB;EAC1C,CAACD,WAAW,CAACU,KAAK,GAAGD;AACvB,CAAC;AAED,OAAO,MAAMG,aAAa,GAAG,CAAC,MAAM;EAClC,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/CF,MAAM,CAACG,KAAK,GAAG,CAAC;EAChBH,MAAM,CAACI,MAAM,GAAG,CAAC;EACjB,MAAMC,GAAG,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAE;EACpC;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,CAACG,KAAK,EAAEI,CAAC,EAAE,EAAE;IACrC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,MAAM,CAACI,MAAM,EAAEI,CAAC,EAAE,EAAE;MACtC;MACA,MAAMC,KAAK,GAAG,CAACF,CAAC,GAAGC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,GAAG,OAAO;MACnDH,GAAG,CAACK,SAAS,GAAGD,KAAK;MACrBJ,GAAG,CAACM,QAAQ,CAACJ,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1B;EACF;EACA,OAAOR,MAAM;AACf,CAAC,EAAE,CAAC;AAEJ,OAAO,MAAMY,iBAAiB,GAAGb,aAAa,CAACc,SAAS,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}