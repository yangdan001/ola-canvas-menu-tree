{"ast":null,"code":"import { noop } from '../../utils/common';\nimport EventEmitter from '../../utils/event_emitter';\nimport { DragCanvasTool } from './tool_drag_canvas';\nimport { DrawEllipseTool } from './tool_draw_ellipse';\nimport { DrawRectTool } from './tool_draw_rect';\nimport { SelectTool } from './tool_select';\nimport { DrawTextTool } from './tool_draw_text';\nimport { DrawLineTool } from './tool_draw_line';\nexport class ToolManager {\n  constructor(editor) {\n    this.editor = editor;\n    this.toolMap = new Map();\n    /**\n     * hotkey => tool type\n     */\n    this.hotkeyMap = new Map();\n    this.currentTool = null;\n    this.eventEmitter = new EventEmitter();\n    this.enableSwitchTool = true;\n    this.isDragging = false;\n    this._unbindEvent = void 0;\n    this.registerToolAndHotKey(new SelectTool(editor));\n    this.registerToolAndHotKey(new DrawRectTool(editor));\n    this.registerToolAndHotKey(new DrawEllipseTool(editor));\n    this.registerToolAndHotKey(new DrawLineTool(editor));\n    this.registerToolAndHotKey(new DrawTextTool(editor));\n    this.registerToolAndHotKey(new DragCanvasTool(editor));\n    this.setActiveTool(SelectTool.type);\n    this._unbindEvent = this.bindEvent();\n  }\n  registerToolAndHotKey(tool) {\n    if (this.toolMap.has(tool.type)) {\n      console.warn(`tool \"${tool.type}\" had exit, replace it!`);\n    }\n    this.toolMap.set(tool.type, tool);\n    if (this.hotkeyMap.has(tool.hotkey)) {\n      console.warn(`hotkey \"${tool.type}\" had exit, replace it!`);\n    }\n    this.hotkeyMap.set(tool.hotkey, tool.type);\n  }\n  getActiveToolName() {\n    var _this$currentTool;\n    return (_this$currentTool = this.currentTool) === null || _this$currentTool === void 0 ? void 0 : _this$currentTool.type;\n  }\n  bindEvent() {\n    // (1) drag block strategy\n    let isPressing = false;\n    let startPos = [0, 0];\n    let startWithLeftMouse = false;\n    const handleDown = e => {\n      isPressing = true;\n      this.isDragging = false;\n      startWithLeftMouse = false;\n      if (e.button !== 0) {\n        // must be left mouse button\n        return;\n      }\n      if (this.editor.textEditor.isEditing()) {\n        return;\n      }\n      startWithLeftMouse = true;\n      if (!this.currentTool) {\n        throw new Error('there is no active tool');\n      }\n      startPos = [e.clientX, e.clientY];\n      this.currentTool.start(e);\n    };\n    const handleMove = e => {\n      if (!this.currentTool) {\n        throw new Error('未设置当前使用工具');\n      }\n      if (isPressing) {\n        if (!startWithLeftMouse) {\n          return;\n        }\n        const dx = e.clientX - startPos[0];\n        const dy = e.clientY - startPos[1];\n        const dragBlockStep = this.editor.setting.get('dragBlockStep');\n        if (!this.isDragging && (Math.abs(dx) > dragBlockStep || Math.abs(dy) > dragBlockStep)) {\n          this.isDragging = true;\n        }\n        if (this.isDragging) {\n          this.enableSwitchTool = false;\n          this.editor.hostEventManager.disableDragBySpace();\n          this.currentTool.drag(e);\n        }\n      } else {\n        this.currentTool.moveExcludeDrag(e);\n      }\n    };\n    const handleUp = e => {\n      this.enableSwitchTool = true;\n      if (!startWithLeftMouse) {\n        return;\n      }\n      if (!this.currentTool) {\n        throw new Error('未设置当前使用工具');\n      }\n      if (isPressing) {\n        this.editor.hostEventManager.enableDragBySpace();\n        isPressing = false;\n        this.currentTool.end(e, this.isDragging);\n        this.currentTool.afterEnd();\n      }\n      this.isDragging = false;\n    };\n    const canvas = this.editor.canvasElement;\n    canvas.addEventListener('pointerdown', handleDown);\n    window.addEventListener('pointermove', handleMove);\n    window.addEventListener('pointerup', handleUp);\n\n    // (2) tool hotkey binding\n    this.hotkeyMap.forEach((type, key) => {\n      key = `Key${key.toUpperCase()}`;\n      this.editor.keybindingManager.register({\n        key: {\n          keyCode: key\n        },\n        actionName: type,\n        action: () => {\n          this.setActiveTool(type);\n        }\n      });\n    });\n    return function unbindEvent() {\n      canvas.removeEventListener('pointerdown', handleDown);\n      window.removeEventListener('pointermove', handleMove);\n      window.removeEventListener('pointerup', handleUp);\n    };\n  }\n  unbindEvent() {\n    this._unbindEvent();\n    this._unbindEvent = noop;\n  }\n  setActiveTool(toolName) {\n    if (!this.enableSwitchTool || this.getActiveToolName() === toolName) {\n      return;\n    }\n    const prevTool = this.currentTool;\n    const currentTool = this.currentTool = this.toolMap.get(toolName) || null;\n    if (!currentTool) {\n      throw new Error(`没有 ${toolName} 对应的工具对象`);\n    }\n    prevTool && prevTool.inactive();\n    currentTool.active();\n    this.eventEmitter.emit('change', currentTool.type);\n  }\n  on(eventName, handler) {\n    this.eventEmitter.on(eventName, handler);\n  }\n  off(eventName, handler) {\n    this.eventEmitter.off(eventName, handler);\n  }\n  destroy() {\n    var _this$currentTool2;\n    (_this$currentTool2 = this.currentTool) === null || _this$currentTool2 === void 0 ? void 0 : _this$currentTool2.inactive();\n  }\n}","map":{"version":3,"names":["noop","EventEmitter","DragCanvasTool","DrawEllipseTool","DrawRectTool","SelectTool","DrawTextTool","DrawLineTool","ToolManager","constructor","editor","toolMap","Map","hotkeyMap","currentTool","eventEmitter","enableSwitchTool","isDragging","_unbindEvent","registerToolAndHotKey","setActiveTool","type","bindEvent","tool","has","console","warn","set","hotkey","getActiveToolName","_this$currentTool","isPressing","startPos","startWithLeftMouse","handleDown","e","button","textEditor","isEditing","Error","clientX","clientY","start","handleMove","dx","dy","dragBlockStep","setting","get","Math","abs","hostEventManager","disableDragBySpace","drag","moveExcludeDrag","handleUp","enableDragBySpace","end","afterEnd","canvas","canvasElement","addEventListener","window","forEach","key","toUpperCase","keybindingManager","register","keyCode","actionName","action","unbindEvent","removeEventListener","toolName","prevTool","inactive","active","emit","on","eventName","handler","off","destroy","_this$currentTool2"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/editor/tools/tool_manager.ts"],"sourcesContent":["import { noop } from '../../utils/common';\nimport EventEmitter from '../../utils/event_emitter';\nimport { Editor } from '../editor';\nimport { DragCanvasTool } from './tool_drag_canvas';\nimport { DrawEllipseTool } from './tool_draw_ellipse';\nimport { DrawRectTool } from './tool_draw_rect';\nimport { SelectTool } from './tool_select';\nimport { ITool } from './type';\nimport { DrawTextTool } from './tool_draw_text';\nimport { DrawLineTool } from './tool_draw_line';\n\ninterface Events {\n  change(type: string): void;\n}\n\nexport class ToolManager {\n  toolMap = new Map<string, ITool>();\n  /**\n   * hotkey => tool type\n   */\n  hotkeyMap = new Map<string, string>();\n\n  currentTool: ITool | null = null;\n  eventEmitter = new EventEmitter<Events>();\n\n  enableSwitchTool = true;\n\n  isDragging = false;\n\n  _unbindEvent: () => void;\n  constructor(private editor: Editor) {\n    this.registerToolAndHotKey(new SelectTool(editor));\n    this.registerToolAndHotKey(new DrawRectTool(editor));\n    this.registerToolAndHotKey(new DrawEllipseTool(editor));\n    this.registerToolAndHotKey(new DrawLineTool(editor));\n    this.registerToolAndHotKey(new DrawTextTool(editor));\n    this.registerToolAndHotKey(new DragCanvasTool(editor));\n\n    this.setActiveTool(SelectTool.type);\n\n    this._unbindEvent = this.bindEvent();\n  }\n  registerToolAndHotKey(tool: ITool) {\n    if (this.toolMap.has(tool.type)) {\n      console.warn(`tool \"${tool.type}\" had exit, replace it!`);\n    }\n    this.toolMap.set(tool.type, tool);\n\n    if (this.hotkeyMap.has(tool.hotkey)) {\n      console.warn(`hotkey \"${tool.type}\" had exit, replace it!`);\n    }\n    this.hotkeyMap.set(tool.hotkey, tool.type);\n  }\n  getActiveToolName() {\n    return this.currentTool?.type;\n  }\n  private bindEvent() {\n    // (1) drag block strategy\n    let isPressing = false;\n    let startPos: [x: number, y: number] = [0, 0];\n    let startWithLeftMouse = false;\n\n    const handleDown = (e: PointerEvent) => {\n      isPressing = true;\n      this.isDragging = false;\n      startWithLeftMouse = false;\n      if (e.button !== 0) {\n        // must be left mouse button\n        return;\n      }\n      if (this.editor.textEditor.isEditing()) {\n        return;\n      }\n\n      startWithLeftMouse = true;\n      if (!this.currentTool) {\n        throw new Error('there is no active tool');\n      }\n      startPos = [e.clientX, e.clientY];\n      this.currentTool.start(e);\n    };\n    const handleMove = (e: PointerEvent) => {\n      if (!this.currentTool) {\n        throw new Error('未设置当前使用工具');\n      }\n      if (isPressing) {\n        if (!startWithLeftMouse) {\n          return;\n        }\n        const dx = e.clientX - startPos[0];\n        const dy = e.clientY - startPos[1];\n        const dragBlockStep = this.editor.setting.get('dragBlockStep');\n        if (\n          !this.isDragging &&\n          (Math.abs(dx) > dragBlockStep || Math.abs(dy) > dragBlockStep)\n        ) {\n          this.isDragging = true;\n        }\n        if (this.isDragging) {\n          this.enableSwitchTool = false;\n          this.editor.hostEventManager.disableDragBySpace();\n          this.currentTool.drag(e);\n        }\n      } else {\n        this.currentTool.moveExcludeDrag(e);\n      }\n    };\n    const handleUp = (e: PointerEvent) => {\n      this.enableSwitchTool = true;\n\n      if (!startWithLeftMouse) {\n        return;\n      }\n      if (!this.currentTool) {\n        throw new Error('未设置当前使用工具');\n      }\n\n      if (isPressing) {\n        this.editor.hostEventManager.enableDragBySpace();\n        isPressing = false;\n        this.currentTool.end(e, this.isDragging);\n        this.currentTool.afterEnd();\n      }\n\n      this.isDragging = false;\n    };\n    const canvas = this.editor.canvasElement;\n    canvas.addEventListener('pointerdown', handleDown);\n    window.addEventListener('pointermove', handleMove);\n    window.addEventListener('pointerup', handleUp);\n\n    // (2) tool hotkey binding\n    this.hotkeyMap.forEach((type, key) => {\n      key = `Key${key.toUpperCase()}`;\n      this.editor.keybindingManager.register({\n        key: { keyCode: key },\n        actionName: type,\n        action: () => {\n          this.setActiveTool(type);\n        },\n      });\n    });\n\n    return function unbindEvent() {\n      canvas.removeEventListener('pointerdown', handleDown);\n      window.removeEventListener('pointermove', handleMove);\n      window.removeEventListener('pointerup', handleUp);\n    };\n  }\n  unbindEvent() {\n    this._unbindEvent();\n    this._unbindEvent = noop;\n  }\n  setActiveTool(toolName: string) {\n    if (!this.enableSwitchTool || this.getActiveToolName() === toolName) {\n      return;\n    }\n\n    const prevTool = this.currentTool;\n    const currentTool = (this.currentTool = this.toolMap.get(toolName) || null);\n    if (!currentTool) {\n      throw new Error(`没有 ${toolName} 对应的工具对象`);\n    }\n    prevTool && prevTool.inactive();\n    currentTool.active();\n    this.eventEmitter.emit('change', currentTool.type);\n  }\n  on<K extends keyof Events>(eventName: K, handler: Events[K]) {\n    this.eventEmitter.on(eventName, handler);\n  }\n  off<K extends keyof Events>(eventName: K, handler: Events[K]) {\n    this.eventEmitter.off(eventName, handler);\n  }\n  destroy() {\n    this.currentTool?.inactive();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}