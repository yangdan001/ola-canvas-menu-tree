{"ast":null,"code":"var _jsxFileName = \"/Users/yangdan/zf-workspace/react/suika/packages/suika/src/components/Cards/FillCard/FillCard.tsx\",\n  _s = $RefreshSig$();\nimport isEqual from 'lodash.isequal';\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport { EditorContext } from '../../../context';\nimport { useIntl } from 'react-intl';\nimport cloneDeep from 'lodash.clonedeep';\nimport { SetElementsAttrs } from '../../../editor/commands/set_elements_attrs';\nimport { TextureCard } from '../TextureCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FillCard = () => {\n  _s();\n  const editor = useContext(EditorContext);\n  const intl = useIntl();\n  const [fill, setFill] = useState([]);\n  const prevFills = useRef([]);\n\n  /**\n   * update fill and return a new fill\n   */\n  const updateSelectedFill = (newTexture, index) => {\n    if (!editor) return;\n    const newFills = [...fill];\n    newFills[index] = newTexture;\n    setFill(newFills);\n    const selectItems = editor.selectedElements.getItems();\n    selectItems.forEach(item => {\n      item.fill = cloneDeep(newFills);\n    });\n    return newFills;\n  };\n  const addFill = () => {\n    if (!editor) return;\n    const newTexture = cloneDeep(editor.setting.get(fill.length ? 'addedTexture' : 'firstFill'));\n    const newFills = [...fill, newTexture];\n    setFill(newFills);\n    const selectItems = editor.selectedElements.getItems();\n    selectItems.forEach(item => {\n      item.fill = cloneDeep(newFills);\n    });\n    pushToHistory('Add Fill', selectItems, newFills);\n    editor === null || editor === void 0 ? void 0 : editor.sceneGraph.render();\n  };\n  const deleteFill = index => {\n    if (!editor) return;\n    const newFills = fill.filter((_, i) => i !== index);\n    setFill(newFills);\n    const selectItems = editor.selectedElements.getItems();\n    selectItems.forEach(item => {\n      item.fill = cloneDeep(newFills);\n    });\n    pushToHistory('Update Fill', selectItems, newFills);\n    editor.sceneGraph.render();\n  };\n  const pushToHistory = (cmdDesc, selectedElements, newStroke) => {\n    if (!editor) return;\n    editor.commandManager.pushCommand(new SetElementsAttrs(cmdDesc, selectedElements, {\n      fill: newStroke\n    },\n    // prev value\n    selectedElements.map((_, i) => ({\n      fill: cloneDeep(prevFills.current[i])\n    }))));\n    prevFills.current = selectedElements.map(el => cloneDeep(el.fill));\n  };\n  useEffect(() => {\n    if (editor) {\n      prevFills.current = editor.selectedElements.getItems().map(el => cloneDeep(el.fill));\n      const handler = () => {\n        const selectedElements = editor.selectedElements.getItems();\n        if (selectedElements.length > 0) {\n          /**\n           * 目前一个图形只支持一个 fill\n           * 显示 fill 值时，如果有的图形没有 fill，将其排除。\n           * 添加颜色时，如果有的图形不存在 fill，赋值给它。\n           */\n          let newFill = selectedElements[0].fill;\n          for (let i = 1, len = selectedElements.length; i < len; i++) {\n            const currentFill = selectedElements[i].fill;\n            if (!isEqual(newFill, currentFill)) {\n              // TODO: 标记为不相同，作为文案提示\n              newFill = [];\n              break;\n            }\n          }\n          setFill(newFill);\n        }\n      };\n      editor.sceneGraph.on('render', handler);\n      return () => {\n        editor.sceneGraph.off('render', handler);\n      };\n    }\n  }, [editor]);\n  return /*#__PURE__*/_jsxDEV(TextureCard, {\n    title: intl.formatMessage({\n      id: 'fill'\n    }),\n    textures: fill,\n    onChange: (newTexture, i) => {\n      if (!editor) return;\n      updateSelectedFill(newTexture, i);\n      editor.sceneGraph.render();\n    },\n    onChangeComplete: (newTexture, i) => {\n      if (!editor) return;\n      const newFill = updateSelectedFill(newTexture, i);\n      pushToHistory('Update fill', editor.selectedElements.getItems(), newFill);\n      editor.sceneGraph.render();\n    },\n    onAdd: addFill,\n    onDelete: deleteFill\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(FillCard, \"uiSUSkyzFsPts/U9LwfLNtC6q9k=\", false, function () {\n  return [useIntl];\n});\n_c = FillCard;\nvar _c;\n$RefreshReg$(_c, \"FillCard\");","map":{"version":3,"names":["isEqual","useContext","useEffect","useRef","useState","EditorContext","useIntl","cloneDeep","SetElementsAttrs","TextureCard","jsxDEV","_jsxDEV","FillCard","_s","editor","intl","fill","setFill","prevFills","updateSelectedFill","newTexture","index","newFills","selectItems","selectedElements","getItems","forEach","item","addFill","setting","get","length","pushToHistory","sceneGraph","render","deleteFill","filter","_","i","cmdDesc","newStroke","commandManager","pushCommand","map","current","el","handler","newFill","len","currentFill","on","off","title","formatMessage","id","textures","onChange","onChangeComplete","onAdd","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/components/Cards/FillCard/FillCard.tsx"],"sourcesContent":["import isEqual from 'lodash.isequal';\nimport { FC, useContext, useEffect, useRef, useState } from 'react';\nimport { EditorContext } from '../../../context';\n\nimport { useIntl } from 'react-intl';\nimport { ITexture } from '../../../editor/texture';\nimport cloneDeep from 'lodash.clonedeep';\nimport { SetElementsAttrs } from '../../../editor/commands/set_elements_attrs';\nimport { TextureCard } from '../TextureCard';\nimport { Graph } from '../../../editor/scene/graph';\n\nexport const FillCard: FC = () => {\n  const editor = useContext(EditorContext);\n  const intl = useIntl();\n\n  const [fill, setFill] = useState<ITexture[]>([]);\n  const prevFills = useRef<ITexture[][]>([]);\n\n  /**\n   * update fill and return a new fill\n   */\n  const updateSelectedFill = (newTexture: ITexture, index: number) => {\n    if (!editor) return;\n\n    const newFills = [...fill];\n\n    newFills[index] = newTexture;\n    setFill(newFills);\n\n    const selectItems = editor.selectedElements.getItems();\n\n    selectItems.forEach((item) => {\n      item.fill = cloneDeep(newFills);\n    });\n\n    return newFills;\n  };\n\n  const addFill = () => {\n    if (!editor) return;\n\n    const newTexture = cloneDeep(\n      editor.setting.get(fill.length ? 'addedTexture' : 'firstFill'),\n    );\n    const newFills = [...fill, newTexture];\n    setFill(newFills);\n\n    const selectItems = editor.selectedElements.getItems();\n    selectItems.forEach((item) => {\n      item.fill = cloneDeep(newFills);\n    });\n    pushToHistory('Add Fill', selectItems, newFills);\n    editor?.sceneGraph.render();\n  };\n\n  const deleteFill = (index: number) => {\n    if (!editor) return;\n\n    const newFills = fill.filter((_, i) => i !== index);\n    setFill(newFills);\n\n    const selectItems = editor.selectedElements.getItems();\n    selectItems.forEach((item) => {\n      item.fill = cloneDeep(newFills);\n    });\n    pushToHistory('Update Fill', selectItems, newFills);\n    editor.sceneGraph.render();\n  };\n\n  const pushToHistory = (\n    cmdDesc: string,\n    selectedElements: Graph[],\n    newStroke: ITexture[],\n  ) => {\n    if (!editor) return;\n\n    editor.commandManager.pushCommand(\n      new SetElementsAttrs(\n        cmdDesc,\n        selectedElements,\n        { fill: newStroke },\n        // prev value\n        selectedElements.map((_, i) => ({\n          fill: cloneDeep(prevFills.current[i]),\n        })),\n      ),\n    );\n\n    prevFills.current = selectedElements.map((el) => cloneDeep(el.fill));\n  };\n\n  useEffect(() => {\n    if (editor) {\n      prevFills.current = editor.selectedElements\n        .getItems()\n        .map((el) => cloneDeep(el.fill));\n\n      const handler = () => {\n        const selectedElements = editor.selectedElements.getItems();\n        if (selectedElements.length > 0) {\n          /**\n           * 目前一个图形只支持一个 fill\n           * 显示 fill 值时，如果有的图形没有 fill，将其排除。\n           * 添加颜色时，如果有的图形不存在 fill，赋值给它。\n           */\n          let newFill = selectedElements[0].fill;\n          for (let i = 1, len = selectedElements.length; i < len; i++) {\n            const currentFill = selectedElements[i].fill;\n            if (!isEqual(newFill, currentFill)) {\n              // TODO: 标记为不相同，作为文案提示\n              newFill = [];\n              break;\n            }\n          }\n          setFill(newFill);\n        }\n      };\n      editor.sceneGraph.on('render', handler);\n      return () => {\n        editor.sceneGraph.off('render', handler);\n      };\n    }\n  }, [editor]);\n\n  return (\n    <TextureCard\n      title={intl.formatMessage({ id: 'fill' })}\n      textures={fill}\n      onChange={(newTexture, i) => {\n        if (!editor) return;\n        updateSelectedFill(newTexture, i);\n        editor.sceneGraph.render();\n      }}\n      onChangeComplete={(newTexture, i) => {\n        if (!editor) return;\n        const newFill = updateSelectedFill(newTexture, i);\n\n        pushToHistory(\n          'Update fill',\n          editor.selectedElements.getItems(),\n          newFill!,\n        );\n\n        editor.sceneGraph.render();\n      }}\n      onAdd={addFill}\n      onDelete={deleteFill}\n    />\n  );\n};\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,gBAAgB;AACpC,SAAaC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnE,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,SAASC,OAAO,QAAQ,YAAY;AAEpC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SAASC,gBAAgB,QAAQ,6CAA6C;AAC9E,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,OAAO,MAAMC,QAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,MAAM,GAAGb,UAAU,CAACI,aAAa,CAAC;EACxC,MAAMU,IAAI,GAAGT,OAAO,CAAC,CAAC;EAEtB,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAa,EAAE,CAAC;EAChD,MAAMc,SAAS,GAAGf,MAAM,CAAe,EAAE,CAAC;;EAE1C;AACF;AACA;EACE,MAAMgB,kBAAkB,GAAGA,CAACC,UAAoB,EAAEC,KAAa,KAAK;IAClE,IAAI,CAACP,MAAM,EAAE;IAEb,MAAMQ,QAAQ,GAAG,CAAC,GAAGN,IAAI,CAAC;IAE1BM,QAAQ,CAACD,KAAK,CAAC,GAAGD,UAAU;IAC5BH,OAAO,CAACK,QAAQ,CAAC;IAEjB,MAAMC,WAAW,GAAGT,MAAM,CAACU,gBAAgB,CAACC,QAAQ,CAAC,CAAC;IAEtDF,WAAW,CAACG,OAAO,CAAEC,IAAI,IAAK;MAC5BA,IAAI,CAACX,IAAI,GAAGT,SAAS,CAACe,QAAQ,CAAC;IACjC,CAAC,CAAC;IAEF,OAAOA,QAAQ;EACjB,CAAC;EAED,MAAMM,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAI,CAACd,MAAM,EAAE;IAEb,MAAMM,UAAU,GAAGb,SAAS,CAC1BO,MAAM,CAACe,OAAO,CAACC,GAAG,CAACd,IAAI,CAACe,MAAM,GAAG,cAAc,GAAG,WAAW,CAC/D,CAAC;IACD,MAAMT,QAAQ,GAAG,CAAC,GAAGN,IAAI,EAAEI,UAAU,CAAC;IACtCH,OAAO,CAACK,QAAQ,CAAC;IAEjB,MAAMC,WAAW,GAAGT,MAAM,CAACU,gBAAgB,CAACC,QAAQ,CAAC,CAAC;IACtDF,WAAW,CAACG,OAAO,CAAEC,IAAI,IAAK;MAC5BA,IAAI,CAACX,IAAI,GAAGT,SAAS,CAACe,QAAQ,CAAC;IACjC,CAAC,CAAC;IACFU,aAAa,CAAC,UAAU,EAAET,WAAW,EAAED,QAAQ,CAAC;IAChDR,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEmB,UAAU,CAACC,MAAM,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,UAAU,GAAId,KAAa,IAAK;IACpC,IAAI,CAACP,MAAM,EAAE;IAEb,MAAMQ,QAAQ,GAAGN,IAAI,CAACoB,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKjB,KAAK,CAAC;IACnDJ,OAAO,CAACK,QAAQ,CAAC;IAEjB,MAAMC,WAAW,GAAGT,MAAM,CAACU,gBAAgB,CAACC,QAAQ,CAAC,CAAC;IACtDF,WAAW,CAACG,OAAO,CAAEC,IAAI,IAAK;MAC5BA,IAAI,CAACX,IAAI,GAAGT,SAAS,CAACe,QAAQ,CAAC;IACjC,CAAC,CAAC;IACFU,aAAa,CAAC,aAAa,EAAET,WAAW,EAAED,QAAQ,CAAC;IACnDR,MAAM,CAACmB,UAAU,CAACC,MAAM,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMF,aAAa,GAAGA,CACpBO,OAAe,EACff,gBAAyB,EACzBgB,SAAqB,KAClB;IACH,IAAI,CAAC1B,MAAM,EAAE;IAEbA,MAAM,CAAC2B,cAAc,CAACC,WAAW,CAC/B,IAAIlC,gBAAgB,CAClB+B,OAAO,EACPf,gBAAgB,EAChB;MAAER,IAAI,EAAEwB;IAAU,CAAC;IACnB;IACAhB,gBAAgB,CAACmB,GAAG,CAAC,CAACN,CAAC,EAAEC,CAAC,MAAM;MAC9BtB,IAAI,EAAET,SAAS,CAACW,SAAS,CAAC0B,OAAO,CAACN,CAAC,CAAC;IACtC,CAAC,CAAC,CACJ,CACF,CAAC;IAEDpB,SAAS,CAAC0B,OAAO,GAAGpB,gBAAgB,CAACmB,GAAG,CAAEE,EAAE,IAAKtC,SAAS,CAACsC,EAAE,CAAC7B,IAAI,CAAC,CAAC;EACtE,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,IAAIY,MAAM,EAAE;MACVI,SAAS,CAAC0B,OAAO,GAAG9B,MAAM,CAACU,gBAAgB,CACxCC,QAAQ,CAAC,CAAC,CACVkB,GAAG,CAAEE,EAAE,IAAKtC,SAAS,CAACsC,EAAE,CAAC7B,IAAI,CAAC,CAAC;MAElC,MAAM8B,OAAO,GAAGA,CAAA,KAAM;QACpB,MAAMtB,gBAAgB,GAAGV,MAAM,CAACU,gBAAgB,CAACC,QAAQ,CAAC,CAAC;QAC3D,IAAID,gBAAgB,CAACO,MAAM,GAAG,CAAC,EAAE;UAC/B;AACV;AACA;AACA;AACA;UACU,IAAIgB,OAAO,GAAGvB,gBAAgB,CAAC,CAAC,CAAC,CAACR,IAAI;UACtC,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEU,GAAG,GAAGxB,gBAAgB,CAACO,MAAM,EAAEO,CAAC,GAAGU,GAAG,EAAEV,CAAC,EAAE,EAAE;YAC3D,MAAMW,WAAW,GAAGzB,gBAAgB,CAACc,CAAC,CAAC,CAACtB,IAAI;YAC5C,IAAI,CAAChB,OAAO,CAAC+C,OAAO,EAAEE,WAAW,CAAC,EAAE;cAClC;cACAF,OAAO,GAAG,EAAE;cACZ;YACF;UACF;UACA9B,OAAO,CAAC8B,OAAO,CAAC;QAClB;MACF,CAAC;MACDjC,MAAM,CAACmB,UAAU,CAACiB,EAAE,CAAC,QAAQ,EAAEJ,OAAO,CAAC;MACvC,OAAO,MAAM;QACXhC,MAAM,CAACmB,UAAU,CAACkB,GAAG,CAAC,QAAQ,EAAEL,OAAO,CAAC;MAC1C,CAAC;IACH;EACF,CAAC,EAAE,CAAChC,MAAM,CAAC,CAAC;EAEZ,oBACEH,OAAA,CAACF,WAAW;IACV2C,KAAK,EAAErC,IAAI,CAACsC,aAAa,CAAC;MAAEC,EAAE,EAAE;IAAO,CAAC,CAAE;IAC1CC,QAAQ,EAAEvC,IAAK;IACfwC,QAAQ,EAAEA,CAACpC,UAAU,EAAEkB,CAAC,KAAK;MAC3B,IAAI,CAACxB,MAAM,EAAE;MACbK,kBAAkB,CAACC,UAAU,EAAEkB,CAAC,CAAC;MACjCxB,MAAM,CAACmB,UAAU,CAACC,MAAM,CAAC,CAAC;IAC5B,CAAE;IACFuB,gBAAgB,EAAEA,CAACrC,UAAU,EAAEkB,CAAC,KAAK;MACnC,IAAI,CAACxB,MAAM,EAAE;MACb,MAAMiC,OAAO,GAAG5B,kBAAkB,CAACC,UAAU,EAAEkB,CAAC,CAAC;MAEjDN,aAAa,CACX,aAAa,EACblB,MAAM,CAACU,gBAAgB,CAACC,QAAQ,CAAC,CAAC,EAClCsB,OACF,CAAC;MAEDjC,MAAM,CAACmB,UAAU,CAACC,MAAM,CAAC,CAAC;IAC5B,CAAE;IACFwB,KAAK,EAAE9B,OAAQ;IACf+B,QAAQ,EAAExB;EAAW;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEN,CAAC;AAAClD,EAAA,CA1IWD,QAAY;EAAA,QAEVN,OAAO;AAAA;AAAA0D,EAAA,GAFTpD,QAAY;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}