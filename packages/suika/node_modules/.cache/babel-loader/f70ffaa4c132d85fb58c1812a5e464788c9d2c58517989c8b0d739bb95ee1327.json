{"ast":null,"code":"const listeners = {};\nconst trigger = (key, data) => {\n  if (listeners[key]) {\n    listeners[key].forEach(item => item(data));\n  }\n};\nconst subscribe = (key, listener) => {\n  if (!listeners[key]) {\n    listeners[key] = [];\n  }\n  listeners[key].push(listener);\n  return function unsubscribe() {\n    const index = listeners[key].indexOf(listener);\n    listeners[key].splice(index, 1);\n  };\n};\nexport { trigger, subscribe };","map":{"version":3,"names":["listeners","trigger","key","data","forEach","item","subscribe","listener","push","unsubscribe","index","indexOf","splice"],"sources":["/Users/yangdan/zf-workspace/react/suika/node_modules/.pnpm/registry.npmmirror.com+ahooks@3.7.4_react@18.2.0/node_modules/ahooks/es/useRequest/src/utils/cacheSubscribe.js"],"sourcesContent":["const listeners = {};\nconst trigger = (key, data) => {\n  if (listeners[key]) {\n    listeners[key].forEach(item => item(data));\n  }\n};\nconst subscribe = (key, listener) => {\n  if (!listeners[key]) {\n    listeners[key] = [];\n  }\n  listeners[key].push(listener);\n  return function unsubscribe() {\n    const index = listeners[key].indexOf(listener);\n    listeners[key].splice(index, 1);\n  };\n};\nexport { trigger, subscribe };"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAAC,CAAC;AACpB,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;EAC7B,IAAIH,SAAS,CAACE,GAAG,CAAC,EAAE;IAClBF,SAAS,CAACE,GAAG,CAAC,CAACE,OAAO,CAACC,IAAI,IAAIA,IAAI,CAACF,IAAI,CAAC,CAAC;EAC5C;AACF,CAAC;AACD,MAAMG,SAAS,GAAGA,CAACJ,GAAG,EAAEK,QAAQ,KAAK;EACnC,IAAI,CAACP,SAAS,CAACE,GAAG,CAAC,EAAE;IACnBF,SAAS,CAACE,GAAG,CAAC,GAAG,EAAE;EACrB;EACAF,SAAS,CAACE,GAAG,CAAC,CAACM,IAAI,CAACD,QAAQ,CAAC;EAC7B,OAAO,SAASE,WAAWA,CAAA,EAAG;IAC5B,MAAMC,KAAK,GAAGV,SAAS,CAACE,GAAG,CAAC,CAACS,OAAO,CAACJ,QAAQ,CAAC;IAC9CP,SAAS,CAACE,GAAG,CAAC,CAACU,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;EACjC,CAAC;AACH,CAAC;AACD,SAAST,OAAO,EAAEK,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}