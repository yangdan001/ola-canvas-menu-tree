{"ast":null,"code":"import { SetElementsAttrs } from '../commands/set_elements_attrs';\nimport { GraphType } from '../../type';\nimport { calcCoverScale, genId, objectNameGenerator } from '../../utils/common';\nimport { getAbsoluteCoords, getElementRotatedXY, getRectCenterPoint, isPointInRect } from '../../utils/graphics';\nimport { transformRotate } from '../../utils/transform';\nimport { DEFAULT_IMAGE } from '../texture';\nexport class Graph {\n  constructor(options) {\n    var _options$type, _options$id;\n    this.type = GraphType.Graph;\n    this.id = void 0;\n    this.objectName = void 0;\n    this.x = void 0;\n    this.y = void 0;\n    this.width = void 0;\n    this.height = void 0;\n    // color\n    this.fill = [];\n    this.stroke = [];\n    this.strokeWidth = void 0;\n    // transform\n    this.rotation = void 0;\n    this.type = (_options$type = options.type) !== null && _options$type !== void 0 ? _options$type : this.type;\n    this.id = (_options$id = options.id) !== null && _options$id !== void 0 ? _options$id : genId();\n    if (options.objectName) {\n      this.objectName = options.objectName;\n      objectNameGenerator.setMaxIdx(options.objectName);\n    } else {\n      var _options$type2;\n      this.objectName = objectNameGenerator.gen((_options$type2 = options.type) !== null && _options$type2 !== void 0 ? _options$type2 : this.type);\n    }\n    this.x = options.x;\n    this.y = options.y;\n    this.width = options.width;\n    this.height = options.height;\n    if (options.fill) {\n      this.fill = options.fill;\n    }\n    if (options.stroke) {\n      this.stroke = options.stroke;\n    }\n    if (options.strokeWidth) {\n      this.strokeWidth = options.strokeWidth;\n    }\n    if (options.rotation) {\n      this.rotation = options.rotation;\n    }\n  }\n  getAttrs() {\n    return {\n      type: this.type,\n      id: this.id,\n      objectName: this.objectName,\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      fill: this.fill,\n      stroke: this.stroke,\n      strokeWidth: this.strokeWidth,\n      rotation: this.rotation\n    };\n  }\n  setAttrs(attrs) {\n    let key;\n    for (key in attrs) {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias, @typescript-eslint/no-explicit-any\n      const self = this;\n      self[key] = attrs[key];\n    }\n  }\n\n  /**\n   * 计算包围盒（不考虑 strokeWidth）\n   * 考虑旋转\n   */\n  getBBox() {\n    const [x, y, x2, y2, cx, cy] = getAbsoluteCoords(this);\n    const rotation = this.rotation;\n    if (!rotation) {\n      return this.getBBoxWithoutRotation();\n    }\n    const {\n      x: nwX,\n      y: nwY\n    } = transformRotate(x, y, rotation, cx, cy); // 左上\n    const {\n      x: neX,\n      y: neY\n    } = transformRotate(x2, y, rotation, cx, cy); // 右上\n    const {\n      x: seX,\n      y: seY\n    } = transformRotate(x2, y2, rotation, cx, cy); // 右下\n    const {\n      x: swX,\n      y: swY\n    } = transformRotate(x, y2, rotation, cx, cy); // 右下\n\n    const minX = Math.min(nwX, neX, seX, swX);\n    const minY = Math.min(nwY, neY, seY, swY);\n    const maxX = Math.max(nwX, neX, seX, swX);\n    const maxY = Math.max(nwY, neY, seY, swY);\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n  /**\n   * AABB (axis-aligned bounding box)\n   */\n  getBBox2() {\n    const [x, y, x2, y2, cx, cy] = getAbsoluteCoords(this);\n    const rotation = this.rotation;\n    if (!rotation) {\n      const box = this.getBBoxWithoutRotation();\n      return {\n        minX: box.x,\n        minY: box.y,\n        maxX: box.x + box.width,\n        maxY: box.y + box.height\n      };\n    }\n    const {\n      x: tlX,\n      y: tlY\n    } = transformRotate(x, y, rotation, cx, cy); // 左上\n    const {\n      x: trX,\n      y: trY\n    } = transformRotate(x2, y, rotation, cx, cy); // 右上\n    const {\n      x: brX,\n      y: brY\n    } = transformRotate(x2, y2, rotation, cx, cy); // 右下\n    const {\n      x: blX,\n      y: blY\n    } = transformRotate(x, y2, rotation, cx, cy); // 右下\n\n    const minX = Math.min(tlX, trX, brX, blX);\n    const minY = Math.min(tlY, trY, brY, blY);\n    const maxX = Math.max(tlX, trX, brX, blX);\n    const maxY = Math.max(tlY, trY, brY, blY);\n    return {\n      minX,\n      minY,\n      maxX,\n      maxY\n    };\n  }\n  getBboxVerts() {\n    const [x, y, x2, y2, cx, cy] = getAbsoluteCoords(this);\n    const rotation = this.rotation;\n    if (!rotation) {\n      return [{\n        x: x,\n        y: y\n      }, {\n        x: x2,\n        y: y\n      }, {\n        x: x2,\n        y: y2\n      }, {\n        x: x,\n        y: y2\n      }];\n    }\n    const nw = transformRotate(x, y, rotation, cx, cy); // 左上\n    const ne = transformRotate(x2, y, rotation, cx, cy); // 右上\n    const se = transformRotate(x2, y2, rotation, cx, cy); // 右下\n    const sw = transformRotate(x, y2, rotation, cx, cy); // 右下\n\n    return [nw, ne, se, sw];\n  }\n  getBBoxWithoutRotation() {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n  getCenter() {\n    return {\n      x: this.x + this.width / 2,\n      y: this.y + this.height / 2\n    };\n  }\n  setRotateXY(rotatedX, rotatedY) {\n    const {\n      x: cx,\n      y: cy\n    } = this.getCenter();\n    const {\n      x,\n      y\n    } = transformRotate(rotatedX, rotatedY, -(this.rotation || 0), cx, cy);\n    this.x = x;\n    this.y = y;\n  }\n  hitTest(x, y, padding = 0) {\n    const bBox = this.getBBoxWithoutRotation();\n    const [cx, cy] = getRectCenterPoint(bBox);\n    const rotatedHitPoint = this.rotation ? transformRotate(x, y, -this.rotation, cx, cy) : {\n      x,\n      y\n    };\n    return isPointInRect(rotatedHitPoint, bBox, padding);\n  }\n  setRotatedX(rotatedX) {\n    const {\n      x: prevRotatedX\n    } = getElementRotatedXY(this);\n    this.x = this.x + rotatedX - prevRotatedX;\n  }\n  setRotatedY(rotatedY) {\n    const {\n      y: prevRotatedY\n    } = getElementRotatedXY(this);\n    this.y = this.y + rotatedY - prevRotatedY;\n  }\n  resizeAndKeepRotatedXY({\n    width,\n    height\n  }) {\n    const {\n      x: preRotatedX,\n      y: preRotatedY\n    } = getElementRotatedXY(this);\n    if (width) {\n      this.width = width;\n    }\n    if (height) {\n      this.height = height;\n    }\n    const {\n      x: rotatedX,\n      y: rotatedY\n    } = getElementRotatedXY(this);\n    const dx = rotatedX - preRotatedX;\n    const dy = rotatedY - preRotatedY;\n    this.x -= dx;\n    this.y -= dy;\n  }\n  renderFillAndStrokeTexture(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ctx,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  smooth) {\n    throw new Error('Method not implemented.');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  strokeTexture(ctx) {\n    throw new Error('Method not implemented.');\n  }\n  fillImage(ctx, texture, smooth) {\n    const src = texture.attrs.src;\n    const width = this.width;\n    const height = this.height;\n    let img;\n\n    // anti-aliasing\n    ctx.imageSmoothingEnabled = smooth;\n    if (src) {\n      img = new Image();\n      img.src = src;\n      // TODO: rerender when image loaded, but notice endless loop\n    } else {\n      ctx.imageSmoothingEnabled = false;\n      img = DEFAULT_IMAGE;\n    }\n\n    // reference: https://mp.weixin.qq.com/s/TSpZv_0VJtxPTCCzEqDl8Q\n    const scale = calcCoverScale(img.width, img.height, width, height);\n    const sx = img.width / 2 - width / scale / 2;\n    const sy = img.height / 2 - height / scale / 2;\n    ctx.drawImage(img, sx, sy, width / scale, height / scale, this.x, this.y, width, height);\n  }\n  static dMove(graphs, dx, dy) {\n    for (const graph of graphs) {\n      graph.x += dx;\n      graph.y += dy;\n    }\n  }\n}\n\n/**\n * 修改元素并保存到历史记录\n */\n\nexport const MutateElementsAndRecord = {\n  setRotateX(editor, elements, rotatedX) {\n    if (elements.length === 0) {\n      return;\n    }\n    // 1. 计算新的 x\n    const prevXs = new Array(elements.length);\n    for (let i = 0, len = elements.length; i < len; i++) {\n      const element = elements[i];\n      prevXs[i] = {\n        x: element.x\n      };\n      element.setRotatedX(rotatedX);\n    }\n    // 2. 保存到历史记录\n    editor.commandManager.pushCommand(new SetElementsAttrs('Update X of Elements', elements, elements.map(el => ({\n      x: el.x\n    })), prevXs));\n  },\n  setRotateY(editor, elements, rotatedY) {\n    if (elements.length === 0) {\n      return;\n    }\n    // 1. 计算新的 x\n    const prevXs = new Array(elements.length);\n    for (let i = 0, len = elements.length; i < len; i++) {\n      const element = elements[i];\n      prevXs[i] = {\n        y: element.y\n      };\n      element.setRotatedY(rotatedY);\n    }\n    // 2. 保存到历史记录\n    editor.commandManager.pushCommand(new SetElementsAttrs('Update Y of Elements', elements, elements.map(el => ({\n      y: el.y\n    })), prevXs));\n  },\n  setWidth(editor, elements, width) {\n    if (elements.length === 0) {\n      return;\n    }\n    const prevAttrs = elements.map(el => ({\n      x: el.x,\n      y: el.y,\n      width: el.width\n    }));\n    elements.forEach(el => {\n      const {\n        x: preRotatedX,\n        y: preRotatedY\n      } = getElementRotatedXY(el);\n      el.width = width;\n      const {\n        x: rotatedX,\n        y: rotatedY\n      } = getElementRotatedXY(el);\n      const dx = rotatedX - preRotatedX;\n      const dy = rotatedY - preRotatedY;\n      el.x -= dx;\n      el.y -= dy;\n    });\n    editor.commandManager.pushCommand(new SetElementsAttrs('Update Width of Elements', elements, elements.map(el => ({\n      width: el.width,\n      x: el.x,\n      y: el.y\n    })), prevAttrs));\n  },\n  setHeight(editor, elements, height) {\n    if (elements.length === 0) {\n      return;\n    }\n    const prevAttrs = elements.map(el => ({\n      x: el.x,\n      y: el.y,\n      height: el.height\n    }));\n    elements.forEach(el => {\n      const {\n        x: preRotatedX,\n        y: preRotatedY\n      } = getElementRotatedXY(el);\n      el.height = height;\n      const {\n        x: rotatedX,\n        y: rotatedY\n      } = getElementRotatedXY(el);\n      const dx = rotatedX - preRotatedX;\n      const dy = rotatedY - preRotatedY;\n      el.x -= dx;\n      el.y -= dy;\n    });\n    editor.commandManager.pushCommand(new SetElementsAttrs('update Height of Elements', elements, elements.map(el => ({\n      height: el.height,\n      x: el.x,\n      y: el.y\n    })), prevAttrs));\n  },\n  setRotation(editor, elements, rotation) {\n    if (elements.length === 0) {\n      return;\n    }\n    const prevAttrs = elements.map(el => ({\n      rotation: el.rotation || 0\n    }));\n    elements.forEach(el => {\n      el.rotation = rotation;\n    });\n    editor.commandManager.pushCommand(new SetElementsAttrs('update Rotation', elements, {\n      rotation\n    }, prevAttrs));\n  }\n};","map":{"version":3,"names":["SetElementsAttrs","GraphType","calcCoverScale","genId","objectNameGenerator","getAbsoluteCoords","getElementRotatedXY","getRectCenterPoint","isPointInRect","transformRotate","DEFAULT_IMAGE","Graph","constructor","options","_options$type","_options$id","type","id","objectName","x","y","width","height","fill","stroke","strokeWidth","rotation","setMaxIdx","_options$type2","gen","getAttrs","setAttrs","attrs","key","self","getBBox","x2","y2","cx","cy","getBBoxWithoutRotation","nwX","nwY","neX","neY","seX","seY","swX","swY","minX","Math","min","minY","maxX","max","maxY","getBBox2","box","tlX","tlY","trX","trY","brX","brY","blX","blY","getBboxVerts","nw","ne","se","sw","getCenter","setRotateXY","rotatedX","rotatedY","hitTest","padding","bBox","rotatedHitPoint","setRotatedX","prevRotatedX","setRotatedY","prevRotatedY","resizeAndKeepRotatedXY","preRotatedX","preRotatedY","dx","dy","renderFillAndStrokeTexture","ctx","smooth","Error","strokeTexture","fillImage","texture","src","img","imageSmoothingEnabled","Image","scale","sx","sy","drawImage","dMove","graphs","graph","MutateElementsAndRecord","setRotateX","editor","elements","length","prevXs","Array","i","len","element","commandManager","pushCommand","map","el","setRotateY","setWidth","prevAttrs","forEach","setHeight","setRotation"],"sources":["/Users/yangdan/zf-workspace/react/suika/packages/suika/src/editor/scene/graph.ts"],"sourcesContent":["import { SetElementsAttrs } from '../commands/set_elements_attrs';\nimport { Editor } from '../editor';\nimport { IBox, IBox2, GraphType, IPoint } from '../../type';\nimport { calcCoverScale, genId, objectNameGenerator } from '../../utils/common';\nimport {\n  getAbsoluteCoords,\n  getElementRotatedXY,\n  getRectCenterPoint,\n  isPointInRect,\n} from '../../utils/graphics';\nimport { transformRotate } from '../../utils/transform';\nimport { DEFAULT_IMAGE, ITexture, TextureImage } from '../texture';\n\nexport interface GraphAttrs {\n  type?: GraphType;\n  id?: string;\n  objectName?: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  // 颜色\n  fill?: ITexture[];\n  stroke?: ITexture[];\n  strokeWidth?: number;\n  // transform 相关\n  rotation?: number;\n}\n\nexport class Graph {\n  type = GraphType.Graph;\n  id: string;\n  objectName: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  // color\n  fill: ITexture[] = [];\n  stroke: ITexture[] = [];\n  strokeWidth?: number;\n  // transform\n  rotation?: number;\n  constructor(options: GraphAttrs) {\n    this.type = options.type ?? this.type;\n    this.id = options.id ?? genId();\n\n    if (options.objectName) {\n      this.objectName = options.objectName;\n      objectNameGenerator.setMaxIdx(options.objectName);\n    } else {\n      this.objectName = objectNameGenerator.gen(options.type ?? this.type);\n    }\n\n    this.x = options.x;\n    this.y = options.y;\n    this.width = options.width;\n    this.height = options.height;\n\n    if (options.fill) {\n      this.fill = options.fill;\n    }\n    if (options.stroke) {\n      this.stroke = options.stroke;\n    }\n    if (options.strokeWidth) {\n      this.strokeWidth = options.strokeWidth;\n    }\n    if (options.rotation) {\n      this.rotation = options.rotation;\n    }\n  }\n  getAttrs(): GraphAttrs {\n    return {\n      type: this.type,\n      id: this.id,\n      objectName: this.objectName,\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      fill: this.fill,\n      stroke: this.stroke,\n      strokeWidth: this.strokeWidth,\n      rotation: this.rotation,\n    };\n  }\n  setAttrs(attrs: Partial<GraphAttrs>) {\n    let key: keyof Partial<GraphAttrs>;\n    for (key in attrs) {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias, @typescript-eslint/no-explicit-any\n      const self: any = this;\n      self[key] = attrs[key];\n    }\n  }\n\n  /**\n   * 计算包围盒（不考虑 strokeWidth）\n   * 考虑旋转\n   */\n  getBBox(): IBox {\n    const [x, y, x2, y2, cx, cy] = getAbsoluteCoords(this);\n    const rotation = this.rotation;\n    if (!rotation) {\n      return this.getBBoxWithoutRotation();\n    }\n\n    const { x: nwX, y: nwY } = transformRotate(x, y, rotation, cx, cy); // 左上\n    const { x: neX, y: neY } = transformRotate(x2, y, rotation, cx, cy); // 右上\n    const { x: seX, y: seY } = transformRotate(x2, y2, rotation, cx, cy); // 右下\n    const { x: swX, y: swY } = transformRotate(x, y2, rotation, cx, cy); // 右下\n\n    const minX = Math.min(nwX, neX, seX, swX);\n    const minY = Math.min(nwY, neY, seY, swY);\n    const maxX = Math.max(nwX, neX, seX, swX);\n    const maxY = Math.max(nwY, neY, seY, swY);\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY,\n    };\n  }\n  /**\n   * AABB (axis-aligned bounding box)\n   */\n  getBBox2(): IBox2 {\n    const [x, y, x2, y2, cx, cy] = getAbsoluteCoords(this);\n    const rotation = this.rotation;\n    if (!rotation) {\n      const box = this.getBBoxWithoutRotation();\n      return {\n        minX: box.x,\n        minY: box.y,\n        maxX: box.x + box.width,\n        maxY: box.y + box.height,\n      };\n    }\n\n    const { x: tlX, y: tlY } = transformRotate(x, y, rotation, cx, cy); // 左上\n    const { x: trX, y: trY } = transformRotate(x2, y, rotation, cx, cy); // 右上\n    const { x: brX, y: brY } = transformRotate(x2, y2, rotation, cx, cy); // 右下\n    const { x: blX, y: blY } = transformRotate(x, y2, rotation, cx, cy); // 右下\n\n    const minX = Math.min(tlX, trX, brX, blX);\n    const minY = Math.min(tlY, trY, brY, blY);\n    const maxX = Math.max(tlX, trX, brX, blX);\n    const maxY = Math.max(tlY, trY, brY, blY);\n    return {\n      minX,\n      minY,\n      maxX,\n      maxY,\n    };\n  }\n  getBboxVerts(): [IPoint, IPoint, IPoint, IPoint] {\n    const [x, y, x2, y2, cx, cy] = getAbsoluteCoords(this);\n\n    const rotation = this.rotation;\n    if (!rotation) {\n      return [\n        { x: x, y: y },\n        { x: x2, y: y },\n        { x: x2, y: y2 },\n        { x: x, y: y2 },\n      ];\n    }\n\n    const nw = transformRotate(x, y, rotation, cx, cy); // 左上\n    const ne = transformRotate(x2, y, rotation, cx, cy); // 右上\n    const se = transformRotate(x2, y2, rotation, cx, cy); // 右下\n    const sw = transformRotate(x, y2, rotation, cx, cy); // 右下\n\n    return [nw, ne, se, sw];\n  }\n  getBBoxWithoutRotation() {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n    };\n  }\n  getCenter() {\n    return {\n      x: this.x + this.width / 2,\n      y: this.y + this.height / 2,\n    };\n  }\n  setRotateXY(rotatedX: number, rotatedY: number) {\n    const { x: cx, y: cy } = this.getCenter();\n    const { x, y } = transformRotate(\n      rotatedX,\n      rotatedY,\n      -(this.rotation || 0),\n      cx,\n      cy,\n    );\n    this.x = x;\n    this.y = y;\n  }\n  hitTest(x: number, y: number, padding = 0) {\n    const bBox = this.getBBoxWithoutRotation();\n    const [cx, cy] = getRectCenterPoint(bBox);\n    const rotatedHitPoint = this.rotation\n      ? transformRotate(x, y, -this.rotation, cx, cy)\n      : { x, y };\n\n    return isPointInRect(rotatedHitPoint, bBox, padding);\n  }\n  setRotatedX(rotatedX: number) {\n    const { x: prevRotatedX } = getElementRotatedXY(this);\n    this.x = this.x + rotatedX - prevRotatedX;\n  }\n  setRotatedY(rotatedY: number) {\n    const { y: prevRotatedY } = getElementRotatedXY(this);\n    this.y = this.y + rotatedY - prevRotatedY;\n  }\n  resizeAndKeepRotatedXY({\n    width,\n    height,\n  }: {\n    width?: number;\n    height?: number;\n  }) {\n    const { x: preRotatedX, y: preRotatedY } = getElementRotatedXY(this);\n    if (width) {\n      this.width = width;\n    }\n    if (height) {\n      this.height = height;\n    }\n    const { x: rotatedX, y: rotatedY } = getElementRotatedXY(this);\n    const dx = rotatedX - preRotatedX;\n    const dy = rotatedY - preRotatedY;\n    this.x -= dx;\n    this.y -= dy;\n  }\n  renderFillAndStrokeTexture(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ctx: CanvasRenderingContext2D,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    smooth: boolean,\n  ) {\n    throw new Error('Method not implemented.');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  strokeTexture(ctx: CanvasRenderingContext2D) {\n    throw new Error('Method not implemented.');\n  }\n\n  fillImage(\n    ctx: CanvasRenderingContext2D,\n    texture: TextureImage,\n    smooth: boolean,\n  ) {\n    const src = texture.attrs.src;\n    const width = this.width;\n    const height = this.height;\n    let img: CanvasImageSource;\n\n    // anti-aliasing\n    ctx.imageSmoothingEnabled = smooth;\n\n    if (src) {\n      img = new Image();\n      img.src = src;\n      // TODO: rerender when image loaded, but notice endless loop\n    } else {\n      ctx.imageSmoothingEnabled = false;\n      img = DEFAULT_IMAGE;\n    }\n\n    // reference: https://mp.weixin.qq.com/s/TSpZv_0VJtxPTCCzEqDl8Q\n    const scale = calcCoverScale(img.width, img.height, width, height);\n\n    const sx = img.width / 2 - width / scale / 2;\n    const sy = img.height / 2 - height / scale / 2;\n\n    ctx.drawImage(\n      img,\n      sx,\n      sy,\n      width / scale,\n      height / scale,\n      this.x,\n      this.y,\n      width,\n      height,\n    );\n  }\n\n  static dMove(graphs: Graph[], dx: number, dy: number) {\n    for (const graph of graphs) {\n      graph.x += dx;\n      graph.y += dy;\n    }\n  }\n}\n\n/**\n * 修改元素并保存到历史记录\n */\n\nexport const MutateElementsAndRecord = {\n  setRotateX(editor: Editor, elements: Graph[], rotatedX: number) {\n    if (elements.length === 0) {\n      return;\n    }\n    // 1. 计算新的 x\n    const prevXs: { x: number }[] = new Array(elements.length);\n    for (let i = 0, len = elements.length; i < len; i++) {\n      const element = elements[i];\n      prevXs[i] = { x: element.x };\n      element.setRotatedX(rotatedX);\n    }\n    // 2. 保存到历史记录\n    editor.commandManager.pushCommand(\n      new SetElementsAttrs(\n        'Update X of Elements',\n        elements,\n        elements.map((el) => ({ x: el.x })),\n        prevXs,\n      ),\n    );\n  },\n  setRotateY(editor: Editor, elements: Graph[], rotatedY: number) {\n    if (elements.length === 0) {\n      return;\n    }\n    // 1. 计算新的 x\n    const prevXs: { y: number }[] = new Array(elements.length);\n    for (let i = 0, len = elements.length; i < len; i++) {\n      const element = elements[i];\n      prevXs[i] = { y: element.y };\n      element.setRotatedY(rotatedY);\n    }\n    // 2. 保存到历史记录\n    editor.commandManager.pushCommand(\n      new SetElementsAttrs(\n        'Update Y of Elements',\n        elements,\n        elements.map((el) => ({ y: el.y })),\n        prevXs,\n      ),\n    );\n  },\n  setWidth(editor: Editor, elements: Graph[], width: number) {\n    if (elements.length === 0) {\n      return;\n    }\n\n    const prevAttrs = elements.map((el) => ({\n      x: el.x,\n      y: el.y,\n      width: el.width,\n    }));\n    elements.forEach((el) => {\n      const { x: preRotatedX, y: preRotatedY } = getElementRotatedXY(el);\n      el.width = width;\n      const { x: rotatedX, y: rotatedY } = getElementRotatedXY(el);\n      const dx = rotatedX - preRotatedX;\n      const dy = rotatedY - preRotatedY;\n      el.x -= dx;\n      el.y -= dy;\n    });\n    editor.commandManager.pushCommand(\n      new SetElementsAttrs(\n        'Update Width of Elements',\n        elements,\n        elements.map((el) => ({ width: el.width, x: el.x, y: el.y })),\n        prevAttrs,\n      ),\n    );\n  },\n  setHeight(editor: Editor, elements: Graph[], height: number) {\n    if (elements.length === 0) {\n      return;\n    }\n\n    const prevAttrs = elements.map((el) => ({\n      x: el.x,\n      y: el.y,\n      height: el.height,\n    }));\n    elements.forEach((el) => {\n      const { x: preRotatedX, y: preRotatedY } = getElementRotatedXY(el);\n      el.height = height;\n      const { x: rotatedX, y: rotatedY } = getElementRotatedXY(el);\n      const dx = rotatedX - preRotatedX;\n      const dy = rotatedY - preRotatedY;\n      el.x -= dx;\n      el.y -= dy;\n    });\n    editor.commandManager.pushCommand(\n      new SetElementsAttrs(\n        'update Height of Elements',\n        elements,\n        elements.map((el) => ({ height: el.height, x: el.x, y: el.y })),\n        prevAttrs,\n      ),\n    );\n  },\n  setRotation(editor: Editor, elements: Graph[], rotation: number) {\n    if (elements.length === 0) {\n      return;\n    }\n\n    const prevAttrs = elements.map((el) => ({ rotation: el.rotation || 0 }));\n    elements.forEach((el) => {\n      el.rotation = rotation;\n    });\n    editor.commandManager.pushCommand(\n      new SetElementsAttrs(\n        'update Rotation',\n        elements,\n        { rotation },\n        prevAttrs,\n      ),\n    );\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}